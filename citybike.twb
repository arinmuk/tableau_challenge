<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Birth Year Parameter' datatype='integer' name='[Birth Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1885'>
        <calculation class='tableau' formula='1885' />
        <range max='2019' min='1885' />
      </column>
      <column caption='HourlyUsage' datatype='datetime' default-format='*AMPM h:' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2019-02-28 23:56:00#'>
        <calculation class='tableau' formula='#2019-02-28 23:56:00#' />
        <range max='#2019-02-28 23:56:00#' min='#2017-01-01 00:21:32#' />
      </column>
      <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
        <calculation class='tableau' formula='10.0' />
        <range granularity='1.0' max='10.0' min='5.0' />
      </column>
    </datasource>
    <datasource caption='Merged_CitiBike_trip (citybike)' inline='true' name='federated.0wv7p0t1o2g9an19crl340olj3jb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yoga900' name='sqlserver.1xhw39m12rl0v71cwxdhm1fuj3sg'>
            <connection authentication='sspi' class='sqlserver' dbname='citybike' odbc-native-protocol='yes' one-time-sql='' server='yoga900' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.1xhw39m12rl0v71cwxdhm1fuj3sg' name='Merged_CitiBike_trip' table='[dbo].[Merged_CitiBike_trip]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>TripDuration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TripDuration]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>TripDuration</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StartTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[StartTime]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>StartTime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StopTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[StopTime]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>StopTime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station ID]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station Name]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station Name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station Latitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station Latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station Longitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station ID]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station Name]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station Latitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station Latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station Longitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station Longitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BikeID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BikeID]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>BikeID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserType]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>UserType</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Birth Year]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Birth Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bikes Needing Repair' datatype='string' name='[Bike ID (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[BikeID]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;15,380, 16,258, 19,418 and 7 more&quot;'>
            <value>15380</value>
            <value>16258</value>
            <value>19418</value>
            <value>21418</value>
            <value>23787</value>
            <value>23877</value>
            <value>25120</value>
            <value>25522</value>
            <value>25786</value>
            <value>26148</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='CountD' caption='Bike ID' datatype='integer' datatype-customized='true' name='[BikeID]' role='measure' type='quantitative' />
      <column datatype='integer' datatype-customized='true' name='[Birth Year]' role='dimension' type='ordinal' />
      <column caption='Season' datatype='string' name='[Calculation_1018376513883774979]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (Month([StartTime]) = 12) or&#13;&#10;&#13;&#10;   (Month([StartTime]) = 1) or &#13;&#10;   (Month([StartTime]) = 2) then &apos;Winter&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 3) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 4) or &#13;&#10;    (Month([StartTime]) = 5) then &apos;Spring&apos;&#13;&#10;&#13;&#10;    &#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 6)  or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 7) or &#13;&#10;    (Month([StartTime]) = 8) then &apos;Summer&apos;&#13;&#10;&#13;&#10;    &#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 9) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 10) or &#13;&#10;    (Month([StartTime]) = 11) then &apos;Fall&apos;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='MatchHour' datatype='boolean' name='[Calculation_1018376513888137221]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;,[StartTime] )=DATEPART(&apos;hour&apos;,[Parameters].[Parameter 1])' />
      </column>
      <column aggregation='CountD' caption='subset Labels Top/Bot Start' datatype='string' name='[Calculation_325666596576743424]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Top 10 Station Start]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSEIF [Top N Station Start (copy)]&#13;&#10;THEN &quot;Bottom &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column caption='Male_Female' datatype='string' name='[Calculation_325666596606459905]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Gender] = 1 then&#13;&#10;&quot;Male&quot;&#13;&#10;ELSEIF  [Gender] = 2 then&#13;&#10;&quot;Female&quot;&#13;&#10;ELSE&#13;&#10;&quot;Unknown&quot;&#13;&#10;END' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_325666596610838530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='year([StartTime])-[Birth Year]' />
      </column>
      <column caption='Duration In Minutes' datatype='real' name='[Calculation_325666596614881283]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TripDuration]/60' />
      </column>
      <column caption='MilesRidden' datatype='real' name='[Calculation_325666596619960324]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([TripDuration])/3600)*7.456' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[End Station ID]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[End Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[End Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Gender]' role='measure' type='quantitative' />
      <column datatype='datetime' name='[Hours (Days)]' role='dimension' type='quantitative' user:agg-type='Day-Trunc' user:base-field='Start Time (copy)' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATETRUNC(&apos;day&apos;, [Start Time (copy)])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Start Station ID]' role='measure' type='quantitative' />
      <column datatype='real' datatype-customized='true' default-format='*00000' name='[Start Station Latitude (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
        <calculation class='tableau' formula='[Start Station Latitude]' />
      </column>
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[Start Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='real' datatype-customized='true' default-format='*00000' name='[Start Station Longitude (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
        <calculation class='tableau' formula='[Start Station Longitude]' />
      </column>
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[Start Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
      <column caption='Hours' datatype='datetime' name='[Start Time (copy)]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='[StartTime]' />
      </column>
      <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Stop Time' datatype='datetime' name='[StopTime]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
      <column caption='User Type' datatype='string' name='[UserType]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='subset Labels Bottom End Stations' datatype='string' name='[subset Labels Top/Bot Start (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Bottom N Station Stop]&#13;&#10;THEN &quot;Bottom &quot; + str([Parameters].[Parameter 2]) + &quot; END Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column-instance column='[Bottom N Station Stop]' derivation='InOut' name='[io:Bottom N Station Stop:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 10 Station Start]' derivation='InOut' name='[io:Top 10 Station Start:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_325666596606459905]' derivation='None' name='[none:Calculation_325666596606459905:nk]' pivot='key' type='nominal' />
      <column-instance column='[UserType]' derivation='None' name='[none:UserType:nk]' pivot='key' type='nominal' />
      <column-instance column='[StartTime]' derivation='Year' name='[yr:StartTime:ok]' pivot='key' type='ordinal' />
      <group caption='Bottom N Station Stop' name='[Bottom N Station Stop]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[End Station Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top N Station Start' name='[Top 10 Station Start]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Start Station Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom N Station Start' name='[Top N Station Start (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Start Station Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.430364' group-percentage='0.0803011' measure-ordering='alphabetic' measure-percentage='0.410289' parameter-percentage='0.0790464' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:UserType:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;14866&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;16242&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;17898&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19102&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;20765&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;24820&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;25147&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;25360&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;25511&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;25724&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;25990&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;26361&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;26628&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;26839&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27033&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27355&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27601&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27781&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28002&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28174&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28413&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28639&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28781&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28987&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29154&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29788&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;15661&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;17229&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18530&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19953&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21427&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;24990&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;25297&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;25410&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;25654&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;25877&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;26122&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;26548&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;26797&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;26948&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27176&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27483&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27721&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27931&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;28087&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;28322&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;28508&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;28740&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;28941&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;29077&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;29424&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;14654&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;15968&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;17427&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18910&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;20351&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21635&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25083&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25308&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25454&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25702&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25930&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;26150&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;26576&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;26821&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;26982&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27242&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27566&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27749&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27974&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28130&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28353&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28565&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28766&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28956&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;29102&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;29726&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;15037&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;16543&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;18270&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19337&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;20821&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;24867&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;25159&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;25372&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;25541&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;25761&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26029&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26405&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26664&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26867&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27081&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27378&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27651&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27812&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28026&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28216&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28434&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28680&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28833&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;29018&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;29335&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;29806&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;14899&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;16285&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;17920&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19231&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;20766&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;24828&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25150&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25363&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25528&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25738&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26012&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26366&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26639&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26840&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27056&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27357&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27611&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27788&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28012&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28183&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28416&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28641&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28793&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28997&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;29171&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;29789&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;14799&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;16015&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;17517&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19017&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;20380&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;21873&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25115&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25311&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25480&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25705&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25965&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26320&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26582&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26825&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26990&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27244&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27579&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27754&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27977&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28147&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28368&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28588&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28767&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28965&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;29118&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;29732&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;15345&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;15632&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;17110&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18489&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19735&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21141&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;24963&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25240&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25406&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25629&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25856&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26095&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26515&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26788&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26940&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27161&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27468&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27691&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27884&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28079&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28253&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28494&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28733&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28891&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;29063&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;29415&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;14551&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;15717&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;17230&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;18543&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;20010&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21475&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;25010&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;25298&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;25436&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;25668&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;25902&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;26125&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;26551&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;26801&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;26951&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27192&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27484&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27722&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27939&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28093&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28323&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28510&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28744&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28947&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;29093&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;29563&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;-74.00835871696472&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;15261&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;16867&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;18439&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19492&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21047&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24935&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;25213&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;25404&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;25595&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;25844&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;26077&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;26464&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;26738&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;26920&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;27129&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;27405&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;27678&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;27844&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28062&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28228&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28449&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28712&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28877&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29049&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29396&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;14801&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;16099&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;17781&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19077&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;20563&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;22357&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25140&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25323&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25492&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25713&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25967&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;26322&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;26592&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;26827&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27005&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27276&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27596&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27760&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27989&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28165&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28382&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28606&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28770&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28975&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;29130&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;29761&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;15040&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;16561&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;18273&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19365&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;20838&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;24872&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;25190&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;25378&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;25546&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;25770&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;26055&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;26421&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;26695&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;26878&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27082&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27380&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27654&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27817&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28037&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28219&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28436&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28686&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28844&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;29025&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;29355&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;29809&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15104&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;16590&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;18319&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19366&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;20931&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;24918&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25203&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25388&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25547&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25827&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;26062&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;26427&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;26711&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;26904&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27086&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27386&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27669&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27822&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28045&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28226&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28439&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28699&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28856&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;29038&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;29361&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;29820&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;15264&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;15624&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17086&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18472&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19627&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21098&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;24960&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;25218&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;25405&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;25601&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;25850&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;26084&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;26481&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;26777&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;26933&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27141&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27458&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27687&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27871&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28064&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28240&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28475&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28728&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28887&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;29056&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;29414&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15428&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15646&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;17154&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18519&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19815&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21359&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;24966&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;25252&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;25408&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;25640&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;25874&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;26097&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;26546&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;26792&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;26945&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27173&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27478&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27704&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27889&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;28086&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;28292&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;28499&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;28738&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;28919&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;29072&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;29419&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;16443&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;17944&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19260&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;20799&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;24862&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25152&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25365&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25538&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25746&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;26016&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;26371&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;26642&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;26848&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;27068&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;27358&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;27618&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;27810&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28014&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28210&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28419&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28649&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28802&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29006&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29175&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29790&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Subscriber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;14853&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16183&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;17867&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19090&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;20754&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;24808&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25141&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25334&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25507&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25723&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25989&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;26345&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;26594&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;26834&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27030&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27295&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27597&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27763&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27994&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28173&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28387&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28610&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28775&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28986&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;29143&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;29784&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;15821&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;17252&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18778&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20138&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21574&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25016&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25306&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25444&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25672&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25906&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;26129&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;26554&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;26810&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;26955&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;27204&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;27494&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;27724&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;27956&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28104&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28334&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28529&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28758&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28950&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;29094&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;29650&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Customer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15154&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16855&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;18417&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19419&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;20986&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;24928&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;25205&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;25400&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;25549&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;25838&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;26076&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;26453&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;26725&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;26919&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27114&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27394&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27670&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27831&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28048&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28227&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28446&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28701&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28874&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;29047&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;29388&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;30046&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14961&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;16537&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;17992&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19306&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;20814&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;24866&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25155&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25371&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25540&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25748&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26024&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26383&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26645&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26863&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;27074&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;27359&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;27636&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;27811&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28017&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28214&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28430&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28658&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28812&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;29015&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;29319&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;29792&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;14646&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;15864&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;17272&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;18798&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;20215&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;21629&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;25060&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;25307&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;25453&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;25680&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;25909&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;26147&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;26556&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;26814&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;26976&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27241&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27559&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27746&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27959&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28113&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28341&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28562&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28759&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28951&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;29101&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;29713&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Bottom N Station Stop:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_325666596606459905:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 10 Station Start:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:StartTime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2019</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Bike ID (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;15,380, 16,258, 19,418 and 7 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='HourlyUsage' datatype='datetime' default-format='*AMPM h:' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2019-02-28 23:56:00#'>
          <calculation class='tableau' formula='#2019-02-28 23:56:00#' />
          <range max='#2019-02-28 23:56:00#' min='#2017-01-01 00:21:32#' />
        </column>
        <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
          <range granularity='1.0' max='10.0' min='5.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Distance in Miles A Bike is Ridden'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column aggregation='CountD' caption='Bike ID' datatype='integer' datatype-customized='true' name='[BikeID]' role='measure' type='quantitative' />
            <column caption='MilesRidden' datatype='real' name='[Calculation_325666596619960324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([TripDuration])/3600)*7.456' />
            </column>
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_325666596619960324]' derivation='Avg' name='[avg:Calculation_325666596619960324:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BikeID]' derivation='None' name='[none:BikeID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:Calculation_325666596619960324:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:BikeID:qk]</cols>
      </table>
      <simple-id uuid='{911DC243-A9E4-4AF2-928F-6BBB14D41742}' />
    </worksheet>
    <worksheet name='Avg Trip Duration By Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' datatype-customized='true' name='[Birth Year]' role='dimension' type='ordinal' />
            <column caption='Age' datatype='integer' name='[Calculation_325666596610838530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='year([StartTime])-[Birth Year]' />
            </column>
            <column caption='Duration In Minutes' datatype='real' name='[Calculation_325666596614881283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TripDuration]/60' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_325666596614881283]' derivation='Avg' name='[avg:Calculation_325666596614881283:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Birth Year]' derivation='None' name='[none:Birth Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_325666596610838530]' derivation='None' name='[none:Calculation_325666596610838530:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Birth Year:ok]'>
            <groupfilter from='1857' function='range' level='[none:Birth Year:ok]' to='2002' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Birth Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:Calculation_325666596614881283:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596610838530:qk]</cols>
      </table>
      <simple-id uuid='{EC0F6FB7-C50F-4774-AD49-09A54E414BC7}' />
    </worksheet>
    <worksheet name='Bikes With Repair Possibilites'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column caption='Bikes Needing Repair' datatype='string' name='[Bike ID (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[BikeID]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;15,380, 16,258, 19,418 and 7 more&quot;'>
                  <value>15380</value>
                  <value>16258</value>
                  <value>19418</value>
                  <value>21418</value>
                  <value>23787</value>
                  <value>23877</value>
                  <value>25120</value>
                  <value>25522</value>
                  <value>25786</value>
                  <value>26148</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='CountD' caption='Bike ID' datatype='integer' datatype-customized='true' name='[BikeID]' role='measure' type='quantitative' />
            <column caption='MilesRidden' datatype='real' name='[Calculation_325666596619960324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([TripDuration])/3600)*7.456' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[BikeID]' derivation='None' name='[none:BikeID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_325666596619960324]' derivation='Sum' name='[sum:Calculation_325666596619960324:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StartTime]' derivation='Year-Trunc' name='[tyr:StartTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StartTime]' derivation='Year' name='[yr:StartTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[Bike ID (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Bike ID (group)]' />
              <groupfilter function='member' level='[Bike ID (group)]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]'>
            <groupfilter function='level-members' level='[yr:StartTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[Bike ID (group)]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:ok]' />
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Calculation_325666596619960324:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Calculation_325666596619960324:qk]</rows>
        <cols>([federated.0wv7p0t1o2g9an19crl340olj3jb].[Bike ID (group)] / ([federated.0wv7p0t1o2g9an19crl340olj3jb].[none:BikeID:ok] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:ok]))</cols>
      </table>
      <simple-id uuid='{E17E9AE9-70F6-4109-9524-73E443804C6F}' />
    </worksheet>
    <worksheet name='Bottom 10 Stations For Journey END'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='1.0' max='10.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bottom N Station Stop]' derivation='InOut' name='[io:Bottom N Station Stop:nk]' pivot='key' type='nominal' />
            <column-instance column='[End Station Name]' derivation='None' name='[none:End Station Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[subset Labels Top/Bot Start (copy)]' derivation='None' name='[none:subset Labels Top/Bot Start (copy):nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='subset Labels Bottom End Stations' datatype='string' name='[subset Labels Top/Bot Start (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Bottom N Station Stop]&#13;&#10;THEN &quot;Bottom &quot; + str([Parameters].[Parameter 2]) + &quot; END Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
            </column>
          </datasource-dependencies>
          <manual-sort column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Pershing Square North&quot;</bucket>
              <bucket>&quot;Grove St PATH&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Great Jones St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;Exchange Place&quot;</bucket>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Hamilton Park&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Pershing Square South&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;Sip Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
              <bucket>&quot;West Thames St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
              <bucket>&quot;Newport PATH&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Old Fulton St&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
              <bucket>&quot;Morris Canal&quot;</bucket>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;City Hall&quot;</bucket>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Warren St&quot;</bucket>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
              <bucket>&quot;Newark Ave&quot;</bucket>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
              <bucket>&quot;Paulus Hook&quot;</bucket>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;Columbus Drive&quot;</bucket>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
              <bucket>&quot;Brunswick St&quot;</bucket>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
              <bucket>&quot;Brunswick &amp; 6th&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; St Felix St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
              <bucket>&quot;Cherry St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
              <bucket>&quot;Harborside&quot;</bucket>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Dixon Mills&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; North Moore St&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;JC Medical Center&quot;</bucket>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
              <bucket>&quot;McGinley Square&quot;</bucket>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Washington St&quot;</bucket>
              <bucket>&quot;Oakland Ave&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
              <bucket>&quot;Pershing Field&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St N&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Washington Park&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
              <bucket>&quot;Lincoln Park&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
              <bucket>&quot;Journal Square&quot;</bucket>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;Astor Place&quot;</bucket>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
              <bucket>&quot;Soissons Landing&quot;</bucket>
              <bucket>&quot;E 77 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;Lafayette Park&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
              <bucket>&quot;Heights Elevator&quot;</bucket>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
              <bucket>&quot;Hilltop&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
              <bucket>&quot;Grand St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
              <bucket>&quot;5 Corners Library&quot;</bucket>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St N&quot;</bucket>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;York St&quot;</bucket>
              <bucket>&quot;Dey St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Christ Hospital&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
              <bucket>&quot;Riverview Park&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Montgomery St&quot;</bucket>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
              <bucket>&quot;Cadman Plaza W &amp; Pierrepont St&quot;</bucket>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
              <bucket>&quot;Union St&quot;</bucket>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
              <bucket>&quot;Bergen Ave&quot;</bucket>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;N Henry St &amp; Richardson St&quot;</bucket>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Garfield Ave Station&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;KentAve&amp;N7 St&quot;</bucket>
              <bucket>&quot;Central Ave&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;North St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;Glenwood Ave&quot;</bucket>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
              <bucket>&quot;PABT Valet&quot;</bucket>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
              <bucket>&quot;West Side Light Rail&quot;</bucket>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
              <bucket>&quot;NJCU&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
              <bucket>&quot;78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
              <bucket>&quot;Hs Don&apos;t Use&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
              <bucket>&quot;WS Don&apos;t Use&quot;</bucket>
              <bucket>&quot;Danforth Light Rail&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
              <bucket>&quot;Columbia Park&quot;</bucket>
              <bucket>&quot;Jackson Square&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; MacDonough St&quot;</bucket>
              <bucket>&quot;JCBS Depot&quot;</bucket>
              <bucket>&quot;MLK Light Rail&quot;</bucket>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
              <bucket>&quot;Bayside Park&quot;</bucket>
              <bucket>&quot;JSQ Don&apos;t Use&quot;</bucket>
              <bucket>&quot;Adventures NYC&quot;</bucket>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
              <bucket>&quot;NYCBS Depot - DEL&quot;</bucket>
              <bucket>&quot;Bethune Center&quot;</bucket>
              <bucket>&quot;E 40 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St S&quot;</bucket>
              <bucket>&quot;Bike in Movie Night | Prospect Park Bandshell&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
              <bucket>&quot;Bike The Branches - Red Hook Branch&quot;</bucket>
              <bucket>&quot;Bressler&quot;</bucket>
              <bucket>&quot;8D OPS 01&quot;</bucket>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
              <bucket>&quot;Washington Square E&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
              <bucket>&quot;\&quot;W 45 St &amp; 6 Ave\&quot;\&quot;\&quot;&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 22 St - Valet Scan&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
              <bucket>&quot;Cliff St &amp; Fulton St_1&quot;</bucket>
              <bucket>&quot;SSP - Basement&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:subset Labels Top/Bot Start (copy):nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subset Labels Top/Bot Start (copy):nk]' />
              <groupfilter function='member' level='[none:subset Labels Top/Bot Start (copy):nk]' member='&quot;Others&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='cols' value='Number Of Trips in Thousands' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk] / ([federated.0wv7p0t1o2g9an19crl340olj3jb].[none:subset Labels Top/Bot Start (copy):nk] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]))</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{34412318-9F31-4A14-ADC7-B8E613173665}' />
    </worksheet>
    <worksheet name='Gender Outreach for Female Participation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column caption='Male_Female' datatype='string' name='[Calculation_325666596606459905]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Gender] = 1 then&#13;&#10;&quot;Male&quot;&#13;&#10;ELSEIF  [Gender] = 2 then&#13;&#10;&quot;Female&quot;&#13;&#10;ELSE&#13;&#10;&quot;Unknown&quot;&#13;&#10;END' />
            </column>
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Gender]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_325666596606459905]' derivation='None' name='[none:Calculation_325666596606459905:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StartTime]' derivation='Year-Trunc' name='[tyr:StartTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]'>
            <groupfilter function='member' level='[none:Calculation_325666596606459905:nk]' member='&quot;Female&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:qk]' scope='cols' value='Years' />
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' scope='rows' value='Trips in Thousands' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:qk]</cols>
      </table>
      <simple-id uuid='{213EC04B-0DE0-47AC-861B-C9C02007C60B}' />
    </worksheet>
    <worksheet name='Gender: Male vs Female Participants'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column caption='Male_Female' datatype='string' name='[Calculation_325666596606459905]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Gender] = 1 then&#13;&#10;&quot;Male&quot;&#13;&#10;ELSEIF  [Gender] = 2 then&#13;&#10;&quot;Female&quot;&#13;&#10;ELSE&#13;&#10;&quot;Unknown&quot;&#13;&#10;END' />
            </column>
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Gender]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_325666596606459905]' derivation='None' name='[none:Calculation_325666596606459905:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' scope='rows' value='Trips In Thousands' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</rows>
        <cols>([federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk])</cols>
      </table>
      <simple-id uuid='{17A866A7-BAF3-4C4D-8B47-9D466CCD6CFE}' />
    </worksheet>
    <worksheet name='Number of Recorded Trips'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StartTime]' derivation='Year' name='[yr:StartTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='rows' value='Trips in Thousands' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</cols>
      </table>
      <simple-id uuid='{0303729B-DE47-4FCE-95EE-6273B80A6884}' />
    </worksheet>
    <worksheet name='Peak Summer/Winter( Seasonal) Usage by Time in Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='HourlyUsage' datatype='datetime' default-format='*AMPM h:' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2019-02-28 23:56:00#'>
              <calculation class='tableau' formula='#2019-02-28 23:56:00#' />
              <range max='#2019-02-28 23:56:00#' min='#2017-01-01 00:21:32#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column caption='Season' datatype='string' name='[Calculation_1018376513883774979]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (Month([StartTime]) = 12) or&#13;&#10;&#13;&#10;   (Month([StartTime]) = 1) or &#13;&#10;   (Month([StartTime]) = 2) then &apos;Winter&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 3) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 4) or &#13;&#10;    (Month([StartTime]) = 5) then &apos;Spring&apos;&#13;&#10;&#13;&#10;    &#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 6)  or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 7) or &#13;&#10;    (Month([StartTime]) = 8) then &apos;Summer&apos;&#13;&#10;&#13;&#10;    &#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 9) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 10) or &#13;&#10;    (Month([StartTime]) = 11) then &apos;Fall&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='MatchHour' datatype='boolean' name='[Calculation_1018376513888137221]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;,[StartTime] )=DATEPART(&apos;hour&apos;,[Parameters].[Parameter 1])' />
            </column>
            <column datatype='datetime' name='[Hours (Days)]' role='dimension' type='quantitative' user:agg-type='Day-Trunc' user:base-field='Start Time (copy)' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATETRUNC(&apos;day&apos;, [Start Time (copy)])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Hours' datatype='datetime' name='[Start Time (copy)]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[StartTime]' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TripDuration]' derivation='CountD' name='[ctd:TripDuration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hours (Days)]' derivation='Hour' name='[hr:Hours (Days):ok]' pivot='key' type='ordinal' />
            <column-instance column='[StartTime]' derivation='Hour' name='[hr:StartTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1018376513883774979]' derivation='None' name='[none:Calculation_1018376513883774979:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1018376513888137221]' derivation='None' name='[none:Calculation_1018376513888137221:nk]' pivot='key' type='nominal' />
            <column-instance column='[StartTime]' derivation='Quarter' name='[qr:StartTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[hr:Hours (Days):ok]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[hr:Hours (Days):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1018376513883774979:nk]' member='&quot;Summer&quot;' />
              <groupfilter function='member' level='[none:Calculation_1018376513883774979:nk]' member='&quot;Winter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513888137221:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_1018376513888137221:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]' direction='ASC' measure-to-sort-by='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[hr:Hours (Days):ok]</column>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513888137221:nk]</column>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='rows' value='Number of Trips' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]' />
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[ctd:TripDuration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</rows>
        <cols>([federated.0wv7p0t1o2g9an19crl340olj3jb].[hr:StartTime:ok] / ([federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]))</cols>
      </table>
      <simple-id uuid='{974081F7-7B7E-4AA4-9E6D-01F628ABDE48}' />
    </worksheet>
    <worksheet name='Percentage Growth In Ridership'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcdf:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[StartTime]' derivation='Quarter' name='[qr:StartTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StartTime]' derivation='Year' name='[yr:StartTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[pcdf:cnt:Number of Records:qk]' scope='rows' value='% Difference in Ridership' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[pcdf:cnt:Number of Records:qk]</rows>
        <cols>([federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok])</cols>
      </table>
      <simple-id uuid='{B7E3CE36-8D26-4F9F-8120-34038B3BE25B}' />
    </worksheet>
    <worksheet name='Popular Location for Trip End'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[End Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[End Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[End Station Longitude]' derivation='Avg' name='[avg:End Station Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[End Station Latitude]' derivation='None' name='[none:End Station Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[End Station Name]' derivation='None' name='[none:End Station Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]'>
            <groupfilter function='level-members' level='[none:End Station Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' included-values='in-range'>
            <min>1</min>
            <max>485396</max>
          </filter>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]</column>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:End Station Longitude:qk]' field-type='quantitative' max='-8215801.6398157319' min='-8252843.1688157357' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Latitude:qk]' field-type='quantitative' max='4979117.5114448629' min='4963664.6036411803' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' value='Trips to End Station'>
              <formatted-text>
                <run>Trips to End Station</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' value='Trips to End Station'>
              <formatted-text>
                <run>Trips to End Station</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
              <size column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
              <tooltip column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Latitude:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:End Station Longitude:qk]</cols>
      </table>
      <simple-id uuid='{8B69EC6A-F8A8-45F9-9E27-373C227F4101}' />
    </worksheet>
    <worksheet name='Popular Locations of Trip Start'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[Start Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[Start Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column-instance column='[Start Station Longitude]' derivation='Avg' name='[avg:Start Station Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Station Latitude]' derivation='None' name='[none:Start Station Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Station Name]' derivation='None' name='[none:Start Station Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>1</min>
            <max>491343</max>
          </filter>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]'>
            <groupfilter function='level-members' level='[none:Start Station Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]</column>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Latitude:qk]' field-type='quantitative' max='4980652.3869078951' min='4967658.0923231067' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:Start Station Longitude:qk]' field-type='quantitative' max='-8213680.1856745994' min='-8244828.2741646077' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' value='Trips Per Station'>
              <formatted-text>
                <run>Trips Per Station</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' value='Trips Per Station'>
              <formatted-text>
                <run>Trips Per Station</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
              <size column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]' />
              <tooltip column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Latitude:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:Start Station Longitude:qk]</cols>
      </table>
      <simple-id uuid='{025EF0B5-62B9-4CDA-9F24-ED8DBDAA270E}' />
    </worksheet>
    <worksheet name='Quarterly Customer Vs Subscriber Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column caption='User Type' datatype='string' name='[UserType]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UserType]' derivation='None' name='[none:UserType:nk]' pivot='key' type='nominal' />
            <column-instance column='[StartTime]' derivation='Quarter-Trunc' name='[tqr:StartTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:UserType:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:UserType:nk]' />
              <groupfilter function='member' level='[none:UserType:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='rows' value='Trips Taken In Thousands' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:UserType:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[tqr:StartTime:qk]</cols>
      </table>
      <simple-id uuid='{3E000999-1AC2-436A-843C-1BCB5358E9C7}' />
    </worksheet>
    <worksheet name='Top/Bottom 10 Stations For Journey Start'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='1.0' max='10.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column aggregation='CountD' caption='subset Labels Top/Bot Start' datatype='string' name='[Calculation_325666596576743424]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 10 Station Start]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSEIF [Top N Station Start (copy)]&#13;&#10;THEN &quot;Bottom &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Station Start]' derivation='InOut' name='[io:Top 10 Station Start:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_325666596576743424]' derivation='None' name='[none:Calculation_325666596576743424:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Station Name]' derivation='None' name='[none:Start Station Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596576743424:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_325666596576743424:nk]' />
              <groupfilter function='member' level='[none:Calculation_325666596576743424:nk]' member='&quot;Others&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
              <bucket>&quot;5 Corners Library&quot;</bucket>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St N&quot;</bucket>
              <bucket>&quot;Pershing Square North&quot;</bucket>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
              <bucket>&quot;Grove St PATH&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
              <bucket>&quot;8D OPS 01&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Adventures NYC&quot;</bucket>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Astor Place&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
              <bucket>&quot;Bayside Park&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
              <bucket>&quot;Bergen Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
              <bucket>&quot;Bethune Center&quot;</bucket>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
              <bucket>&quot;Bike in Movie Night | Prospect Park Bandshell&quot;</bucket>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
              <bucket>&quot;Bike The Branches - Red Hook Branch&quot;</bucket>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;Bressler&quot;</bucket>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
              <bucket>&quot;Brunswick &amp; 6th&quot;</bucket>
              <bucket>&quot;Brunswick St&quot;</bucket>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Cadman Plaza W &amp; Pierrepont St&quot;</bucket>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
              <bucket>&quot;Central Ave&quot;</bucket>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
              <bucket>&quot;Cherry St&quot;</bucket>
              <bucket>&quot;Christ Hospital&quot;</bucket>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;City Hall&quot;</bucket>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
              <bucket>&quot;Columbia Park&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
              <bucket>&quot;Columbus Drive&quot;</bucket>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Danforth Light Rail&quot;</bucket>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
              <bucket>&quot;Dey St&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
              <bucket>&quot;Dixon Mills&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 40 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 77 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
              <bucket>&quot;Exchange Place&quot;</bucket>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
              <bucket>&quot;Garfield Ave Station&quot;</bucket>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Glenwood Ave&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
              <bucket>&quot;Grand St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
              <bucket>&quot;Great Jones St&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; North Moore St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Hamilton Park&quot;</bucket>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; St Felix St&quot;</bucket>
              <bucket>&quot;Harborside&quot;</bucket>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Heights Elevator&quot;</bucket>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
              <bucket>&quot;Hilltop&quot;</bucket>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
              <bucket>&quot;Jackson Square&quot;</bucket>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
              <bucket>&quot;JC Medical Center&quot;</bucket>
              <bucket>&quot;JCBS Depot&quot;</bucket>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
              <bucket>&quot;Journal Square&quot;</bucket>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
              <bucket>&quot;KentAve&amp;N7 St&quot;</bucket>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
              <bucket>&quot;Lafayette Park&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St N&quot;</bucket>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Lincoln Park&quot;</bucket>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; MacDonough St&quot;</bucket>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
              <bucket>&quot;McGinley Square&quot;</bucket>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St S&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;MLK Light Rail&quot;</bucket>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Montgomery St&quot;</bucket>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
              <bucket>&quot;Morris Canal&quot;</bucket>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;N Henry St &amp; Richardson St&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
              <bucket>&quot;Newark Ave&quot;</bucket>
              <bucket>&quot;Newport PATH&quot;</bucket>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
              <bucket>&quot;NJCU&quot;</bucket>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
              <bucket>&quot;North St&quot;</bucket>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
              <bucket>&quot;Oakland Ave&quot;</bucket>
              <bucket>&quot;Old Fulton St&quot;</bucket>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;PABT Valet&quot;</bucket>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;Paulus Hook&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Pershing Field&quot;</bucket>
              <bucket>&quot;Pershing Square South&quot;</bucket>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
              <bucket>&quot;Riverview Park&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
              <bucket>&quot;Sip Ave&quot;</bucket>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
              <bucket>&quot;Soissons Landing&quot;</bucket>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
              <bucket>&quot;Union St&quot;</bucket>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
              <bucket>&quot;Warren St&quot;</bucket>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Washington Park&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
              <bucket>&quot;Washington Square E&quot;</bucket>
              <bucket>&quot;Washington St&quot;</bucket>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
              <bucket>&quot;West Side Light Rail&quot;</bucket>
              <bucket>&quot;West Thames St&quot;</bucket>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
              <bucket>&quot;York St&quot;</bucket>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk] / ([federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596576743424:nk] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]))</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{934707CB-A591-4077-A229-C5D1945D80C0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Popular Station Start /End'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
      </datasources>
      <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
        <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
        <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
        <column-instance column='[End Station Name]' derivation='None' name='[none:End Station Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Start Station Name]' derivation='None' name='[none:Start Station Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Popular Locations of Trip Start' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Popular Location for Trip End' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='35812' id='8' name='Popular Locations of Trip Start' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Popular Locations of Trip Start' pane-specification-id='1' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='color' w='16000' x='83200' y='36812'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18250' id='10' name='Popular Locations of Trip Start' pane-specification-id='1' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='size' w='16000' x='83200' y='44937'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35813' id='12' name='Popular Location for Trip End' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]' type='filter' w='16000' x='83200' y='63187'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='35812' id='8' mode='checkdropdown' name='Popular Locations of Trip Start' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]' type='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Popular Locations of Trip Start' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Popular Locations of Trip Start' pane-specification-id='1' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='color' w='16000' x='83200' y='36812'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='10' name='Popular Locations of Trip Start' pane-specification-id='1' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='size' w='16000' x='83200' y='44937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35813' id='12' mode='checkdropdown' name='Popular Location for Trip End' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]' type='filter' w='16000' x='83200' y='63187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Popular Location for Trip End' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EADF0274-75A9-4640-8F37-64A140948B68}' />
    </dashboard>
  </dashboards>
  <windows film-mode='true' source-height='30'>
    <window class='worksheet' name='Number of Recorded Trips'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8C038521-66E7-40FE-89D5-895C540079B3}' />
    </window>
    <window class='worksheet' name='Percentage Growth In Ridership'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC803FAF-8DC9-43D7-A1A8-638AD96BBBC6}' />
    </window>
    <window class='worksheet' name='Quarterly Customer Vs Subscriber Growth'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:UserType:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2C6721D6-7BAD-4E7A-88D0-BC66CBB646AB}' />
    </window>
    <window class='worksheet' name='Peak Summer/Winter( Seasonal) Usage by Time in Hours'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='38'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{76D60B6D-6CA5-4E2A-977B-3319DE0D4F13}' />
    </window>
    <window class='worksheet' name='Top/Bottom 10 Stations For Journey Start'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='2' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0B1AA9F9-36B6-43B8-A785-FE9C11AD33C1}' />
    </window>
    <window class='worksheet' name='Bottom 10 Stations For Journey END'>
      <cards>
        <edge name='left'>
          <strip size='236'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A2A3B91A-9D4C-478B-9F75-2A0AD64C05DC}' />
    </window>
    <window class='worksheet' name='Gender: Male vs Female Participants'>
      <cards>
        <edge name='left'>
          <strip size='246'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9266A117-C669-49CE-B3EF-387886506A7A}' />
    </window>
    <window class='worksheet' name='Gender Outreach for Female Participation'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EB2A60C8-0A27-4FDD-8D7F-6C8149DCE3A8}' />
    </window>
    <window class='worksheet' name='Avg Trip Duration By Age'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Birth Year:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Birth Year Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{787BF1CA-A683-48C0-9026-EA207A583451}' />
    </window>
    <window class='worksheet' name='Avg Distance in Miles A Bike is Ridden'>
      <cards>
        <edge name='left'>
          <strip size='131'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4732B9F1-06E1-474F-8406-683C5A92932E}' />
    </window>
    <window class='worksheet' name='Bikes With Repair Possibilites'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[Bike ID (group)]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:BikeID:ok]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DCC0D36-0957-4F23-AEC6-174ADF63BD56}' />
    </window>
    <window class='worksheet' name='Popular Locations of Trip Start'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9A0C25F2-6570-4691-9510-EA61C78D3F8E}' />
    </window>
    <window class='worksheet' name='Popular Location for Trip End'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Latitude (copy):ok]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Longitude (copy):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6CFF720D-B2F4-4EFB-867C-0B2234E25096}' />
    </window>
    <window class='dashboard' maximized='true' name='Popular Station Start /End'>
      <viewpoints>
        <viewpoint name='Popular Location for Trip End'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Popular Locations of Trip Start'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{1FE50F54-D9A2-43E4-A99B-082F712C40C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Distance in Miles A Bike is Ridden' width='192'>
      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
      AiBWUwDEav8LmBHYq1HQNagAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg Trip Duration By Age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bikes With Repair Possibilites' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUDUlEQVR4nO3dyY8j53nH8W9VcS3uTfY6nO5ZokCWHFiWhBl7pBixIWECw3MJAgFGEJ+C
      xLfAJx/yDxhBzvItCuBTDgJiBIIBGzEcQSPJtmRYhuKRZqyZXodNdjf3tdYcemYsT3eTRTWX
      pur5AAI0zeV9iuSPZPF93irFdV0XIXxKPe0dTCs/Zz23Ut/xY3oZ12tto9iGUweg2WyeuohZ
      Gtcrqe+oTqeDbdsDr+e1tlFsQ+DU9zCEcnEbNbFAtbBOLDlH5WCPdDbLQaXO4lySasvg4moe
      RRl3JS47m+vkls+zvX6XuWyW4l6ZuWSMlgURxcDWdPLLC+Mu5FiOZbB1v0Q2pVPYr3Ppwjm2
      touEAy7p3AKFzXVS8+fIpuNjr6XTrLG5UySXy+BqEZJhl71KD9Nos7Iyz71Ptjh/6RJ6OOjp
      /hqVAxqGg9NtEorGadQOiCbmaLU7ZJMR9qptzq8sUdjawA6E6TVqJNJpDg4qZDJp9vYq5HJx
      qg1jiOfHYfPePcKxBJXyAYuLS7R7JnrAPf0nwDDmUjE6hk273cJVgwQwKVdqtJotqq0uEc3F
      mUglCsl4hEqlTL3ZhUCYmB6m2W7j2DaNRpNmszWRSo6jBkKEQhq9bpdmfY8/3N2m2zNIxuOY
      RpdGs0Or1Z5ILRE9TjwaIp5MYfZ6FIoljJ5BLBzC6B3W0TFMz/cXSyQIBgJEIyFMVyWVTBNQ
      TFrNFpn5ZZKxCIoCqUwaTQsQjQSpHxzQNtoEY3Ok03GWFleI65EhtkIhnUnjWibdnoEW1lFd
      h3gyNdkAlEr7HOwX0fUErUYVSwmgohAJBgmqLvWOOaGCHIq7Jbo9Gz0aoLSzRa3ZQ9ejmIZB
      IBggENAmUslxbLPL7v0CFhrhSJKEHqTTblEq7VLaKxMKh9G0sX9MAlAu7lDtmFT3SxRLewC0
      2i2KpV3K1SbhSIhhKtnd2cYwDJqdHqqqoAZDRIIhIgGNVqNCen4ZgM2NDRzLoNU1cbUA0VAY
      t9dET8zRqlfILix5H9R12NjYwlE1YuEQ9coBhcIu9+7dQzntr0D1ep14fPwfxY9rNptTGdcr
      qe+oTqdDKBRC0/q/uXitbRTbcOp9ANd1abcn83H8ad1uF1Wd6AfYUKS+o3q9HpZlDQyA19pG
      sQ2nDoCqqlN5p3Nd90y/w0p9R6mqSigUIhDo/7LzWtsotuHsvkUJMQESAOFrEgDhaxIA4WsS
      AOFrEgDha55+BnVsi0qtgR5SqbRM5lJxbNsmFouNuz4hxspTAFzHptnq0Kg02S3VqCTDxNOL
      RKNRHMfBsqxx13mEbdtTGdcrqe8ox3E8dYN6rW0U2+ApALZlUtjZ5uLFVfSOTSaTpGd0UVQV
      VVUHTmyMg6ZpUxnXK03TMAyDSCRCs9kkkUhgGAaGYQCHk0KO46Dr+sCZ0XHVN+nHT1VVT+N6
      rW0U2+Dp1qFonK985QoAi4tDNCH5mOM4vPrqq3zjG9/gpz/9Kd/5znd48803efLJJwkEAty8
      eZNKpcLzzz/P9evXp12ub8lO8JgoisLq6iqtVotIJEKr1eLSpUv87Gc/o9Vq8fLLLxMOh8/0
      1yQ/OLvfIWac4zg89dRT5HI5stkslUqFy5cvc+7cOZLJJKlUim9961vk8/lpl+prEoAx0TSN
      rVaUf//f3/3xj79+/9H/RsNBfvBPL02hMvFpEoAxqjS7rO/Wjr0sFvG2hFCMl+wDCF+TAAhf
      kwAIX/O0D2D12myXqqQiKqVqm8WFLKZpMp/Ljbs+IcbKUwACYZ1woE6706bd7nB/8y6xbB7H
      caQV4gS2beM6/Q/yMs36pRXikKcAGJ0mu7tF5uZSREIhFpZWMHuGtEL0oWkayoAF29OsX1oh
      Dnluhfjyl790qoGEOItkJ1j4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mudWiE+2iiyko9y5
      d5/zqytYhs358+fGXZ8QY+W5FSIZi5LKzLHSc6nvFwmnlqQVog9phThqplshKpUKsZhObmGR
      uUwayzKlFaIPaYU4aqZbIZ566gt//EMwCkRPNbAQZ4HsBAtfkwAIX5MACF+TAAhfkwAIX5MA
      CF/zFICH5wJ2bItypYplWY+OcizELPN2eHSzy/3iPkG7jRVMUN0vokYSrOWXPc/ujdq0xvXK
      cRxc1+17nWnWP43Hz3VdT+N6rW0U2+BxGk2h3agRi4aolooksyl4MLCiKCiKcqoiPotpjeuV
      oigMqm6a9Z/l581rbaPYBk8BUDWNCxcuEI1GWLZswqHg4bvbgwJOe7r6z2Ja43qlKAoMeHKm
      Wf80Hj/F4+vFa22j2AaPAQiSTB4ezDUYlIO6is+Ps/sWKsQESACEr0kAhK9JAISvSQCEr0kA
      hK95bIVwaDSbGJ0W24UipmnS6/XGXZsQY+exFcJgb7+CanVQ9BQbd+8QjGU4v7IorRAnOGyF
      6L8o3m+tEA/HHDR7e+ZaIVzXoXKwz7mVBba2d5hfyGCZpueZvXGYhZngQc0QfpsJVh8cRGHm
      ZoK1YJinn/4CgUCAudwCAU17WAGKorCzs8PPf/5zXnjhBX784x/zve99jx/+8IdcuXKFDz74
      gHw+j2maXL9+fWQzybPQCzSoFUJ6gT77dYa5Xj/eWiFUjUhEO/HyfD5PJpPhrbfewjRNLMti
      ZWWFn/zkJ0QiESzLotPpcO3aNebm5k5VsBCjNJIDwxQKBXRd56WXXqJarfLOO++wsrLC1atX
      uXfvHvl8nu3tbdLp9CiGE2JkRhKAWHKOm1sBbv7nrz711w78/jYAf7MU4dq1a6MYSoiRGkkA
      TMvm/duFEy//qy9fGMUwQozc2f0ZRYgJkAAIX5MACF/zFACr12H7fhHXddjc3KLZPDxatBCz
      zttEWCiCSpXKXpFGq0u7fgd9Lk8q5TyYju5/+3GcQ0DOD3A6cn6AQ54CYHZbFAoFcrk52s0a
      59cuYJnGo/MDaJw8SQaM5RwCcn6A05HzAxzyfH6A5557FoC1tQunGlCIs0R2goWvSQCEr0kA
      hK9JAISvSQCEr0kAhK9JAISveZoHsHpt1u/vM5+Kslk4YHkxh2GYrKwsj7s+IcbKUwACYZ1Y
      JISuR7Etm9LuFrHMORxHWiFOIq0QR81sK4TRaXJwcIDjWMTiMRYX17BNU1oh+pBWiKNmuhXi
      i198+lQDCXEWyU6w8DUJgPA1CYDwNQmA8DUJgPA1CYDwNY9Hhz48w7eqKJi2/ejguGf56MxC
      eOHt/ABGlz9sFjg3n+IPGwWymTi2q3FhNY/rurgDbu+67uGJtUdoHPc5Sq7rwoD6pln/tB4/
      L+N6rW0U2+Dt6NDBEJGgRs8wWFpeplkpEoimHxXgDJjy93KdYY3jPkfJy5Mzzfqn8fg9bJ0Z
      1etlFNvg8QwxvcPjsKsBrG6P1UtP4Nr2p1oh+n8VejgFPkrjuM9RUlV1YCvENOufxuP3cMxB
      43qtbRTb4CkAwbDO2trqY38czYkuhJgm2YsVviYBEL4mARC+JgEQviYBEL4mARC+5ulnUMc2
      Oag2SMUitHoOkVAA27aIx+Pjrk+IsfLcC9TpdEnFo3RaLUrbu0TSy+i6LoviTyCL4o+a2UXx
      tmlQ2NkmFICd+0VWVhYxza4siu9DFsUfNTOL4h/2sSiqisLhovirV68AsLS0cqoBhThLjn2L
      +t177/Lr9z5g8IeVELPt2AAkEjG6PWPStQgxcccG4GB/h7u3tji7u5hCjMaRALSq+1SbNoG4
      5m0PWYgZduQ1HkvnWJyfx7RrnN3lJkKMxrGfAPdLZVBkklh8/h15lcfSOf784nlCoSDKNCoS
      YoKOfAVy7C7ttkU4HH602N3qtdkqVclENXarbZZyGQzTZGF+fsLlCr/Y2avz+pu3Trz8la8/
      TWwEixKPBKCys81OZQ+z+8dPgEBYJxKo0+wapMMBtrfukcjm5fwAfUgrxFHDtEIc1Lv8z/v3
      TrzOy89dJJIOjb4VIqin+MKTT7C7U/uTBodUKoltWdiuy6VsFsu2UaUV4kTSCnHUMK0QmocD
      CoxiG46MkszNs7+5xZ2PPuLTU2G6rpNIJkmnUui6TjKRONXAQpwFx8YsM5dg7eITA97XhZh9
      RwLg2BbtTpt765vyK9DnXL1eZ39/H9d1KZVK1Go1NjY2KBQKfPLJJ/R6vWmXOHZHvkB1GhXK
      DZuLl85+12e9XueNN97g2rVrOI7Du+++y+rqKnt7ewQCAebm5rh27dq0yzyzXn/9dYrFIt//
      /vdZX1/no48+olQq8e1vf5t33nmHGzduEA6Hp13mWB35BAiGQ2Ba1GqNgcf8nLaHhx589913
      yeVy6LrO0tISsViMUChEsViccoVn2wsvvICiKNRqNX77299y5coVlpeX+c1vfkMymSSVSk27
      xLE78gnQrtbYb9QJBmLTqGcouq4TCoXIZrP88pe/JJFIcOvWLbLZLNVqlZWVs/8pNk1LS0t8
      97vf5e7du9y4cYNQKMTXv/51crncmT7u6igdnQhzbdqtFqHI2T/0Ya1lEj//DPVel7AewQaC
      cagDanaBp754ftolnmmv/vfv+Hjr4MG/Nv/ksmf+bIl//turky9qwo4EIJlb4a+vX0dRBv26
      P30bxRqv/tevT7z8ybUsCT00wYpmS63Vo1zvHHtZo/353wGGYwIQCIXJZo/f8dle/4Rq2yI7
      l8Q0bVbP58deoBDjNNQ0WjKVYuv+Jyhul1hqceqtEI7Tf2DbHv24Xs1CK0S/E3i4rjvy+oZp
      hbAHPHa2bU/uqBAPqarK2uXLZJIxLMua+lEhVLX/uJo2+nG9moVWCJSTZ3oURRl5feNohWg0
      Grz22mt89atfRVVVSqUShmHQaDTI5/OUy2VeeeWVE+9nqC2Mp+aIf/5/GRMzxDRNXNel2+1S
      LBbZ29sjFAqRTCZxXZcXX3yx7+3PbjeZEB5kMhmeffZZbNvmxRdf5M6dO6yurtLtdimXy9Rq
      tb4/h0sAxEzbKDX4VeHwl773SxtAiF8Vdh9cqvIPX1rre3sJgJhp5XqHtz/cOvHyv3v5L/re
      Xhb+Cl+TAAhfkwAIXxsqAFavw365immavugVF59/Q+0EFwo7lKodktEAQT3N6rnD2WDb6b90
      xusM4DAcx8Fx+88WOvbox/XKcZyBZ4qfVm3w4Cz1A2aCx/KceXgteDmbvNezzg8ab6gAOI6D
      Y1oEMnEcy0RRFBRFQVX7B+DwOqP9tqUoCmqfmUzg0Uz1NCiKMnBF3bRqg8P6Bs0Ej7o+VVVR
      FIUPP/yQXC7H8vIyH374Iaurq1QqFaLRKKqqEolEUAYcmM3ra08dsB1DBeD82mWW8g7BgHb4
      7vagCMUdHABlwIt1WIf3N2hcRj6uV4NeYI+uMyVexh5HfYqiEIlEWF9f5+7du6yvr3Pr1i0M
      wyAQCOC6Ljdu3Bj00H3qNTXwin23Y6iIq5pGOBR81NMha4bFZ/Hxxx/zzDPPYBgGu7u73L17
      l2aziWEYE/9aKBNhYuK++c1vUigUeO6557h69SqRSATTNA8b9GCiP7BIAMTE/eO/vUGrax57
      2b/8/V9ycUGfWC0SADFxXcOiaxzfx287kz0Ug0yECV+TAAhfkwAIXxsqAJX9Xf7v9x9Tbzap
      VCrjqkmIiRlqJziTXaTZsbi/fgd9Lk8qJYviTx5bFsU/zlsbhD3UovhBrRCDFs4PFQCj2yCW
      miMajdDt9mRRfN+xZVH84x5OoPa/jjbUovhB7RqDFuEPtYWhaJK5KMDkfqcVYpxkJ1j4mgRA
      +JoEQPiaBED4mgRA+JoEQPiaBED42lDzAOVSgUrHJh2P0OuZrKwsj6suISZiqABUa1W6PZf7
      tT2S2XNyfoC+Y0srxONmvhViaXGZnb0qi4urWKYhrRB9x5ZWiMfNfCuEnkzzRDI9zE2EONNk
      J1j4mgRA+JoEQPiaBED4mgRA+JoEQPjaUAFwHBvDODwt5aAJCCFmwVDzADsb9+ipESKKhelq
      XFjN47oug47l5bruwGPlD+vw/gbcp8vIx/XKdd2+M62PrjMlXsYeR32D79Md7WtqwPWGmwjT
      dQqbu6QSYUJ65lERgz4NxvGJ4bouzoAHwMsJFMbFyxM0zU/RQQEdx3Pm7YQWDwLg4TXlpUZn
      wHWGCkAimeLCpSiZZBzbtj/VCtH/m5SXKfBhqaqKOuAkCqo2+nG9UlV1YCvEtGqDByfnGNAK
      MY7nbHArhProv1Fdr9+YQx4VIsZCNAZAMBgc5qZCnEnyK5DwNQmA8DUJgPA1CYDwNQmA8DUJ
      gPC1oQLgui57e/t0Ol2azea4ahJiYoaaB2hU9tkp7BPVdoikl9B1XRbFnzi2LIp/3Mwvim+1
      27SbNXJrq1imnB+g/9iyKP5xM78ofjm/xnJ+bZibCHGmyXmCZ8jW1hYbGxtcu3aNbrfL+vo6
      +/v7XL58mWq1yhNPPEEoFJp2mTNFfgWaIZFIhPfeew/DMPjFL37BzZs3MU2Tt99+mx/96Ee0
      2+1plzhzJAAzZHd3F03TuH37NpqmUS6XaTab7OzssLKyQrlcnnaJM0e+As2Qpy9d4ql8ns3N
      TZ6+coWXrlw5vOBrXwNNQ0smp1vgDJIAzJDya/9B+62baMDOY5cFV1dZ/tcfTKOsmSZfgYSv
      SQCErw31FahZK7Nf77KQy2BbFolEYlx1CTERQwUgGAxQKVfo1veIppeJxWLSCnHi2KNvhei3
      yN5luNYFaYU4NFQA2q02ODbJ7CJmT1oh+o89+lYIpV/rAsO1LvitFaLX6/Hmm2/y/PPP02w2
      2dzcJJVKDReAzPwSmfmlYW4ixJnwMHylUonNzU00TeP999+XnWDhD/v7+9y+fZt2u00mk+H2
      7dsYhsH/A384cntuyYcSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Popular Location for Trip End' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Popular Locations of Trip Start' width='192'>
      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
      xI0dIwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Popular Station Start /End' width='192'>
      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
      OonS7QT4f+a6DLKts97+AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
