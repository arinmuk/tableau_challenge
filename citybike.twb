<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Birth Year Parameter' datatype='integer' name='[Birth Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1885'>
        <calculation class='tableau' formula='1885' />
        <range max='2019' min='1885' />
      </column>
      <column caption='HourlyUsage' datatype='datetime' default-format='*AMPM h:' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2019-02-28 23:56:00#'>
        <calculation class='tableau' formula='#2019-02-28 23:56:00#' />
        <range max='#2019-02-28 23:56:00#' min='#2017-01-01 00:21:32#' />
      </column>
      <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='9.0'>
        <calculation class='tableau' formula='9.0' />
        <range granularity='1.0' max='10.0' min='5.0' />
      </column>
    </datasource>
    <datasource caption='Merged_CitiBike_trip (citybike)' inline='true' name='federated.0wv7p0t1o2g9an19crl340olj3jb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yoga900' name='sqlserver.1xhw39m12rl0v71cwxdhm1fuj3sg'>
            <connection authentication='sspi' class='sqlserver' dbname='citybike' odbc-native-protocol='yes' one-time-sql='' server='yoga900' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.1xhw39m12rl0v71cwxdhm1fuj3sg' name='Merged_CitiBike_trip' table='[dbo].[Merged_CitiBike_trip]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>TripDuration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TripDuration]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>TripDuration</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StartTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[StartTime]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>StartTime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StopTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[StopTime]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>StopTime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station ID]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station Name]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station Name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station Latitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station Latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Station Longitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Start Station Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station ID]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station Name]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station Latitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station Latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[End Station Longitude]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>End Station Longitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BikeID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BikeID]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>BikeID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserType]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>UserType</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Birth Year]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Birth Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Merged_CitiBike_trip]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' caption='Bike ID' datatype='integer' datatype-customized='true' name='[BikeID]' role='measure' type='quantitative' />
      <column datatype='integer' datatype-customized='true' name='[Birth Year]' role='dimension' type='ordinal' />
      <column caption='Season' datatype='string' name='[Calculation_1018376513883774979]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (Month([StartTime]) = 12) or&#13;&#10;&#13;&#10;   (Month([StartTime]) = 1) or &#13;&#10;   (Month([StartTime]) = 2) then &apos;Winter&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 3) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 4) or &#13;&#10;    (Month([StartTime]) = 5) then &apos;Spring&apos;&#13;&#10;&#13;&#10;    &#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 6)  or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 7) or &#13;&#10;    (Month([StartTime]) = 8) then &apos;Summer&apos;&#13;&#10;&#13;&#10;    &#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 9) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 10) or &#13;&#10;    (Month([StartTime]) = 11) then &apos;Fall&apos;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='MatchHour' datatype='boolean' name='[Calculation_1018376513888137221]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;,[StartTime] )=DATEPART(&apos;hour&apos;,[Parameters].[Parameter 1])' />
      </column>
      <column aggregation='CountD' caption='subset Labels Top/Bot Start' datatype='string' name='[Calculation_325666596576743424]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Top 10 Station Start]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSEIF [Top N Station Start (copy)]&#13;&#10;THEN &quot;Bottom &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column caption='Male_Female' datatype='string' name='[Calculation_325666596606459905]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Gender] = 1 then&#13;&#10;&quot;Male&quot;&#13;&#10;ELSEIF  [Gender] =2 then&#13;&#10;&quot;Female&quot;&#13;&#10;ELSE&#13;&#10;&quot;Unknown&quot;&#13;&#10;END' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_325666596610838530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='year([StartTime])-[Birth Year]' />
      </column>
      <column caption='Duration In Minutes' datatype='real' name='[Calculation_325666596614881283]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TripDuration]/60' />
      </column>
      <column caption='MilesRidden' datatype='real' name='[Calculation_325666596619960324]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([TripDuration]/3600)*7.456' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[End Station ID]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[End Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[End Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Gender]' role='measure' type='quantitative' />
      <column datatype='datetime' name='[Hours (Days)]' role='dimension' type='quantitative' user:agg-type='Day-Trunc' user:base-field='Start Time (copy)' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATETRUNC(&apos;day&apos;, [Start Time (copy)])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Start Station ID]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[Start Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[Start Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
      <column caption='Hours' datatype='datetime' name='[Start Time (copy)]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='[StartTime]' />
      </column>
      <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Stop Time' datatype='datetime' name='[StopTime]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
      <column caption='User Type' datatype='string' name='[UserType]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='subset Labels Bottom End Stations' datatype='string' name='[subset Labels Top/Bot Start (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Bottom N Station Stop]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 2]) + &quot; END Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column-instance column='[Bottom N Station Stop]' derivation='InOut' name='[io:Bottom N Station Stop:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 10 Station Start]' derivation='InOut' name='[io:Top 10 Station Start:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_325666596606459905]' derivation='None' name='[none:Calculation_325666596606459905:nk]' pivot='key' type='nominal' />
      <column-instance column='[UserType]' derivation='None' name='[none:UserType:nk]' pivot='key' type='nominal' />
      <group caption='Bottom N Station Stop' name='[Bottom N Station Stop]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[End Station Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top N Station Start' name='[Top 10 Station Start]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Start Station Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom N Station Start' name='[Top N Station Start (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Start Station Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.391071' group-percentage='0.1125' measure-ordering='alphabetic' measure-percentage='0.383929' parameter-percentage='0.1125' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:UserType:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Subscriber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Customer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Bottom N Station Stop:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_325666596606459905:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 10 Station Start:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='HourlyUsage' datatype='datetime' default-format='*AMPM h:' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2019-02-28 23:56:00#'>
          <calculation class='tableau' formula='#2019-02-28 23:56:00#' />
          <range max='#2019-02-28 23:56:00#' min='#2017-01-01 00:21:32#' />
        </column>
        <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='9.0'>
          <calculation class='tableau' formula='9.0' />
          <range granularity='1.0' max='10.0' min='5.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Avg Distance in Miles A Bike is Ridden'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column aggregation='CountD' caption='Bike ID' datatype='integer' datatype-customized='true' name='[BikeID]' role='measure' type='quantitative' />
            <column caption='MilesRidden' datatype='real' name='[Calculation_325666596619960324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TripDuration]/3600)*7.456' />
            </column>
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_325666596619960324]' derivation='Avg' name='[avg:Calculation_325666596619960324:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BikeID]' derivation='None' name='[none:BikeID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:Calculation_325666596619960324:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:BikeID:qk]</cols>
      </table>
      <simple-id uuid='{911DC243-A9E4-4AF2-928F-6BBB14D41742}' />
    </worksheet>
    <worksheet name='Avg Trip Duration By Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' datatype-customized='true' name='[Birth Year]' role='dimension' type='ordinal' />
            <column caption='Age' datatype='integer' name='[Calculation_325666596610838530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='year([StartTime])-[Birth Year]' />
            </column>
            <column caption='Duration In Minutes' datatype='real' name='[Calculation_325666596614881283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TripDuration]/60' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_325666596614881283]' derivation='Avg' name='[avg:Calculation_325666596614881283:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Birth Year]' derivation='None' name='[none:Birth Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_325666596610838530]' derivation='None' name='[none:Calculation_325666596610838530:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Birth Year:ok]'>
            <groupfilter from='1885' function='range' level='[none:Birth Year:ok]' to='2002' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Birth Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[avg:Calculation_325666596614881283:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596610838530:qk]</cols>
      </table>
      <simple-id uuid='{EC0F6FB7-C50F-4774-AD49-09A54E414BC7}' />
    </worksheet>
    <worksheet name='Bottom 10 Stations For Journey END'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='9.0'>
              <calculation class='tableau' formula='9.0' />
              <range granularity='1.0' max='10.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bottom N Station Stop]' derivation='InOut' name='[io:Bottom N Station Stop:nk]' pivot='key' type='nominal' />
            <column-instance column='[End Station Name]' derivation='None' name='[none:End Station Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[subset Labels Top/Bot Start (copy)]' derivation='None' name='[none:subset Labels Top/Bot Start (copy):nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='subset Labels Bottom End Stations' datatype='string' name='[subset Labels Top/Bot Start (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Bottom N Station Stop]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 2]) + &quot; END Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
            </column>
          </datasource-dependencies>
          <manual-sort column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Pershing Square North&quot;</bucket>
              <bucket>&quot;Grove St PATH&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Great Jones St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;Exchange Place&quot;</bucket>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Hamilton Park&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Pershing Square South&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;Sip Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
              <bucket>&quot;West Thames St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
              <bucket>&quot;Newport PATH&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Old Fulton St&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
              <bucket>&quot;Morris Canal&quot;</bucket>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;City Hall&quot;</bucket>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Warren St&quot;</bucket>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
              <bucket>&quot;Newark Ave&quot;</bucket>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
              <bucket>&quot;Paulus Hook&quot;</bucket>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;Columbus Drive&quot;</bucket>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
              <bucket>&quot;Brunswick St&quot;</bucket>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
              <bucket>&quot;Brunswick &amp; 6th&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; St Felix St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
              <bucket>&quot;Cherry St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
              <bucket>&quot;Harborside&quot;</bucket>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Dixon Mills&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; North Moore St&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;JC Medical Center&quot;</bucket>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
              <bucket>&quot;McGinley Square&quot;</bucket>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Washington St&quot;</bucket>
              <bucket>&quot;Oakland Ave&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
              <bucket>&quot;Pershing Field&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St N&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Washington Park&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
              <bucket>&quot;Lincoln Park&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
              <bucket>&quot;Journal Square&quot;</bucket>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;Astor Place&quot;</bucket>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
              <bucket>&quot;Soissons Landing&quot;</bucket>
              <bucket>&quot;E 77 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;Lafayette Park&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
              <bucket>&quot;Heights Elevator&quot;</bucket>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
              <bucket>&quot;Hilltop&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
              <bucket>&quot;Grand St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
              <bucket>&quot;5 Corners Library&quot;</bucket>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St N&quot;</bucket>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;York St&quot;</bucket>
              <bucket>&quot;Dey St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Christ Hospital&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
              <bucket>&quot;Riverview Park&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Montgomery St&quot;</bucket>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
              <bucket>&quot;Cadman Plaza W &amp; Pierrepont St&quot;</bucket>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
              <bucket>&quot;Union St&quot;</bucket>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
              <bucket>&quot;Bergen Ave&quot;</bucket>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;N Henry St &amp; Richardson St&quot;</bucket>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Garfield Ave Station&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;KentAve&amp;N7 St&quot;</bucket>
              <bucket>&quot;Central Ave&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;North St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;Glenwood Ave&quot;</bucket>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
              <bucket>&quot;PABT Valet&quot;</bucket>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
              <bucket>&quot;West Side Light Rail&quot;</bucket>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
              <bucket>&quot;NJCU&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
              <bucket>&quot;78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
              <bucket>&quot;Hs Don&apos;t Use&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
              <bucket>&quot;WS Don&apos;t Use&quot;</bucket>
              <bucket>&quot;Danforth Light Rail&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
              <bucket>&quot;Columbia Park&quot;</bucket>
              <bucket>&quot;Jackson Square&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; MacDonough St&quot;</bucket>
              <bucket>&quot;JCBS Depot&quot;</bucket>
              <bucket>&quot;MLK Light Rail&quot;</bucket>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
              <bucket>&quot;Bayside Park&quot;</bucket>
              <bucket>&quot;JSQ Don&apos;t Use&quot;</bucket>
              <bucket>&quot;Adventures NYC&quot;</bucket>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
              <bucket>&quot;NYCBS Depot - DEL&quot;</bucket>
              <bucket>&quot;Bethune Center&quot;</bucket>
              <bucket>&quot;E 40 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St S&quot;</bucket>
              <bucket>&quot;Bike in Movie Night | Prospect Park Bandshell&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
              <bucket>&quot;Bike The Branches - Red Hook Branch&quot;</bucket>
              <bucket>&quot;Bressler&quot;</bucket>
              <bucket>&quot;8D OPS 01&quot;</bucket>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
              <bucket>&quot;Washington Square E&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
              <bucket>&quot;\&quot;W 45 St &amp; 6 Ave\&quot;\&quot;\&quot;&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 22 St - Valet Scan&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
              <bucket>&quot;Cliff St &amp; Fulton St_1&quot;</bucket>
              <bucket>&quot;SSP - Basement&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:subset Labels Top/Bot Start (copy):nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subset Labels Top/Bot Start (copy):nk]' />
              <groupfilter function='member' level='[none:subset Labels Top/Bot Start (copy):nk]' member='&quot;Others&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='cols' value='Number Of Trips in Thousands' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk] / ([federated.0wv7p0t1o2g9an19crl340olj3jb].[none:subset Labels Top/Bot Start (copy):nk] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]))</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{34412318-9F31-4A14-ADC7-B8E613173665}' />
    </worksheet>
    <worksheet name='Gender Outreach for Female Participation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column caption='Male_Female' datatype='string' name='[Calculation_325666596606459905]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Gender] = 1 then&#13;&#10;&quot;Male&quot;&#13;&#10;ELSEIF  [Gender] =2 then&#13;&#10;&quot;Female&quot;&#13;&#10;ELSE&#13;&#10;&quot;Unknown&quot;&#13;&#10;END' />
            </column>
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Gender]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_325666596606459905]' derivation='None' name='[none:Calculation_325666596606459905:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StartTime]' derivation='Year-Trunc' name='[tyr:StartTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]'>
            <groupfilter function='member' level='[none:Calculation_325666596606459905:nk]' member='&quot;Female&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:qk]' scope='cols' value='Years' />
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' scope='rows' value='Trips in Thousands' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[tyr:StartTime:qk]</cols>
      </table>
      <simple-id uuid='{213EC04B-0DE0-47AC-861B-C9C02007C60B}' />
    </worksheet>
    <worksheet name='Gender: Male vs Female Participants'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column caption='Male_Female' datatype='string' name='[Calculation_325666596606459905]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Gender] = 1 then&#13;&#10;&quot;Male&quot;&#13;&#10;ELSEIF  [Gender] =2 then&#13;&#10;&quot;Female&quot;&#13;&#10;ELSE&#13;&#10;&quot;Unknown&quot;&#13;&#10;END' />
            </column>
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Gender]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_325666596606459905]' derivation='None' name='[none:Calculation_325666596606459905:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' scope='rows' value='Trips In Thousands' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]</cols>
      </table>
      <simple-id uuid='{17A866A7-BAF3-4C4D-8B47-9D466CCD6CFE}' />
    </worksheet>
    <worksheet name='Number of Recorded Trips'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StartTime]' derivation='Year' name='[yr:StartTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='rows' value='Trips in Thousands' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</cols>
      </table>
      <simple-id uuid='{0303729B-DE47-4FCE-95EE-6273B80A6884}' />
    </worksheet>
    <worksheet name='Peak Summer/Winter( Seasonal) Usage by Time in Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='HourlyUsage' datatype='datetime' default-format='*AMPM h:' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2019-02-28 23:56:00#'>
              <calculation class='tableau' formula='#2019-02-28 23:56:00#' />
              <range max='#2019-02-28 23:56:00#' min='#2017-01-01 00:21:32#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column caption='Season' datatype='string' name='[Calculation_1018376513883774979]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (Month([StartTime]) = 12) or&#13;&#10;&#13;&#10;   (Month([StartTime]) = 1) or &#13;&#10;   (Month([StartTime]) = 2) then &apos;Winter&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 3) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 4) or &#13;&#10;    (Month([StartTime]) = 5) then &apos;Spring&apos;&#13;&#10;&#13;&#10;    &#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 6)  or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 7) or &#13;&#10;    (Month([StartTime]) = 8) then &apos;Summer&apos;&#13;&#10;&#13;&#10;    &#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;    (Month([StartTime]) = 9) or&#13;&#10;&#13;&#10;    (Month([StartTime]) = 10) or &#13;&#10;    (Month([StartTime]) = 11) then &apos;Fall&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='MatchHour' datatype='boolean' name='[Calculation_1018376513888137221]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;,[StartTime] )=DATEPART(&apos;hour&apos;,[Parameters].[Parameter 1])' />
            </column>
            <column datatype='datetime' name='[Hours (Days)]' role='dimension' type='quantitative' user:agg-type='Day-Trunc' user:base-field='Start Time (copy)' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATETRUNC(&apos;day&apos;, [Start Time (copy)])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Hours' datatype='datetime' name='[Start Time (copy)]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[StartTime]' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TripDuration]' derivation='CountD' name='[ctd:TripDuration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hours (Days)]' derivation='Hour' name='[hr:Hours (Days):ok]' pivot='key' type='ordinal' />
            <column-instance column='[StartTime]' derivation='Hour' name='[hr:StartTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1018376513883774979]' derivation='None' name='[none:Calculation_1018376513883774979:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1018376513888137221]' derivation='None' name='[none:Calculation_1018376513888137221:nk]' pivot='key' type='nominal' />
            <column-instance column='[StartTime]' derivation='Quarter' name='[qr:StartTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[hr:Hours (Days):ok]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[hr:Hours (Days):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1018376513883774979:nk]' member='&quot;Summer&quot;' />
              <groupfilter function='member' level='[none:Calculation_1018376513883774979:nk]' member='&quot;Winter&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513888137221:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_1018376513888137221:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]' direction='ASC' measure-to-sort-by='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[hr:Hours (Days):ok]</column>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513888137221:nk]</column>
            <column>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='rows' value='Number of Trips' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]' />
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[ctd:TripDuration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</rows>
        <cols>([federated.0wv7p0t1o2g9an19crl340olj3jb].[hr:StartTime:ok] / ([federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]))</cols>
      </table>
      <simple-id uuid='{974081F7-7B7E-4AA4-9E6D-01F628ABDE48}' />
    </worksheet>
    <worksheet name='Percentage Growth In Ridership'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcdf:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[StartTime]' derivation='Quarter' name='[qr:StartTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StartTime]' derivation='Year' name='[yr:StartTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[pcdf:cnt:Number of Records:qk]' scope='rows' value='% Difference in Ridership' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[pcdf:cnt:Number of Records:qk]</rows>
        <cols>([federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok])</cols>
      </table>
      <simple-id uuid='{B7E3CE36-8D26-4F9F-8120-34038B3BE25B}' />
    </worksheet>
    <worksheet name='Quarterly Customer Vs Subscriber Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time' datatype='datetime' name='[StartTime]' role='dimension' type='ordinal' />
            <column caption='User Type' datatype='string' name='[UserType]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UserType]' derivation='None' name='[none:UserType:nk]' pivot='key' type='nominal' />
            <column-instance column='[StartTime]' derivation='Quarter-Trunc' name='[tqr:StartTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:UserType:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:UserType:nk]' />
              <groupfilter function='member' level='[none:UserType:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]' scope='rows' value='Trips Taken In Thousands' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:UserType:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wv7p0t1o2g9an19crl340olj3jb].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[tqr:StartTime:qk]</cols>
      </table>
      <simple-id uuid='{3E000999-1AC2-436A-843C-1BCB5358E9C7}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column aggregation='CountD' caption='Bike ID' datatype='integer' datatype-customized='true' name='[BikeID]' role='measure' type='quantitative' />
            <column caption='MilesRidden' datatype='real' name='[Calculation_325666596619960324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TripDuration]/3600)*7.456' />
            </column>
            <column aggregation='CountD' caption='Trip Duration' datatype='real' datatype-customized='true' name='[TripDuration]' role='measure' type='quantitative' />
            <column-instance column='[BikeID]' derivation='CountD' name='[ctd:BikeID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_325666596619960324]' derivation='Sum' name='[sum:Calculation_325666596619960324:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Calculation_325666596619960324:qk]' />
              <text column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[ctd:BikeID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{768061CE-0B31-4FAF-BCFA-498CC0A51088}' />
    </worksheet>
    <worksheet name='Top/Bottom 10 Stations For Journey Start'>
      <table>
        <view>
          <datasources>
            <datasource caption='Merged_CitiBike_trip (citybike)' name='federated.0wv7p0t1o2g9an19crl340olj3jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Station Start' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='9.0'>
              <calculation class='tableau' formula='9.0' />
              <range granularity='1.0' max='10.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wv7p0t1o2g9an19crl340olj3jb'>
            <column aggregation='CountD' caption='subset Labels Top/Bot Start' datatype='string' name='[Calculation_325666596576743424]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 10 Station Start]&#13;&#10;THEN &quot;Top &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSEIF [Top N Station Start (copy)]&#13;&#10;THEN &quot;Bottom &quot; + str([Parameters].[Parameter 2]) + &quot; Start Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Station Start]' derivation='InOut' name='[io:Top 10 Station Start:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_325666596576743424]' derivation='None' name='[none:Calculation_325666596576743424:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Station Name]' derivation='None' name='[none:Start Station Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596576743424:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_325666596576743424:nk]' />
              <groupfilter function='member' level='[none:Calculation_325666596576743424:nk]' member='&quot;Others&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
              <bucket>&quot;5 Corners Library&quot;</bucket>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 31 St N&quot;</bucket>
              <bucket>&quot;Pershing Square North&quot;</bucket>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
              <bucket>&quot;Grove St PATH&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
              <bucket>&quot;8D OPS 01&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
              <bucket>&quot;78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Adventures NYC&quot;</bucket>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Astor Place&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
              <bucket>&quot;Bayside Park&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
              <bucket>&quot;Bergen Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
              <bucket>&quot;Bethune Center&quot;</bucket>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
              <bucket>&quot;Bike in Movie Night | Prospect Park Bandshell&quot;</bucket>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
              <bucket>&quot;Bike The Branches - Red Hook Branch&quot;</bucket>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
              <bucket>&quot;Bressler&quot;</bucket>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
              <bucket>&quot;Brunswick &amp; 6th&quot;</bucket>
              <bucket>&quot;Brunswick St&quot;</bucket>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Cadman Plaza W &amp; Pierrepont St&quot;</bucket>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
              <bucket>&quot;Central Ave&quot;</bucket>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
              <bucket>&quot;Cherry St&quot;</bucket>
              <bucket>&quot;Christ Hospital&quot;</bucket>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;City Hall&quot;</bucket>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
              <bucket>&quot;Columbia Park&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
              <bucket>&quot;Columbus Drive&quot;</bucket>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Danforth Light Rail&quot;</bucket>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
              <bucket>&quot;Dey St&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
              <bucket>&quot;Dixon Mills&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 40 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 77 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
              <bucket>&quot;Exchange Place&quot;</bucket>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
              <bucket>&quot;Garfield Ave Station&quot;</bucket>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;Glenwood Ave&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
              <bucket>&quot;Grand St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
              <bucket>&quot;Great Jones St&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; North Moore St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Hamilton Park&quot;</bucket>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
              <bucket>&quot;Hanson Pl &amp; St Felix St&quot;</bucket>
              <bucket>&quot;Harborside&quot;</bucket>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Heights Elevator&quot;</bucket>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
              <bucket>&quot;Hilltop&quot;</bucket>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
              <bucket>&quot;Jackson Square&quot;</bucket>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
              <bucket>&quot;JC Medical Center&quot;</bucket>
              <bucket>&quot;JCBS Depot&quot;</bucket>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
              <bucket>&quot;Journal Square&quot;</bucket>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
              <bucket>&quot;KentAve&amp;N7 St&quot;</bucket>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
              <bucket>&quot;Lafayette Park&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
              <bucket>&quot;Lafayette St &amp; Jersey St N&quot;</bucket>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Lincoln Park&quot;</bucket>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
              <bucket>&quot;Marcy Ave &amp; MacDonough St&quot;</bucket>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
              <bucket>&quot;McGinley Square&quot;</bucket>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Bleecker St S&quot;</bucket>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
              <bucket>&quot;MLK Light Rail&quot;</bucket>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
              <bucket>&quot;Montgomery St&quot;</bucket>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
              <bucket>&quot;Morris Canal&quot;</bucket>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;N Henry St &amp; Richardson St&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
              <bucket>&quot;Newark Ave&quot;</bucket>
              <bucket>&quot;Newport PATH&quot;</bucket>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
              <bucket>&quot;NJCU&quot;</bucket>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
              <bucket>&quot;North St&quot;</bucket>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
              <bucket>&quot;Oakland Ave&quot;</bucket>
              <bucket>&quot;Old Fulton St&quot;</bucket>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;PABT Valet&quot;</bucket>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
              <bucket>&quot;Paulus Hook&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
              <bucket>&quot;Pershing Field&quot;</bucket>
              <bucket>&quot;Pershing Square South&quot;</bucket>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
              <bucket>&quot;Riverview Park&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
              <bucket>&quot;Sip Ave&quot;</bucket>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
              <bucket>&quot;Soissons Landing&quot;</bucket>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
              <bucket>&quot;Union St&quot;</bucket>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
              <bucket>&quot;Warren St&quot;</bucket>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
              <bucket>&quot;Washington Park&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
              <bucket>&quot;Washington Square E&quot;</bucket>
              <bucket>&quot;Washington St&quot;</bucket>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
              <bucket>&quot;West Side Light Rail&quot;</bucket>
              <bucket>&quot;West Thames St&quot;</bucket>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
              <bucket>&quot;York St&quot;</bucket>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk] / ([federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596576743424:nk] / [federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]))</rows>
        <cols>[federated.0wv7p0t1o2g9an19crl340olj3jb].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{934707CB-A591-4077-A229-C5D1945D80C0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Number of Recorded Trips'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:StartTime:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C038521-66E7-40FE-89D5-895C540079B3}' />
    </window>
    <window class='worksheet' name='Percentage Growth In Ridership'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='64'>
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[qr:StartTime:ok]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC803FAF-8DC9-43D7-A1A8-638AD96BBBC6}' />
    </window>
    <window class='worksheet' name='Quarterly Customer Vs Subscriber Growth'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='64'>
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:UserType:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C6721D6-7BAD-4E7A-88D0-BC66CBB646AB}' />
    </window>
    <window class='worksheet' name='Peak Summer/Winter( Seasonal) Usage by Time in Hours'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='38'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[hr:Hours (Days):ok]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513883774979:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_1018376513888137221:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76D60B6D-6CA5-4E2A-977B-3319DE0D4F13}' />
    </window>
    <window class='worksheet' maximized='true' name='Top/Bottom 10 Stations For Journey Start'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='2' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]</field>
                  <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596576743424:nk]</field>
                </fields>
                <multibucket>
                  <bucket>false</bucket>
                  <bucket>&quot;Others&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[Start Station Name (group)]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[ctd:Start Station ID:ok]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596576743424:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B1AA9F9-36B6-43B8-A785-FE9C11AD33C1}' />
    </window>
    <window class='worksheet' name='Bottom 10 Stations For Journey END'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='64'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]</field>
                  <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:subset Labels Top/Bot Start (copy):nk]</field>
                </fields>
                <multibucket>
                  <bucket>false</bucket>
                  <bucket>&quot;Others&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[Start Station Name (group)]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[ctd:Start Station ID:ok]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Bottom N Station Stop:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[io:Top 10 Station Start:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596576743424:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:End Station Name:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Start Station Name:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:subset Labels Top/Bot Start (copy):nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2A3B91A-9D4C-478B-9F75-2A0AD64C05DC}' />
    </window>
    <window class='worksheet' name='Gender: Male vs Female Participants'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='64'>
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9266A117-C669-49CE-B3EF-387886506A7A}' />
    </window>
    <window class='worksheet' name='Gender Outreach for Female Participation'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='64'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596606459905:nk]</field>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[yr:StartTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB2A60C8-0A27-4FDD-8D7F-6C8149DCE3A8}' />
    </window>
    <window class='worksheet' name='Avg Trip Duration By Age'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Birth Year:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Birth Year Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:Calculation_325666596610838530:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{787BF1CA-A683-48C0-9026-EA207A583451}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='80'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1F92327F-F7E0-4DE8-BDD6-61D411E308F1}' />
    </window>
    <window class='worksheet' name='Avg Distance in Miles A Bike is Ridden'>
      <cards>
        <edge name='left'>
          <strip size='64'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wv7p0t1o2g9an19crl340olj3jb].[none:BikeID:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4732B9F1-06E1-474F-8406-683C5A92932E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Distance in Miles A Bike is Ridden' width='192'>
      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
      x2v1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Avg Trip Duration By Age' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 Stations For Journey END' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Gender Outreach for Female Participation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXSUlEQVR4nO3daXAc553f8W93z/RcmBkAAwwuAiR4gCIAiiIpUSctkVSYlLRx5FiH5V0m
      Fe++SWUrlVTKSVW8jh0n+yq1VXmbyq53N6q1fHtXq4qji4dOy6R1gBcA4j5nMJjB3Hd35wUp
      iksOpAFx9BzP550gAviBnB96up9/9yMZhmEgCHVKNjuAIJhpUwqgadpmfFlB2HDiCCDUNVEA
      oa6JAgh1TRRAqGuiAEJdEwUQ6pql3D8YmJ8mEEmgoqG6vGTiEZwuF7FkCpfXh1My8LZ14nGq
      m5lXEDZU2QWw2+1YlAQut59iPkZTSyeJwDRdfX0EJ2eJ5XTae3rQNA1d11nrArOuG8wvJ+j2
      e9b8QwjC3ZLKHYUIzE9TkOxY9Cx2TwvJSIBGfyehhTlaOjqxSRIFFBqcNjRNQ1GUNQXJFzS+
      98Oz/OdTj+F22u7qhxGEtSq7AGtxNwUAeGdomrG5CP/qqYMbHUkQSqqok+BHBrqZWIyyGE6Y
      HUWoExVVAEWR+caJQV5+89KazyEE4W5UVAEA+re3UNB0RmbDZkcR6kDFFUCSJE6dvJcfvXER
      XRdHAWFzVVwBADpb3PS0efnNlTmzowg1riILAPDs4/383bsj5ApFs6MINaxiC9DotvNgfxdv
      nJ8wO4pQw8peCQ7OzxBJZZEKeWwNXjLxMG5vI+FIFG9LG07JwNHUsqGjEE89tIfv/fAMX7lv
      Ox6xOCZsgrIXwuLRZTJ5g9DiPIrdjtfTQmx+nLbBQeaGx0jndI4cuQ9D19F1HUmSNiTgO0Mz
      TAVinDq5f0O+niDcquwjQHg5jGF14nQ6UBuayCRC+HftJTg2Scf2HTgUSKRyeBvsAHe1ElzK
      0QM7OPPxOZaiGTpb3BvyNQXhMxU1CrGaofEgpz+a5N8999CGfU1BgAo+Cb7V4E4/haLG8Myy
      2VGEGlMVBZAlieePDfCT05fRxYiEsIGqogAA29sb6Whu4LdX5s2OItSQqikAwHPH+vnl21cp
      arrZUYQaUVUFaHI7OLKvi9fPj5sdRagRVVUAgN97pI/TH02SzOTNjiLUgKorgF218PRDe/jV
      O8NmRxFqQNkFiIQCzC4uEQrMsbwSZ256gkQ6w8TYNeKpNNl0inR2a34rf+W+HQxPLxOIJLfk
      +wm1q+yFsEw6SSAYJBRcprt3O1oBEoFpmvf0EZiaJZ83OHj4XiRjY0chVvPpWJB3L83yb565
      f1O/j1Dbyh6FmBgdRm3043E7iazE0LIpXN5G5iencHmaaZYMkukcjRs8CrGaw/d08fqFCSYD
      MfZs823q9xJqV1WMQqxmKhDlpdeG+M6po8jy5h5xhNpUdSfBt9rR3oi/ycmFkQWzowhVqqoL
      ANfvHPvVO8PkC2JXGmHtqr4APq+TQ3vaOf3RpNlRhCpU9QUAePrhPs5+MkUinTM7ilBlaqIA
      TruVJw/v5JX3RsyOIlSZmigAwBMHd3B1eplQNGV2FKGK1EwBLIrM1x/v5+U3L5kdRagiZRcg
      GYuwFI6iFbLEkxmWFufJFXUW5ufI5fMU83my+cJmZv1SB3a3kcjkmVxcMTWHUD3KXghLJmIE
      lsLYyJOWbdhkC5nwIg1d3USWIhhFg337+7FIBrquI8vmHFxmgjH++rUh/uTUY5s+jiFUv7JH
      IRZmp7F7fERDEVJGDo9NwWKzE1+JYlFtqFadfKGIardiGIZpBdjR0YS/0cUn40sc7uswJYNQ
      Pco+AmTTKYrINDjsaLpOIZ/DanOQz2ZQ7XYkwDCuP+J8q0YhVhOOp/mzH3/A97/1BKrFvBxC
      5avqWaAv8vKbF/F5nZx8YJepOYTKVjNXgW73zNF7xJ1jwpeq2QI4bFaOH+rl798bNTuKUMFq
      tgAAxw7u4PLUEsuxtNlRhApV0wWwWhS+dnSfWBwTVlXTBQA4uKedZCbHxIJYHBPuVPMFkGWJ
      F44P8uO3LonHKgp3KLsAhVyWdCZHNp0iVyiSTiXRdINUMommaeiaVrFPbOvtaMTjsvHJtYDZ
      UYQKU/ZKcCIeYzG8gs/dQCyVxigWkfQCmmpH12VUw6BrZy+KLGEYRsXt8/vC8QH+7CcfcO9O
      P4pS8wc+oUxlFyCXy9HVtY3Y8hJdXR2EliJko0u4fC3ElmNkNB1Fkm+++HW9so4GzW47+3f6
      Of3RJCcO95odR6gQZa8ELy3Ok9Ul5GIeq8uLomXx+NqIhII0t/hQkCjoBnabWhErwaWkcwX+
      y1+c4b/94TEcNqvZcYQKULOjEKt57bfjRBIZXjwxaHYUoQLU3ZvhJw/38ulYgHBcLI4JdVgA
      RZF59ol+fvzW5Yo7URe2Xt0VAOBQXwfheJrpQMzsKILJ6rIAsiTx+0/u5+W3LqLr4ihQz+qy
      AAC7uppx2VWGxoNmRxFMVLcFAPjGiUF+fu4KhaJ4rGK9qusC+Jtc3NPTwrlPp82OIpik7JXg
      4PwM0UwRRcticzeTiobwNPpYDoVoauvAKRmo7ibcTnUz8264Zx67h//+0ts8OtgtFsfqUNkL
      Yan4CvFUiqJuo5iLYHP4iM2P07Z/kLmrY6RzBkeOHMDQt2aHmI30+oUJYskszz3Rb3YUYYuV
      XYDxkStIdg9SPonN00JqJYjX5ycUCNDc0YlTBlQX3gZ7Ra8El5IraHz/h2f49jcfpdntMDuO
      sIXqbhRiNeeH57kwvMC/fuYBs6MIW6iuT4Jvdbivk+BKitmgWByrJ6IAN8iyxKmT9/LS60Ni
      RKKOiALcYmdnEw6bhYsTS2ZHEbaIKMAtJEniD07ey0/PXEar0Ns7hY0lCnCb1kYXe7vF4li9
      EAUo4Z8d3csb58fJ5Mzd70DYfKIAJXicNo4e2M6rH1wzO4qwyUoWIB2LMDpyhUjy8wfLhgOz
      RBJpJsdGWQiEGB+9wnIkwpVLF1mKRImvrJBI186DaJ88vJOPRheJxDNmRxE20R2zQIZhEA8F
      mVqYwbC00tzQCoCvycNCskAqlSKvG7jdfkIT12i/bRRC0zR0Xa/6S4myBF99ZA8/PXOZP3r6
      PrPjCJvkjgJohQyfDg1jaXZi3PL8nGBwiWBCx25VUax2YuF53O0dzA5fw9vaTodsEE/laGyw
      A1TdSnApR/q38fqFSebDKba3ec2OI2yCkqMQidAcH3x8mYFDj9HV4lrzF63GUYjVjM6G+dt3
      h/mPLz5qdhRhE5Q8B4gtLYHDjV0V58h7tjWjWhQ+HROPVaxFJV/h7pYWMith8gVxp5QkSbxw
      fIBfnLsq7h+uQSULEF0KEl0JEV7JbnWeitThc7N7WzNvi8WxmlOyAE3tXXR1tNPY5NzqPBXr
      a0fv4dUPRsmL+4dryirrADF0VSEltha6ye20cexgL6++P1r1l3iFz5UsQIOvBY+ioIh7ZP+B
      kw/s5P1Ls8RSObOjCBtk1cs8BV3GYRVXgW5ltSg8+3g/vzh3xewowgYpfRk0OE9OLxJLfT7a
      UMhlyBU0Msk4yXSWWDRCQdNZiUQoFItoxWJdPF/nwf4uZoIxZpfEnWO1oORjURr9fkIfX2X/
      wc8XwTKxZeKym+WZCbp37CCyHEabnkLxNjEXWELRobdvN8qNMYhK2yBjIz1/bICfnL7Mv3/u
      wap6+oVwpzuOALpWZOzSVdp7+1BvWcxVVZVsJoMkScwvLNz8h//s398wqn/+p1z7trdgVWQu
      TYbMjiKs0x1HgFwqQlR34nNakeXPf7vldIUGu4WO3TvBYqeYTeL07CIRjeDu8iIDmgGyfH2b
      JFmu7fOHF5/cz/965QJ7tvlw2sXFgmp15xFAL5LLF66vet7yG93b3EJ7qw+X24vLYcPb5MOq
      SDT7fFgtFhSLBdVa9oPmqp6/ycXDg9288t6I2VGEdSg5DGcYBsViEUWx/IOjQLlqaRjui+QL
      Gv/1r87yH154hGaPeKBWNSr5PmXu8u84/cF5VpJiFOKLqFaFrz/ez49PXzI7inCXShTAwN7o
      w1LMieGvMty3u51IPMNUIGp2FOEulCxAoWjgcTdgERtKfylZlnjxxCAvvyWOAtWoxCtcxiJJ
      ZPMJYnHxFqgcOzubcDtUPhH3DFSdkr/i7XYLmYyGqorLe+WQJInnjw/wszNX0Gp4AbAWlR6F
      CAVxuu0sLkX57Cwgk4yRyhbQ8hmiiTSB+VkyeY25mRmyuRyFXK6un6Pjb3QxuNPP2Y/FPQPV
      pMSFewOb10d+aRKP5/O3QEY+TSynEInOkZZtOBSVyYsX8Pb0MjJyDa1gMHhgoGaeCnE3nn5w
      Fz/4P+/wcH8nqrX2LwPXgpIFiIcjOL3N9HR38dkqQDaTJhBNoBaSJPUcBQuoDhfhpSAWuxO3
      3SCbL+B2XN8iqdZXgktxuxROPrCLV38zJnabqRJ3FEDXDRr9PiauTKDdchnU3dpNfwvYVSu6
      YaAViyhWK8VCAYvFgiRdXzj+fEaoPofEjh/q5bt/cYYTh3fiE4tjFe+OX9Pp6ALv/XYET4OT
      W1/CVlXFblNBkpBlGauqIksSqqoiyzKSJNflb/3bWRSZrx29R9wzUCXueMVa7W4eevQhHnjg
      AZrcdjMyVb3793YSWkkxLRbHKt4dBbA5G2lr9aIoSt2+jVkvWZZ49ol+fnrmSl1eDKgm4j3L
      Jtnb04LDZmFoPGh2FOELiAJsoq8/3s/Pz12lKHabqViiAJuovdnFvu0tnPtkyuwowipEATaR
      JEl89ZG9/PrDMbL5otlxhBJEATZZg1Plyft38vfvj5odRSih7HsYwwsTZG2tFGMBcoZCPhnD
      5XYTjSdoaGzBKRm4W9vxONXNzFuVThzq5U/+/AwnDvWKO8cqTMlbIkvKxVhIKSi5GKrDQTpV
      JL44Scu+fSyOTZLJGRy+/wCSoaPruriEepvzI4sMjQX4w6cPmh1FuEXZR4BgKEIsa6AUc7hk
      lWIuRufeAZZm5+jZuQubDJlMDrerdnaI2UgP9W/j9fMTzC8n2d7eaHYc4YbyjwBrUC83xa/V
      6GyYX719lW9/81FkcYSsCOIkeAv1dftw2KxcnFgyO4pwgyjAFnv+2AA/O3NZLI5VCFGALdbu
      a2BvTwvvXpwxO4qAKIApnnlsL7/+zRjpbP3eQlopRAFM4HbaOHqgh9fOj5sdpe6JApjk5P27
      OH91nnBcbENlJlEAk6hWhX/6SB+/PDdsdpS6Vv4oxOIURXsL8eA0toZm0rEQ7sZmlpeXafJ3
      4JQMVE+zGIVYgyP9Xbz5u0lmgjF62rxmx6lLaxuFiBfQ8gbFXASbw0dsfpy2/YPMXR0jndM5
      cuQ+DF2MQqzFyGyYV94b5dvfeNjsKHWp/FGIpWUiGZkGOY/d00JqJUDLjt0sjk7Q1t2DQ4ZE
      Koe3QYxCrEX/Dj9vXJhkeDbCYK/f7Dh1R4xCVIBgJMn//PmH/OkfHb+r/RiEuydOgiuAv8lF
      X7eP9y6JxbGtJgpQASRJ4rkn+nnlvVGyOXHn2FYSBagQDQ6Vx/b38Nr5MbOj1BVRgAry1EO7
      ef/SHCuJjNlR6oYoQAWxWq4vjv3i3FWzo9QNUYAK88hgN/PLCWaXYmZHqQuiABVGliWef6Kf
      l9+6JB6ruAXWVgBDZ+LaCPOLS4yNXCa0vMzlixcJhleIRcIk0vlNillf7tnegkWRuTIVMjtK
      zVvj1u466XSavAEeTxvLU+N03ByFMDhy5EBd7xCzkZ57fB//+9WP+c6pJhSxOLZp1lYAw8Ci
      qlhVB/HIAp6OLuaGx2hsa6dThngqR6MYhdgQ3W2NbG/3cmFkkUf395gdp2aJUYgKFk/l+NOX
      3uYH3zqGTV3jwVooizgJrmAel42HB7r59YdicWyziAJUuKce2sP7l2aJp3JmR6lJogAVTrUq
      fPWxvfz0zGVxYWETiAJUgYcHtjGzFGMxnDQ7Ss0RBagCiizz4olB/ubNi+IosMFEAarEvu2t
      6JrO6GzY7Cg1RRSgivzBP76XH715CU08VnHDrLkAqXiUWDLNSjhEvqgTWloiXyigFQrkC+Jm
      js3U1eKh2+/hN1fmzY5SM9a2EGYU+fijT+np7SW6EqWQiKD6/CTjKWTNYPe+vaiKhKZpYtf4
      TRJL5fgfL7/Pd//lV7BZxWLjeq1xedFAURQWFhexWSxIskKhkEeWZRSM64fmGxtsi8eibI7G
      BjtHbmy28dVH+8yOU/XWPAqRSSXAYkPLZbA3eEglYrgaGpCR0AwDq8UiRiE2WTZf5Ad/dY7/
      9PuP4r2xI49wd8QsUJV6Z2iaa3MRvvWU2HNsPcQb9Sr18EA3U4EogYhYHFsPUYAqZVFkXjg2
      wN+8MWR2lKomClDF+ne0omkGIzPLZkepWqIAVUySJL75j/bzozcvoYsRibsiClDlulrcbGt1
      8+HlObOjVCVRgConSRLPHx/gb98dplDUzI5TddZcAMPQ0TSdQj6Pbhjk8/nrN8HrOrouDsNm
      8LrsPNi/jf/3W7Hn2FqtcR3AYHFqlEhRxUjHUS0yWR0U1YkDA39PDy6bFV3XxSjEFssVNL73
      w7N8918cxeUQu/SUa02jEHoxz0IwTMHioLPVTzI0h6+nl+XFJVYKGl0WC/qNHWLE3PrWssjw
      Tx7cxc/OXubUyXvNjlM11r4SbGikcwXi4RCN/k6WA/O0+NuwSBJ5HZx2VawEm0TTdL73l2f5
      439+hPbmBrPjVAUxClFjhsaDnPl4kn/79QfFQGIZxBv1GrN/p59cXmNE3DlWFlGAGiNJEi8c
      H+DnZ6+Iq3JlEAWoQdvbG/E3ufjwqrhz7MuIAtSoZx/v5+/E4tiXEgWoUc0eB/fv7eSN8xNm
      R6loogA17OmH9/DWR5OksmLfhtWIAtQwh83K7z3Sxy/PXRULk6tY8wYZ0xMTSKqLbCKMp7mV
      5WCQ5vZOHJKBxeXF7RTL8JXkKwd6+O6fnyEUTeNvcpkdp+KseRYoGlkmWyii61Zi8+O03bZD
      jHFjFEIswlSOofEl3h6a4Y+/dr/ZUSrOGneI0ZibnaeprZPkyiJN23qYHxnH19FJtwyJVA6v
      2CGm4hza28lr58eZDMTYs81ndpyKIkYh6sRUIMpLrw3xnVNHkcWeYzeJk+A6saO9kRavg9+N
      LpgdpaKIAtSR548N8Mtzw+TF4thNogB1xOd1crCvndO/mzQ7SsUQ5wB1Jp0t8P2/PMuD/V03
      r9QpsoRS4g4+iyKXvJpntciUushnkeWS5xdWS+nXglri4b7SKn9eksBa4jUlyxKKcmd2q1I6
      4+0/pyhAHVpYTjATjN38b03X0UpMjhaKpe/sK2ilP65pesnHs+SLOnDbx43PPn47o/THDYNC
      iY9rhlFyv4TiKll03eDWD6+rAFo2ztDwOJ5mP07JwOXz43GKO8KE6rGuc4BsPEnP3j2kIstM
      L4RwOawblUsQtsT63gLpBUaGr9G6rRu7DEXJisdlF0cAoWps6DmAYRg3nwhR6uRptY+X+7Vr
      7XO/6P+v53PNzLWe73u3n7uen2dTToLvJoiuXz+RWe15Ql/2FwDc1V+QWZ9bztdez+d+Ua4v
      O0LfbS4z/x2qogBf5Mv+AoSNs57fxLVmjePQG6uYSzM1G6Cj3UdoJYW/0UkBFQpJ0pqFjtZm
      M+PVlODCDJLNSyEZwdPaTioex+NUmZ5bYNvOvbjtpr4UTGPqSrAhKTisCjOLIezkyBkyqUya
      ifFJDN24/cqxsA4NDW4y0QUKVjfLwQDZfA6np4lGtxu7Wr8XLEwtQDwcYGE5ik2GQDhBNhFh
      enYBt7uBUChkZrSac/XKZWRbA9HgHIasEJibIxyNU5QUrHU8HVox5wCCYAYxDCfUNVEAoa6J
      AggVKZNKoetF0tnCpn6f+rz2JVS87Moc//f1UQ7ef4hUIkWzSyGHjXwyjSxladm2m2aPc93f
      RxRAqEiNXX14r04TGPmYYM6KQyoQSWYY6NhGOBkib22k2dOz7u8jrgIJFcoglUqhWmTmAxEa
      HBYMiw23aiMcWaLR34XLvv7pY1EAoa79f8G04ZL+ILUFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Gender: Male vs Female Participants' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Recorded Trips' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Peak Summer/Winter( Seasonal) Usage by Time in Hours' width='384'>
      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
      6Bpn2hqprKyiu29kiptxBv7hPmqOVFHf2D5eU02N0NJwksrKKrp6BqaMiwRHOVpzhLoTDYTV
      id/TqH+II0frr/49PV5Hde3x8ZpezLWtuZHQlLemDMKBkfH5RS58sGEYjAyc40hVJaeaO6+y
      Dse+x9V1J8a/x4ah09vdTlVlJfVXfJcu0rUorQ0nqTpSw6A3OKEGhqFxsraC4eDkwQYNQ+ds
      exNVVUc423fpF8Y0NUJT/TGqqmsZ9E6+52MYBoM9XVRVVtJ65vxl24WBFg3R0NRylfF0DHxD
      vVQfqeJUc8d4DbRomOZTJ6isvPK7NLmmR082jtf0oohvgCPHTjFFacZrWnNZTTEMAt5B6qqP
      cKx+8uddqumJCzUNjedkGAb+4fN0nJ36voZh6HS3NY7VtH9k/jaAiH+QvS++waIVJSwrSOPF
      fS8SjF76sh85UkN7y2kiV37v9DAv7t1PyoKllKxczKEXX2AgqAJRXnn29/zhD3/kVNcUxTU0
      Dr+8n6grh7INazhV8QptvV50NUJNTS25S1ZRsryAl/e/SOSK9Xmy8iDdfgulpRsYbq+jpqEb
      gHPneihaWcK61UW8+vzz+K/I9WxjDdUtQ5SWlWHxd3Gwsn58QDo94uVEfT0n61snpTra08qr
      VQ2sXl9Kjktl74E3MYDA0Fn+61e/5unn9+KNTAobq+mBN1m8qoRlC1PZv+9FgqqOv/8MJ9v7
      WVdaRpoxwMEjDZNr+sJ+UvOXUbJiEW+++AKDQRUt6GUgCBtKy8jzaOx7pfKKmqocenk/UXcO
      mzasof6tA7T3XWq+PS11nGps5uzQ5OZ4ouJVzgVtlJZuYKi1lprGswC0HH2L//qv3/JyxbHJ
      Cwh0N9ZQ2zZWU7Ovi4NVYzVtqa8jZEmlrGwjrdUHOTM88abaaE8Lrx5pYvX6UrJdUfa+fAgD
      GOo9hzNjIWVlGxlsquJ45+DEmvoG2HfgMEtWrWdZfgr79r5EaHynrFNVVUtH62miV+4D9DD7
      X9hH6sJllKwo5I0LNYUoB575H57Zux//FE08NNrLi69UUrRqPcULktm79yXCmo63t5OGM8Os
      Ly0jWe3h9dorhozQQ+x9fj+Zi1awdtlCXt//AsMhDS0wwlDYTGlZGVmOEC++fuSKOJU3XtoP
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Percentage Growth In Ridership' width='192'>
      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
      D3r8onUN8vgHjXuU2x7G/h56AMLhMKlU6kLr2rZ9qdvrLrO+bdvHt3Re1EXH7TgOiqJceNuX
      Hfdlb2mc1v2tadrVnQJVSwXyB1W67QbNTv/MZc4bjGOb7GxvoxsmT3a26Bpnv+123vr1ygG5
      Qpl6pcju/sGZ960f3s/73h9A17F4vL1Fz7Bp1yvnbvs8zVqZ3f0D9F6berN95jLnBc91bZ7s
      bNPpG+w9fez5dWs3qjzdy1Pc36VYrnla1zL6bG8/xrQdauUDTI8TP1SK+xTLNTrNOu2e7mnb
      tqWzs72Dbhg83t6ib9qe1q+VCuQPKlRLefYKpXP3N1zVNYBjUGuZ9Js1XDVIp3n2zjhPIZdj
      cWWZ3O4eiWSCZuPsH6QzuTaVRhez0wBVo1qteJq4oZjLkV1dZ3/3Kbs7j2meszPP3rZLqdpE
      tbr0LIVu6/xTw7NUCnlmFlco7O0STyZonhOgc2sv14mqJn3doVr19prv7+dZWZ5l92mOZ9vb
      9M7+GTybo1PvOnTqVRxUOp2Wp23nc3mWVhbI7eVJJOM0m53BV3ZNqi2DfrOOomnUKtX3Xfxq
      AqBoGN0a1XaPdr3Cs/0iXmbSiEZC7GxvATZvPXhCOOLlJnwFq9+m1Gij97oY/b6nbceiYR5v
      P8LQdbqGQcNL+ADH7FEo1zG6TZ7u7mF5+E0ajYTZfbyF7bq8de9twmGPkw/YOnvFCoap0+v3
      PK0aCWpsbT3GMHr0dJ1Wx8O5vqLRb1VpdPu0amV2cwVP246GA2xvbeO6Bg/efuZx3CpGt0G1
      3aXf7dH/gP39/+30o4YtcgxwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Quarterly Customer Vs Subscriber Growth' width='192'>
      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
      TwdPsEMuYkIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='38' name='Sheet 11' width='84'>
      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
    </thumbnail>
    <thumbnail height='384' name='Top/Bottom 10 Stations For Journey Start' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzd13Md2Z3g+W9mXu/hvfckQILeW5SVWiVTJamdumemx0TMzMvExsbGvmzo
      D9iXjd2XMWoz6p5WSyqVyhcNCNAXCYIACE/Cew/ci+vvzcx9uCBAFMEqkQRFFnA+EYwo3Jvm
      ZAJ1fpknT/5+kq7rOoIgCMK2I7/sBgiCIAgvhwgAgiAI25QIAIIgCNuUCACCIAjblAgAgiAI
      25QIAIIgCNuUCACCIAjblAgAgiAI25QIAIIgCNuUCACCIAjblAgAgiAI25QIAIIgCNuUCACC
      IAjblAgAgiAI25QIAIIgCNuUCACCIAjblAgAgiAI25QIAIIgCNuUCACCIAjblAgAgiAI25QI
      AIIgCNuUCACCIAjblAgAgiAI25ThSV/ous7MzMwfsy2CsOXoug6AJEkvuSXPT9f1LXEcsHWO
      5Xn/viT94RYEQdh0oVCIaDSK2+1+2U15bn6/H4fD8bKb8dxUVSUSiWCz2V52U55bNBoFwGQy
      PdP6YghIEARhm3riEJAgCJsj/MX/ibJ8/2U347npmo5f/vYPm6CDjo5/ywwBSUSf8VBEABCE
      F0wPLqAvT73sZmyKrTReLI7lGQLAzHA37X0TqLEQc4shMtKTkQ02Dhw7guMZw4kej9DT3srE
      gh9dNlBRvYfcNBdrQU0nuDRNa3sPoWgcSTGRX7aD0pxUtFiQOV+c9BTXU+83Hg2yFIiTmvT0
      6/7R6Boz0zMkpWdiFAN2m0BjbnoWV0oaJoM4ocL29tT/B6QXVFFXV8fxg9VI5iTq6uo4c+rZ
      O3+A7luXmJHTOX3mLMf2lnPtwkWCcW31e11TaTh/nuyq/Zw9W8eR/bswSYnvVf84V5sePNN+
      Q0vj3GrZvFvzqx//Ex+dq6f+4kW++OxT2vonn3+japRrl+pZjj/+1di9Rs7dfrZjX6MzP3af
      c+fPJ9r9xed0DLz8q9V7jb/j//3b9wmsHrfKl/WfMeGNPdV2NDXG4PDII5/EuNnYwFJI3aym
      CsK31qYOAcUjfjrv3WNuOUpuSSVl+RnIqPR03MPscDMyNITZnUXtrgosBuXhWtwfXeTE93JQ
      ZAmrO5PqzDjtw8scLknMnNB1jUVfjNQkG5IkYXV4yHdAeGmKGzebGR4IU1+/hCujkP07i5ib
      GKSnb4SoCvll1ZTkpiFLUZqbe6jdVUb7nVvothQmBzsZmApTr3txpBdyqKbkuY4/sBxm7w/q
      yLXqqGqUj//5n0jL+Cuynyc6fo3sncfI0J/vKlZTQ5y/dJvv/vTPcJpk1HgUf+jpOtkXIeRb
      JD8zjy/bBji7rxgJHb9viWj86W52tViEOy1tFBXkv6CWCsK316b1TFoswIVPP6fk0GucybDS
      dOUCzeH97C9LoaflFpn7vsfxU2cY7brJpxdu84O3jqBIiSYUpFnoGpjkaHU+eiyCwWhidnYe
      VgKAJBvYVZXF55/Ws29PDXnZ6RgVGYsnkxNH9rEo+6ir27fSkDjBmMzewyewyFHOffA+8tn3
      KEnVuNvcjH+iixk9iX0HcinNsqB3eKk7u3+zTkOCJKEYTORmuZidD5Bls3K/4x7js14MVjd7
      9tXiNEvcu9NEbnkN451f0u+z8926Wnpa7zLjDaEYLVTU1JLlVNDUKOODvXRNTRJWJWr2HSLD
      bWF5oo/BaDK1JRmMdNxkTs5A802wtBwkraiG3aVZgM7McC+d/ePokgETJqpPHsSjJAKwrscJ
      RTQMsoQkSRiMZjxG88qpDNPTfo+phWUUkxmjI5mje3Yw3d9K0FlBUboVgFtXrrDr+AlM8RBd
      7feYXQqgSwqFFTUU56QQmHxAj89GkX2Z+qt3OfG9PydJn6PtXhf+cIyUnBJqKgpQvvJQrnDX
      Yfqufc5CVT4pj87Y03V88+O0dz4gHNcfWT/G5ctNHDtcw63LDUSduSj+GUaGBqivrwd7GnWH
      K9C1GJOjA/TNTRKI6VTVHiA35ds/vVEQntamDYL650YIWnMpzU5CNljYt6+W/p4eNB0MFgdF
      BbkoskxBZS0G/xjL0bUruV0n3sQRGKHh0iVuNLUys7SMLK81TZJkao6+xetHdrA4/oDPP/6I
      rpG5JxyRgayMVMb7u2lr70EDFr0BAMLzk7grT/Du996kOCtpsw59Q7quM7cQIMljY6D5MoNB
      ByfPnKEiXeL85buAzsToILcbz9EzD7t3ljDXd4cBv5MzZ89yeF81lpUxajUeQTM4OXj8JLuK
      bNy41Q1AaGmasbllABYnBhmdD1JWc4Czp0/QeaORCLA02kFD6zj7jpzkzMljzPd3EVDXzr2s
      ODiyO5uPP/qU1u5+oo8MvbVd+Zx5JZ2TZ85yZF8+7c2J4abluTHm/WtjUsP9fcRWZiNkFpRz
      6sxZjh+opOnqZQJRjahvlvbWO3x+pY3y3ftwG4JcOt9Aaskuzpw6Tmi4hY6RhcfOoWJycmBn
      Nk1t93n0bRU9vszn525QvvcwZ04dR5+8R3PfDKDy4MF9rp37FK8xjYrSEo6eOE5+YTF1dXXU
      Hd4FgBaLEcXEviMn2F+ezpe3WtEe27sgbH2bFgBUNYZiMK0+uFUMRnRNffzptCShyOt3q5js
      7Dl8gtfq6jh59BBWWSY3N/0rq8l40nLYd/gEb549StvVBgIbDOPGgnN8/NE5ZHsqhYWFZKev
      dfTWtEJ2l+bwomayaWqIW1cSzwDOffYpnqoT5Lpk7j2Y4sCuYmQgrWgngan+RIcT8kH6Dn70
      nbMU5abh8KSxONxBd98oksmBx2EBwGh2kpeXjUmRMdttxCORx3cuSWTnF+O2m5GNVmwmCQ3o
      beul+shBXFYjkmLAZFK+sppM5YE63nnzJDZ1iY9/+y/cG5pFJ8C9kRhHawoxyBImmw3DN5w3
      2WhBiXm5fqWRa7fvsbTsIxrTAI0Fv8r3fvgjdu+ogMAsy4qH/HQXyEbKK4oZHhjZcCZDXtU+
      AgOtzIfXAs7ySCdK7i7SnFZkg4kd+3cx1JkIinhnSNlVx1unj5CdtvHLV4rZRkFeLmajgtli
      R4uFt9SMEEH4Q23aEJArNQ9tqZF5fzUpdgN9PV2k5xWgSIkx/LimousSU4M9xB05OM1rvUk8
      Giamy1hMBpZnhngQ8PCTTOvq97oWYWx0jrSsDMxGhVg0jGy0IEsgGc1EA17imo6k60QDs8TM
      GRTlZaJGAvj9AR6OHkiSxKOjDIpiIhxcXllXQ1HWd45PS1asHDpZR+66FwxV9KifW9eurF7R
      5xVXoAJYPVSXF6CsRCRnZgV/9RcFDD7o5eKnt3AU7OVkTc5ztUnTdAzK18f5xHMVN+XV+ygq
      LuTX7zdQXvgmID9VsJzousnNUZ3v1J3AZtRRg5+sfCNTVF6F22pcXXZpapArjY2rFwxFeRUb
      t81g4+zRci5caSN5tb3w6C3Boy+zS54cagrTHttO4v5EEIRHPXMAkI0WMtKTV39WLEnUndzD
      3VtXUdExO9M5tq8EiThqJEjrrWt0SzEMFhdnT+3n0a42Flyiua2bSFwF2cKbb9dhXNfzKAQW
      R7nf14MOGIwWTr1Rh1UG3Z5DTd4Al+rrSckpoba8hPK0CeovXcJqc2B2Z+C0GgGF7OyMdcdg
      9WRTkTHCpfp6krKLObCz+FlPx9dQ2FlZzLipkJO1JeixAAOjcxg3WNI7O0EAG0WVu0hzKpzr
      mEV/zgBQXJXP9aZ2Cl87iBZcZH4ptO57TfXR1T5BYUUxdouBuclRzJ40DDgo9ERoHZxhd0EK
      CzNTRFc6WpPZzMLCPFqhjfnpcRaWE6+jB33LJGWWYVEkZsYGmZj3b9gmqyuVvIwUinfuozDd
      yfLCDEtR0xM76KSiWly3f8mgX6cUcORVo335GTO+QlJsMvdutVBUfXzDdSVZQY4E8YXj2BQd
      40YnXhC2qWcOABZnJmePZ677zJ1RyJmMwvULaolnAPuPnCLjCc/ZrJ5Mjp/K3PhLEg+BK2sP
      U7nRd5JC9cHTVD/y2d5jdRtu5+23z65fVzFSfeDEunWfR25JOfYNzmj5/tPQ1c7lhksoJgs5
      hWWATG5BEXbzWii02KwMdnXTfS+IweLgzNFaJEmhoKQE88pFvMnioSgvMTRkTcoiz554hyE5
      p5i4Y21bBcXFKEBG6X72xNq4erkBV1IGRtP6BkqyDZddo+X2daJxHWdyBm+9fhQDEkff/BOa
      m5ppGFTIynchr3TROVVHmLx9m8Yrw6Rn5bGjugqjJFG45whLzS00NI6Qnp3Lzp2VmA0SuNMp
      lO1r+zTaOVN3kvb2NgY6YthcKZRVrL8DSMsvx2x5+JOBE2dP8umVThxmGcng4O03T9Deeov2
      mEZ64X52lqQBMcrL18/kUowWThyppfl6I4ori1MHyskvLsay8lKFYnFQVJAt7g6EbenFJ4PT
      opz/+PfUvvYT0u3fvLiwueKxKKouYzIqaPEgv/vNp3znJ+9hf+qXoOb4xS+u8zd/8/0X0s6t
      KhQK4f3Vv8a+1PGymyIIj3nxqSBkE298/ycvfDfCxkJL09xp60FFRo3H2HHkFLZveCawMQOp
      KZ5Nb58gCC+PSActCC9QKBQiPNmF0/yyW/L8wqEwFqvlmxd8xemaTjQWxWz+9v9S4rE4SGAw
      PNu1vEgGJwgvmJxSimEL1APA78ewReoBSJEIhi1QD0BbqQdgEPUABEEQhKchAoAgCMI29UxD
      QAvj97ndPojBoBCLxsir3EN1cSbBxSm8upOs5G+e7jM0OEBeQdHqS1D+kRY+6Ynzp28ceJYm
      CcIrKz50jagcftnNeG56NELU9O0fN9d1HT0eI2p8tmGTV4mqxgGJ6DO+xPr0ASDu5ZMLLbz3
      l+9hVWQ0Nc5yMPHH7Zt8QG+86A8KAHfv3iErr3A1ANhzd/GjLPE8Wth6Ynd/SWSLTAPdIAnJ
      t9ZWOpYNssX/QZ4+AKhRwnENRZKRJAnFYMTjMuKbHuRmSw8z2gzqbC8ZRTuoLk6lt7WV8YVl
      NE0ns6iK6qI0OlvuMDw8QuOlSxgsNvbtP4AzOsmt4Tgndhejq1Hud7YxNutDNlqprt1DmsvK
      dH8Lw34bxug8C0t+XNll7NtRiB4L0t7Swpw/jNFkp3JXLRlu6zcfiyAIwjam/PznP//5U61h
      sGKPzdLY1IGKEY/HjUGRMDuSSDIEIb2as0dqSU9yAhoqVqp2VFGYl8HVTz8hq2YvBbl5TE6M
      8cbb36WsKB+LUUFbHOLK/QC1Zdn0N11kRM/i9NG9ZLgkzp+/SfmOcmb7mumakdm3t5bKsgK+
      vHKJ/NJK5npv8yCSwusnD5KV4gJZwWL6477zH/HNMb0cx2VL3CLrES/t3SMkpack0l7rGpNj
      IxjtbgyPpLmIBr30dvcwNjWLyebCZl5rtxYP09c/iiclacOHNb65Cbp7HzAz78XqdGE2fvNt
      YHh5nq7uXmaXgrg9nnVteUjXVKZG+nkwMEIgBm6nA/krqZp1XWP4QQd+zYrL/u0fFnhR4vE4
      kY4PMYVnXnZTBOExz/AQWKbi4Fm+/8YpbOoSn7z/K9qHnpCaWTdgM0a5ff0yl6/dwuddYiVt
      zNdQaXkwy6HdxRhkGUdyHgXWRYaXEt9m5haS5LQiG6xYLQq6ruNISmZ2oJOegTFkiwO3/SXM
      VQ7PcuFa2+qP071NfFF/idGFxAFrsTDXrtxAfaQfnRvu5NyVuzjTsslJd3Pti08Y94bRdY3R
      nmb++3/9r/zTb86x0Smb7rnJhTvD5BQUkuoy0nTjTuKWNrrAJ19cQ91gNC3un+bDz6+Skp2H
      XZ3j4/M3iH8lD7KuxWm+/DkP5lQKCvKRIj4CkceTJauRBS58foGGq7eIi1dJBOFb6ZlmAT3M
      HllWvZd3332LG5caNlzOP9XJ7+rbqT5wnLq6OnYUPZqM7cmdhoS+Lv+7putIX5OsxZNXzV/+
      5LuYowtc+Ph9bnSMPHnhF8ScVog0N8zDMgfdffO8dXY3wyOJspBR/ziqIw+7snYg7swS3n7z
      DHlZ6aRn5VOVZ+bB8CJa2E/38Cw/+tnPyNkouRDQ0tTDgVP7SUtOJju/hLq6oxjVOAtzsyzM
      zzE7M8PcwtK6QBBeXiRu9pCVlkJBcQkR7wyxr/Tty5M99AWSObGvkpSUFErKKnBZH7+zmOy6
      S8Hxd3BFZ5lbierxWBh/MLL6m9XiUZYDIXQd1HiUhbnZRJs0ETAE4VXw9AEgtERr530C4Ri6
      rjE7OoQzNZHIzWJ3MD8zjaprxOJxwste7KlZOMwKC9NjDE/Mr27GKalM+UKoahxVe7QXUthb
      mcnNlgfEVA3f7CDDoRTyv+Y9msXpUWZ9cYord3FoXyWzk9NPfVjPTbKS74kz5lVBDTCj2igr
      yCcwPYIGzAwNklZUtG4Vo9mykmNfJ7AwRlPPAkV5HhSrizfefIs015PvZPILU7hzvZVAZO3x
      j66pzM/NEggsMzU9xezcIo/2tY6MItLVSbrHFuhquUtWWTXmr/TtE0ODZOVnMzrQR3dPL3Pe
      4AZ717jXPcGuHSWU5zrpGZ5FB6LeCT45d3W1g5/ovsWNzjHU2DIN585xf3CU/s5mLt28t+Ed
      iiAIf1xPHwBMdlIsGs23rnGpoZEhr4l33jwCgDt3J1UpMRovNdA3vkBK8X7KHD4aGi4zNOOn
      qraWhwkrj589y1Drl1y52UwgoiFZkynLSwWgaO9pSh1BrjY2cLd3hje/U4dJAldaPplJaw93
      8/KLEqUhbVamBjpouFRP11iU08drn//MPIOS4mwGh6eIzI9jScvDYk9CCS/ij+kMDc9SUrRR
      xlOdke4mfv3RZQ689ifke/6wh9dVR99iVwY0nPuUz843MuUNoRjNlFVUkpqWRU3NLqrKizA+
      8hvWNA2DAl/8+m8ZlXI5saeM8f4e/LG13ti7tMj4yDBRyYTDauD2xY/oHF1ct291eYIZJZMM
      q0RRRSVDPd3ouo4tJQ9nZIaZQAy0GJ0PJqkuz2PmfguR5HIOHdjLwWOn0Kc7n7q4uyAIm+/p
      ZwEpRvJKKskreTw5s6SY2LHnMDse+Wz3wY3ztFs9mZw6+0iHaM3j6EquMUk2UrJzLyU716+T
      XrSLR+uE7apdqQNsSmXPwdSnPpTNll5UwvXL/YzFYuTm1yIpVlJdMnOLi4wHjRx1rL/c1rU4
      rY0f0eFL4id//lNsJsMfnJZYUkyU1uynZKdGYGma3/3217zzV3/Nk9O16bRfu4BceIR/fzjO
      B/X3mM7UuNG9yI9L1lIxu9weClKrKC1KB3RcpijnmrvYmXdsdZmh7nZCIR+X6utBjzH9oIfF
      WB0pJiN7q3O42zGMp9zIsjGdDLeZjuZJZue9XAqOATDrC5HjD4BHJJcThJdJ5ALaRCZHDuZI
      Ez1TNg5UOkGSyM1Kobe7BSmp4LGSivODrbTMOfnL905jeso6lZFIBJPJhCQrOJKzyHPFmAuA
      xyahaWqiSta6BycaM94wlTXpOFOsnKoe52//+QL/9j//x3UzfHJLSmlr6iZenoZBhlgkjNn6
      yF2JFqV7JMBP//RHpKxU+Cp1azR3TvLGnhyyKvew8M/neaDZKajcj0GSSMvIIj8pnzN7C5Eg
      0T6RgV8QXjoRADaRbDCSavLTNufgNVuic0zNzOHXv/9b9nz/Pz62/GBPD1Z7Nu0td1c/y8gv
      J90Wo6tnEJUoi74FWpubcdiTqCov5mEa/4H2m0z4FdwOK/Gwn3BKDYVuADfZ9hDXb97G406i
      ckf5SjEZhd01ldy8eYWpzBS8i1HqTu6hvamNlLqDPJzI6cgoZ2faJPWXr5HiMDEzvcDBE2dW
      2xdenCBgTMJtWfvTyauu5eJvmtH25CAbXFSlhjnfHuU//E3iriyjdDfdl65w7eY0VqPEciDK
      rn0HSXF8+9/EFIRvM5EOelPpRMNBIpqCw2ZJXOPqKss+P2aHC5Oy/qo3EvITDK8fCzfbHFgU
      Hd9yYN08KdlgxOlwrNbo1XWNUCBAJBZHMZiw222rb1Vraozl5QCSYsThsK/V9dV1QkE/4ZiK
      xWbHYjQQCgQxO+zrSnTqukYw4Cca17DZHZiNa529Fo8RietYLI+WcNQJ+IPYHHYkIB4NEYyB
      025dXUaLx/AHAmi6hNVmx/QUw13fZqIgjPAqEwFAEF4gEQCEV5kYAhKEF0xOr0JxbY08+soz
      Jh17leg66JqG/EyV8V4tmpZ4miY95TPEh8QdgCC8QKFQiGg0insLFITx+/04tkhBmEgkgm0L
      FISJrhSEMYmCMIIgCMLTEAFAEARhmxIBQBAEYZsSD4EF4QULf/5/oPjuv+xmPDdd1/F/XVbG
      b5Gtciz6ymTx6DNOqhYBQBBeMD20hB7YGvUAttKMEXEsYghI+GNSw0zNLH7zcoIg/FGIO4BN
      dP5f/o5Yaj4PkzibnRkcPli97iRrsSB3r9fTsejkX/3wNADB+VFutq4NEUSDC8xF0/izd0+v
      rhsPLnLtxm3ikoIWiyG7sjhzeDcKUYZGZsgryEP56l2gHqPj9k3GvRG0eIT04lr2Vuauu1lU
      YzP88n98Rl55Hug60WiEvKoDVBels+mi8zTeGOBPf3Bi87ctCMJTEwFgEwX8Gid/WkfKE74P
      eyf5X//4G7LLi/AuLq9+bkvJo64uD0iMTbZd+h3O0opH0jPo3G44T8ruN6jO8YCu4fMHEh25
      GqK1pZPMvDy++o5OaGGCjvEw7/7wdeSIl99+cJ6y4p/gemTKsE4c7BnU1dWBrhOPLPP7Dz4n
      L/enuP+4VTUFQfgjEwHgj0ixuHj3r/4dLmmK+6MbpwbQI/O0DEX46amsdVfqoWAEtywhSRJI
      Cm6XCy0epfnmNYaGhmi8VI/N5mb/of3YVn6rRqsTwossh+NYQ8tgtPG1ZYMlCbQ4cU1H0iEw
      2Uun10GR1Uf9lVbOvPtT3OoC9+51sRyOYU/KpLamCotRZnbsAd19Y0RVDYsjhf37dmMxSKiR
      AO1trcwvhzErESKqHT0e4uatVvYcPIzVCL1Nlxgjl7P7KyAe4NadTmoPHmB54gFd/ePEVA2r
      M5V9e3cRnOzh/pKVwzWFifMyO0DTmMrJPWWb8jsShO1EBIBNpKkB2u/c4eG7kvaUbKqKsle/
      N5rtuM2g+5+8jd5bl8k7cHq1E0+Q2H/8COcvf8FsYTk1O6tIdlqRDSb2HTnO6LyB02frsHyl
      czfYkjhUnsT7H3xClkPm4MmzbFDdEf/cOHfu3EGNhpidX6L66FmcJlhanqOj7T59apAde/fj
      VKJcOd9A8aHXOZDhZLDjS640dfH60WpMVg/7DhdiM8v0XPuEm93pnKlJ5/q5T3BWn+b0gXRU
      7yAjDWNIionwzDAT3l0UeyQGRmeZjgSI7ikntjjJ+EKEA7KE0ZbEgSNFWE0yXVc+5lZvOseL
      02j//By1OwuxyNDedBNr1Xee9VcmCNuaCACbSJItFJaWrhZlUYxPV5xejyxwoy/CX/zrrMe+
      c2eV8cMf5TE3PU7rlXME7bl85+Q+vu6Cfnm6j5sPglSnawzrRRSkGPj8gw849NY7JD8SCayu
      FEpLS9HUGI6hBwz13ac0Pw3QWFyO8+9+9i4us4GQb5SFeBKvZ3qQJCgs30HLp9cIqdXYHFZ6
      2u8w4w0SW/QSkpYhKDMYcvGzonRkSUIxmxO1BySF0uJ0ugemyCpV0FzFlEfHmfRHiA8PkVlU
      hSKB3W6h+94dZn1BIgteYkY/irWUg4Uyt3rnOFEk0zWr8JPXv/1pFgThZRCzgDaRJCk4PR48
      K/+c9qcJADr3796kYM9RLE9I7GQwWcjMK6Huu+9gnmhnJBDfcLmH22u/20btyTMcrvsBeZFu
      fvXrD3GU7iHpK7cBismCx+MhOSWNnXsPYgqMMb0YBmQKy6twmRPXCRISazOPSWTVQkIiwu9/
      9RscuVWcPVvH6UM1K99rIMsbzlDOLi5neriPmeFBMopLqarIpvf+KEPjCxTnZwARPvjVb3Hl
      r2zz4Mo2kdh14iy91y8x3NdJcuFOrEbxZywIz0L8n/OKUMNe7vYvs29H7kbfMtDdyeS8D03X
      CfrmWNJtuE0yyCak2DLLwShqPLau2LrH42Rudg5dh9ziIuZm5vA47Ssd90Z0AovTzAclnLbH
      k0uZ7WmkmrzcH19A0+I86GzDlVOCRYkRiptIT3YSDS7RfX8wsYItlVR1lgdTS2hqnKmJCaIr
      BeMNziyc4Sma+uYozk0iqaCC+d5bzMcdpDkMQJSQaiItyUkksEjXw20CWNKpyYry+4Zudu4o
      3hZ1BQThRVB+/vOf//xlN2KrCPimGOgfYWhwkMHBQSbmgmTnpK9G2YXxB9xoamVgdBqDFGNq
      cpylsEJGmofQ0hQ4cinKSubxFxQlFCnOYF8vvb0PmFkMUXvoCGlOK5JsICPFRntbGxOzfjKz
      M1eqhkkkZ2azPN5HZ28/uj2T184eY7Z/AFd21iMlKFWmBgYYmRxncHCA6cUQtYeOku62osej
      qCYXWSmJpxqSbCA3N5vxvi667/cjuXM5uLscg2wmwyPT0trJ9FKI7OxMTI4kslLcFBTlMtDe
      yoOhccwOD3a7m9ysFEDGYYiwZMygpigTSTYTX57EU1hDbqoLMJPhlmhp62TGGyInKxOTM4nM
      ZAeSJOF06HQPRTl9rAbDK/xGZzweJ9LxIabw1ngRTNhaRDpo4VtH13X67lxgyrqDE9Ub3TG9
      OkRBGOFVJh4CC98yEVqv32I25uDk3le78xeEV524AxCEFygUChGe6sFlfnWHqf5QoVAIq9X6
      spvx3DRNIxqLYTGbX3ZTnlssFgMJjIZne2tT3AEIwgsmJxejbIGKYPj9KFugIhiqihSJoGyB
      imDqSkUwRVQEEwRBEJ6GCACCIAjblBgCEoQXLD54lagcetnNeG56JEJ0C4yb67qGHo8TNT7b
      sMmrRFUTL4NGlWfrykUAEIQXLNbyj0S2yDTQyMtuwCbaSsfydTkBvo4YAhIEQZEAnPkAACAA
      SURBVNimRADYJGHfLGOzvtWf9bCX1nu9RB9OstU1JkaGCMU3b9atrmvMTQxxt/kO9zrvE4yp
      f9B6/vlJWpqb6XwwTFx7clqIufEBmu/cofP+EJG4Rnh5lAsNrZvWfgDUCFfqz+ENb+5m19E1
      ZsYSx9LR008o+oedJ0HY6kQA2CRSeI6L19Y6x+n7t7nQ0MDIQmKalhYLc+3qTbSnnA4eCYzw
      xYW7G37Xf6ee2/1eCktKSLHrNN1qJQbAAh/+/sqG60QXBvjwUhu5RcUYvX18crX9sWV0Pc7d
      y1/QOrpMcUkJLkOI8Rkvqhpmbt63wVafh8bC3BwxbZM3+5Cu0fnlRe6N+CkqLcFtjHC3uYMo
      EP6acysI24F4BrBJzGmFSPPNRHUwSdDdt8BbZ2sZGZmgNKWQyPI4mjMPuyKh6zohv5flYASb
      04PDakaSQI2FWVz0oiLjdHuwyCozM7PMz88zNTWFwWIn1eNc3Wdb2xCn/83rJMuAJ4mcQtDi
      UWYXZllYmGNqagrFZCElycPD1D+BxWkUTyapyUkkG0q59nkPsGvdsSyNdTMUTub7J3ejSJCU
      lJRYd2kOgHBwGe9yELPNidtpQwKi4QBenx9Nl3B6krGZDaDG8AajmKQ4vkAYm9ONzSixuLgE
      RivJHufqFUgs7GdmOYDR4sDjsiNJiZQPoYCP5UAYq8ONayW7qs+7hMPlJuL3EtaMeFw2gstL
      +IMRFJOVpCQXykp+IF2N0jMwxen3XifZLJHsSSKvJBGQx2ZmmJ9f2PDcCsJ2IO4ANotkJd8T
      Z9SrghpgRrVRlp9PYHoUDZgdHiS9sAiAmQd3uHCjlenpSRrPf8H4Ugg9HqTh3Bc8GJlgenKU
      zs5+YvEo8wtLBIPLzM3NsegLrNtlTraDpi87CD869KPFWVxYIBQKMDc3x8LS8rrkn0mFtdjm
      OhicXuD2ly3U7Nn92KGM9Q+RW1r0eI1hYHG8j9aO+8zOTNF47lPGFxOP0nramhidnGZ6YpiP
      f/8J3pgO/kn+7pf/TFt3PzNTY3z8u/e5equFqZkZ7jR+QdeYF4BY0EtnVy8zM1N82XiOuw8m
      0IGZgTYuXm1menqK6xc+Z3AuCMBnv32f0ZEOfvkP/5OG290sjXfxeWMT07OzDN1vZ3RubcaN
      JBtIdxlpae0mEl+7zdDjERbmvYSecG4FYTsQdwCbqKQ4m/vDk+RkBbGk5WG2e1DCi/hjOkPD
      sxS/lgVEqL/ey/d/9hfYDRJlaQY+uNnOT08WMuFVee+t3dgMMrqugyRRWVHM8MQ01dXVj+3v
      wGs/oLejlQuffYzRnsKhY0dIstooryyjpdW/4TqaGgM1wm9/+fccf+td9pWmM3i/h8ySCqwr
      PX4gHMFh2XiKnDuriEMH9ibuWOYGmV5cJjfJTM3BU4lylQCLQwzNhNntAEdqHgf370GWJKYH
      B6jcs5dMuwmnOs39KS/V2ekYbW5q9+4l1SZRUZjB787dYWdJNjdv3OXYj/+aNItCaY6ND6/e
      oegHJ9Fji3zZOsYP/+rfkuq0MnDrU5y5NeyqKeCxzCaygSNvvENPexvnPv0QizuLgwf34bG5
      qawoYnhqdsPzJAjbgQgAmyijqITrlwcYi8bIy69FUqykuhTmFhcZDxo56pAh4mXB6+PLy5cS
      K+khgksGFPsBzh4oof6zTzCYLRSW76KiMONr96eYrOzYe5jKWg3/3Agf/Pp93v2Ln+J44m9V
      58onH1J46kccjg5yvq2XXMMk9yasFD5SUtfjsDLjDUCO57EtyLKy1tEDOqBrUW5c/AKvbsFk
      UJgbmqK8TF9ZXl4pJAOSrPCEWjewsozRYkOKh4ipISam52m73ohEInCFQtHEdDfJxuvffZPk
      RN5rCveeZurqVT7+uAOrK5kDhw7gtqydBIPZTvX+I+zYq7E08YCPP/qMd999R9z+CtueCACb
      yOjIwRxponfaxsEqJ0gSeVnJ9HS1ICUVYJAAs4v0tFSOnT6LZeWKOx6Po+k62aW7yC2vRY0u
      8/HvPyMt/T0cSKhanETtrfXC4TAWiwVZVnCm5ZFqamA5Ag6DjLbhOipTAYmDmW5sxj3sGf+I
      v/tkiP/tv/z7dTUIcisqab3aSbg8C4tBBvQn15ABYtPdDMSz+dl39gM67ZcWVh5GP73g0jyS
      LRmLwUpObjYHTpxJFL7RdeKqigGQDGbMhke6b9nC0bq3kdBZGmri3JUOfvJGLZCYKRWNxjGb
      TciyQlJWPk5aCUZVHJKMqm58bgVhOxABYBPJBiOpJj9tcw5esyWy86Vm5dD2wS/Y88P/tLKU
      heP7izl/vp7MFBdqNIzsyWFvcSq3bzchW10QD2H0ZGE3y5j0dOw0ce3mLdwpmewqL1jdX1dT
      I0uaA6fNTCTgxVZ0kHQbgJtsl5/L17/Ek5RCdWXZSpEYA0f3lHDxYgOZyTYWw3bePFRK0+12
      jh+p4WE+QUdqEYcrFqivryc92UM0HCC9eDfZ9o2P25ici8Vbz83bOsTCTIzPU1S28bIbnjc0
      ulqbsCgxZmcWOHDkNEYZDu3fweWL9WSkudFjEXR7Fkd2lz62/vRgJz0TPpxWM775ScrKjq59
      qancu3UZP1YcVjPh5UVSympJshkg/uRzKwjbgUgHval0YpEQUU3BZjUnrip1Db/fj9nmxLhy
      xa/rOtFwkHA0jmIwYrNZkSWIx6IEQ4lavFa7HaOSuPqOx6IEg2EUkwW7de1VfF1TCQWDxFQN
      xWjCbrWuXslr8Rj+YBDZsP5zdJ1Q0E9U1bHa7BgViXAogtlm/cqQiE40HCIUiSXaaLUioRKO
      alhXng/EImFQTBgNMrFIiGA4itFkwajooJgxShrBSByrJTHLKRIOYzCbUSQJNRYhrhswG2Ui
      0QixaBRVA4vVhtlkWDtPkRDhSAzZYMRusyJLEqFgEIvNxtohaYRDQaIxFcVoxm6zrLui1zSV
      8Mp5MhjNid+NJH3tud0soiCM8CoTAUAQXiARAIRXmRgCEoQXTM7YuSXqAaiqiqIoL7sZm0BH
      0zRk+dt/LJqmIUkgSc82pUHcAQjCCxQKhYhGo7i3QADw+/04tkBBGFVViUQi2LZAQZjoSkEY
      kygIIwiCIDwNEQAEQRC2KREABEEQtinxEFgQXrDwZ/87iq/3ZTfjuem6jl/aGq/MbZVjefgA
      N/qM64sAIAgvmB72oQfnX3YzNsVWmjEijkUMAX1rTU9Noj2xmIsgCMI3E3cAm+jcr/6WeFoB
      FiAei2B05nLy6K5EDqBNdv36Vb77zruYX+BcZl2LcedKPQtRhVgoSMne41Tlpaxbxj/Zy/v1
      d8nJSl99+7Zwx35KstamPfpmhrnV0o2kGIiGg+RUHWJ3SQZ6PMita9fxxQAtBtZMzpzYi3H1
      fOnMDnfT3D2KwSATjcbIq9xLTXEmocVp5lUbuakih78gPCsRADZRMKBz8k/rSCGRnuD2+d/S
      NVbIrjzXy27aM4nO9NC97OZnf3IYXV3gF/+zkap/8+66ZdRYBHt6CXV1B5+YUG14fJajZ17H
      ZpTR4mF+/+vfkpf7M0IjA+TWHCUn2Qbo3Gv4HXcHijhUkihAEw95uXSjg7fffRenUUbX4gRC
      iTRzgakBuiPZIgAIwnMQAeAFikZi2CUAPw2XujlyoJDGi/V4Kk9ysCyF3o5WJub9SAYrNXv2
      kOayEvXP0dzSSTAaQ5dM1OzdT4bHBnqcwZ5OhibnkBQTU0uJoicPWm9hzNlJYZoD3/QDzt8c
      5O3vvo7dCL0tt3AU7ibV4Ke5tYvQyjZ37TtAqlXl8o0WDh87htUogxbh8qWbHDxzEquSGBlU
      nGmw1EsgriMvzmJ2pzz5YL9GzZ79q/+tx8KEoiqSBDllj+Th1zX8y0FM0qMfqUSj8ZU3HSUk
      xYjTYcQ72c/1li7G42PI831kFlWzs/jrU2cLgvA4EQA2kRr3cb2+HpuuoUkKlpQKyrJdwDwd
      t6+iG6F890HcqUk0NXyOteQwp3ZlEPHNcO3qRfacepsk2UTF7gMkOa0EvCN8dOEqf/7jN2m9
      epFYagVHT9ZgJM7U1BgASW4z11q7yH9tPz1tndjMCvdH59mVY6azb5I3aw4iRaNU1h4gyWEl
      sDTMxxeu8mfvvkaOLUzDnV6+c6SKid47LMoeLI8k7JfNblIMS/zDf/8f7Dt+iu+/dZiJkSE8
      mfnYTGuPj6YGO6ivX169A9ix/wRZ7vVvJmqxILcv17OopHH6O9/Hs/K1rmuM9d7lZucUu2tP
      UVSYtLqOwerhzTdOMdrZzODYDGl5ZezeWYY7q4Rje2ZoiWRTVysyeArCsxIBYBMpBhfH6upI
      1nXUeJS2K5/T0pfH4XIDRnsGx47ux7xSE3h8bImzr2VikMDgSSfJquH1h7FKc1z7shOrw4pM
      jKVACIgxOLnIqX05K3nwTZgMibH/lJxCwl9eIhipZjxg4I1jFVy4N0ix0YiUUozNILM8N8f1
      W11YVrcZBkmmrPYg1//+9/gPlNB6b5Ddr/1wXbGX9suf4qh+kx875vn89iClyTo322d4J3d9
      p5tZVP21Q0Cx0BKf/PZ9kqqO89qespUsp4Cu03blYzrnbXz37TdwW03r6hJIskJ6Vg7pmdmU
      VYUZaP+Szxq8vPPawc37pQnCNiZmAb0AkiRhMJjISHay4PUDYLTZMK+kg5aAlGQjc/NhAHQ1
      xvxiCIfNzPXzjex96094ve41zp4+hsskAwY8VoWl0MpsX11fLX0omdzkOeP09bRgyazCnpaH
      5Jukt7ef0opSJOD6hcuPbPMozpWrd8nk5ugON/WNt1mSU8hJWp/wf2zcT2VVLulFtZwsVvn/
      /rGe46ePYXxyWa8N3an/GGfNa5zaX7HW+QPe0WZuj5h47wev47Gt7/whkcY5FldBkjCarZRW
      7iC0OE1MAyQJTdUQBOHZiTuATaSpIe53dOAEtHiY/gEfR17PA5bXLyjBnsNHuHKrkeXcbIIL
      09gKdpPhMlJYmsO9m7dYSrbi9c3ijyXqVe3dv5vzlxvwlRWiRyNMLoZWN1ZWmsMvfnuDn/zn
      /wKSgQKXyvkeP//pbKJDLyjJ5t6Xt1lIsuD1zRKIrU0fLd13nM/+7/+HfT/8D5i+cjmw92AV
      Ny9epiQ7iZl5hTOHK+hs78RzYBfmRyYfLc2O0tmxllgrLbc48dwCgBhdvZNU5y/T2ZFIiSwZ
      zBQVl9Dd0kpK9h4edD1MlSyRllNIxkogUiPLXL/2JbakTGxmhfmpMcp31WJWQM/MJVjfTKvR
      T1JaDgVZyc/8exOE7UpkA91EvsVZghEVSAxfuD1JWEwGQGVpKYjH8+iMFZ1oKMCSz49ispHk
      cSFLiQefSwvzxHQZt8dNJBTG5UqsFw748PpDmG1OFOLYHU5kSUKLR5hf9JOcloICxMIBvCGV
      1KTE7CNdi7O4sEBcl3F7PCvbTGR11NUY7/+vf+TMj/+aFMtXSsLoOn7vAsGIisPtwWY24Pct
      Y3W6eViRUY1FmF9Y5NFXEuzuZJzWh88ANBZmZog+crEuyQaSU1KIBpZYDkYe2aOE3Z30yLo6
      8VgE75KPmKZjs7tw2leK2+g6oYAPXyCMzenBadv8Yi6bQdQDEF5lIgBsY9FwkPH+Frrm3Xzn
      ZLWoi/sCiAAgvMrEENA25l+YZlnK5M0TJaLzf4HklGJk6xYoPqKqyFuhIIyuo+k6svztfwSq
      axogIT3lc7mHxB2AILxAoiDMq0cUhFnz7Q+BgiAIwjMRAUAQBGGbEgFAEARhmxIPgQXhBQtf
      +L9Q/H0vuxnPTdd0/M/4sPGVoq9Mcd4ixwIQfcZDEQFAEF4wfXkafWn4ZTdjU2ylGSNb6Vie
      lRgCEgRB2KbEHcAm0nWNwa67DEx6E/PqJZmiHbUUZyV906qbsu/7rTcZmQsjoaEbrOw9cJAU
      h4mp4WGSCgp4/F1ZH7/5+49IzstC1zXiqszuQ0fJ8lgT21SjfPhP/w1zWR1vHalCApYm+2nu
      GkLTogwNT1NclAcY2XfiBLOtV4nl7WJHliex+egCH1/q5E/ePPFYnh9BEF4+EQA20XBrAz3B
      TF47vQejIhOLBAnF/jg93/LIXVqmTbz3+hEUCYIBH9rKrttvfsmeDQOAik+18eO6OnRdJ7w4
      wj9/coG//st3UIDwfB8BSxGh4S4C+ytxGCU8WSXUZZUQjy7wj//SSF1d3drx+xaJRmJrm9fi
      zM4vkchmJAjCq0YMAW0WPcL1uxOcPrITk0FBkiRMFjtuZ+Jlk6GO24wuhBjsauJXnzSCruOb
      G+f6lUYuXWqgZ3ASTdeZ7W+la8y7utm5oU56xhZBVxnr76Shvp7L12+zFIiu233Y70M221Bk
      GUmWsTs9OO0KD9pu8WB0lBv19dTXX2UuEGEjkiRhTS7AHZldTV3X3XKPHUdPkm2NMTLrexFn
      TRCEl0gEgM0SnSdsTsEmA7EQvd2dtLe3Mz6X6DjnRh/Qcvs6N9onqCovIhqY5WLjHcr3HObU
      8UPM379N1+ginlQ3TdebSORO02m61YwrycVM/11uPfBx7NQZdhU4OHfpBuojGdhSS/djnb/H
      +cbrjM0srqSLVijbfYiyvDyO1tVRV3eCVPuTk6ZpUS8BgxMbgBake1KjKsdJZWU+vT1DfPM7
      4yqj/fdpb29P/Ou6TygWf56zKgjCCyQCwGaRZFZ7SNlASmoalvgMN1sGANDVOH7cvPfu99hd
      XsDi8H0seTtIc1pQTDaqa8rpf9CPwZVPqj7O1HIc1TfCvCGPLLtCT0c/uw7swmSQScqpwOyf
      YDm+lmJTNrv47g/fY29lHmM9d/nN7z7FG/nmfPmRxQkaGxtpbLzEF+eucLDudUzA8vh9lMwy
      LBKkFZQzP9xL/BsjgIQrKYX09PTEv7RkDFsg34ogbFXiGcBmMaZgj83gjWm4jUZS09JRQm6k
      ucTXksHIzuqdKxW9EvOQH30yKkmJSmESMrt3FtHePch8oIPKfWeQAFUN0XrzCiMrqZLtqfko
      X5nHLCtG0rLyScvMI/9eA43NfXz/aHniyycMxJs9mRw/fjzRBllGTuRapruzD2PcQX19PaBj
      Dk9zfz7CzjTL15wEGXdyChkZaYkfwxJGpf/pzqMgCH80IgBsFsnIqaOVXKy/yesnD+C0Ggj6
      A+iS59GFVv8rqaCM0LkmFnbm4TbpdNzrobDiOEgSGcU7uPHROSY1Kz89kcjpX1ZRRmjJxckj
      1chalInxmXUFXBYnhvFKdnLTk5H1GFOzPlJzE3UEHDadmdkAySkWdElCefSqXJIxGNb/GWgR
      L8PLBr77gzewGRPL+suS+OhOJzvf3re5500QhJdGBIBNlFlxiCPmXu5+eRVVl7DaXZw8UAZA
      clYhim0tla7ZkcHZ4zW0N10npkJ68T52FKQAYLQlUZmXzKK9HMtKCcWcHYeIdLdzpbEBWTGS
      ml1A9iN3EDaXi6GeHga6gqAYSM/bw67yLAD2nD7LraYbTMo29hzaT/Jq8RQTJSV5jx1HJBQg
      v6wKi2EtUDhyd5DV14IKKIAkmyguXL9uUmYu8UefMShmSgpzxAwgQXhFiXTQgvACiYIwwqtM
      PKETBEHYpsQdgCC8QKFQiPBYG07TN8/IetWFw2Eslq+bBPDtoGkasVgMs/nVrCP9NOKxOEg8
      9hzvDyWeAQjCCyanV2HYAhXB8PsxbJGKYPFIBMMWqAimrVQEM4iKYIIgCMLTEAFAEARhmxJD
      QILwgqmjt4lNbJyD6VslEiG2BcbNNV1Hj8WIPeOwyatEVeOARExRvnHZjYgAIAgvWLTpF4S3
      yDTQ8MtuwCbaSsfyrBm3xBCQIAjCNiXuADaRrsWZGB5kwR8hKTOP3LSNZ34EFiYZXYhTVprH
      s924rdsrvrlJRifnsXrSKczNYH2KoDgjI9Pk5+esfjI+2Is5JZ9UV6LwS9g3j0+zkO6xry4T
      CXoZGRknHNNJycwhK9WDJIEWjzI1Psq8L4jFkURBfjYmZf11hBYLMTgwRDCmkZyRQ3aqG0lU
      hBGEV464A9g0Kpc//YAxv05aWjJTHZe51DK04ZK36s9x8eIXTPqeP1Xy0lg3F2/1kpSaysLA
      HS7f/WryNYnbFz9n4eGudD/nPvo9N+7cf/gB91uuMzQXXF0jHvTS3NKObHWRnprEcNtVrrUP
      oqNy/14LMwGNtPR0pMAEH37WSDi+9iqJHvHy4YefEDM5SUt2M9nXyv2JRErs1ksXGQtugbFw
      QdgiRADYLKFJHizZOFhdTmZmNvtOn6b/zpePFZ7WQtMMx1L5k4OFdPQmCoXrukYwEGQ1vb+u
      EQoGEw+rdJ1QYJmlpSUiG+TW985MYE3LIyszi4qqMqbHxr+yhEJZnp2+0USZl9BEH56ddWi+
      MaI66JrG+IyP/KyUtTWsLo4cPUZJQS4ZWdkc3FdDf98Aui5Tsecgu3eUkZmRQcnOWkyhGZZD
      a1XAFke70VIqqCzKJTM7l/2HT1Ge7SIc9DM/P8fi4hKLi0tEYurznnFBEJ6TCACbxZxMquJl
      dGEZTVOZ6O0iKb/ksURoE33dZJVWklFcyXx/N1ENdDXGxY9/x2wg0cFHA7N88tklohoMtl3n
      0s27POjt4tNPL+D7So7/rPLd+AdamfX6aLnTQWXNjseaVlJexmBfoi7BwIMhyqsrSTbHWPDH
      0VQ/C1E7qfa1PwVJklbSU2v4l+a4efseVTsqVj+XgFgkSN+9ZnR3Lm6bcXVdR3IG80NdTC0s
      J8ojSBKSBN7ZSWYXlxgbHmRgYAhfKIogCC+XeAawWWQbh/eX03DhC1KTHczPBzn7vXfWL6PH
      6X4wRdXpQ1hcMi7Jy7Q3TF6SmaqSdLr7xsmozWeyr4vkop1Y8HGtbYKf/uzHmGWJgs4GLrcM
      8b3DxWubRMagLvIP/+0XnP3Rn7Gr0EV//zCFxfkoK+Pu1uwSolcbUalmcEHjTKoNU4qT8dlF
      XJZxzBklj/0hxP1zXG9qZXpqEsWdz5tFWSvBLEZnUxNDExPM+XVOvPYGJmUtzJmSC3nvTZ3m
      W5e5oxkoqKihuiSbjIIyCrM6ydhVS5Hj259OQBC2AhEANkl0cYjzd2f4ybs/xGJQiCxP85sP
      PuInf/ku5pX+Meafo298mvid6/Qp4FuapaN/ktz9ReSX76T5YhuRmlw6e8fY/84p8PUzueTl
      WsMlgP+fvftsriM7Ezz/z7ze48J7DwIgQAOC3pNgWVWVVCpJ7bs1q56ejZndiPkA+6I/xMTs
      xHbP9HSrJZVURmVZRQN6T8IS3nvvrndp9gVAgyLLEARFd34RFWRd5D15bl4wn8xzTj4PWnSe
      RdUKLAcAXUtw8dQJNhx8j22LrVztGcIb6qU/mkbxvRiBbHCTYgoyuzBLzJSC1SCRkZPFwMAE
      dn2QwrJXHvg8RmcqBw/XoakKM0OtfPLVRf7yx4eQJRNVO/ayUVMJ++c4/uWX2N95j0zXnfXh
      EsnZxRzLKiQeDdF45gsuxo5wsCrzCR59QRDWQgSAdRILLGLypGI1GZEAiyMZKTxHRAWLEUBn
      ariP8n1vc3Tb8tk5saOS979uQdlWiMWTSYbxCkMDbfjtJaTbZDClkJ+RzeGjdRik5SpimnZv
      CEhXE/jCBnbmeHHlHmJq/Nd8eMXCf/n7fatW3UiyTH52Mi2NrXizS5AlCXdqFrGGm3QGIhzd
      tzq/i6apgIwsSxiMJjIKC1Eun0fXdRRNw2gwIMkGHJ40Mh1GfNH43QCgJBJIBiMGWcZic1G7
      tYLftYxxsCoTSdJRxdC/IDwzRABYJ66cjeR0nuDC5eskOS0szYySt+MYnpUjrGsqPX1jlB7c
      cfc9JncmXuU006EEuS4zm6sK+Kf3j/Ojv/+vyxsYk9lSZOX0+ctkJbuIhvzY0kvYVLJc6EU2
      WqksTeXKhatkeSz4pEy2l2m0dg2xq7r4vuWgEtn52Xz6b/X8/D/uXh7KsXhwKKO0xVNJ+sZa
      1PDSJDcbe3GnJGMywNLMOJU7tiNpCRqvXUIxe3BYzcQjfgLOXHZ47y0fDc2Ncr19kNSUVAyS
      ysTQGEcOLd9hFGzI49qVq4Sy08gpKibV/fwn4xKE55lIB72OdE3F71te4WKxOXG77HcngXVd
      JxQMYnO6uG/InGjIj2RxYjHK6GqChcUgSSneu9voukbQv0QkpmC2OnC7HKvW+d/ZZ1wBd1IS
      ZlknEI7icjrvLzmMpiZYXArgSUrCuLJuPxryEdVMJLm+cSLWdeKxCIFgCFUDq8OJy25FkiRU
      JUEg4CeeUDGYrHg8LoyrHjzQiUfD+ANhdCScbg9Ws2m5L7pGwLdEJKHhSfJiMT3+UxDPOlEQ
      RniWiQAgCE+QCADCs0wMAQnCEyanlmK4b6ns80pVNQyG53/luK6DpmsY5Of/s2gr1+/yGp+0
      F3cAgvAERSIR4vE4nhegIEwwGMT5ghSEicVi2F+AgjDxlYIwZlEQRhAEQXgUIgAIgiC8pEQA
      EARBeEmJSWBBeMKiJ/8fDIG+p92Nx6brGkHpxbhm1HWd4AuQolzXdSQgvsbPIgKAIDxhenAW
      3Tf6tLuxLl6kFSMvymd5nM/xYoTzl9Dc3Cya9qL8CguC8DSIO4B1dPrDfyPuzcECqGoCW1I+
      e3dsXPXk73q5cP4sP3rnPSzyk3uaVtcUWq6eZyaso8RilG3bS1m2d9U2wak+Pj3bQEZ66t2n
      ngs3bqck6/5ljzq+mRFOff01lcf+lqps26o21Mgixz/9FFvZQY7VFq9638JYLw2dw8iShKJq
      5FdspbIgnahvlkXVRlby878sURCeFhEA1lHAl+Dgz+pIATRV4dqJj+icyKM6x/W0u7Ym8dlu
      Wues/PU7e9His/zv352j7JfvrtpGjYexpBRRV7fzgdoHd/TeOMWJpkm8UpBgbHU2OF3XaG+8
      RUpmBtOhyOq2I37qLzVz7MfvkmQ1osSjBCLLNROCE320xbJFABCExyACbvM+nwAAIABJREFU
      wBMiyQZ0TVvJ3hnk4sUedm0r4vL5c7hK97CtJJmBrjZGphYxWFxsqtlCssNCIrxIU3MbwUgM
      THY212wj1WUFXWWsv5u+kSkwmpn2RQHov30Lc3YleSkOArMDnL0xzLFXD2M3Qd/tBhx5VaSY
      IjS3tK+06WDLtm14zQku32hjx+6dWI0y6HGunL9BzcG92FaekDQ4ktH93UQVHTnow+hwr+lY
      pBXX8J+2v0LDl//zgZ8FZwYYDbvYWagzPbn6Z6qqEItrmE0GJEnCZLGRbAHfZD+XmzoYV8aQ
      5/vILKqmqjhjTX0ThJeZCADrSFPDdLW24lAVFuamwVvBjhwPME9XeweBqU5MmWXkpbnob7rA
      sJrLocNbCc+NUH/qDK+/9ToGTaewsobUJAeBqQ4+O3mNv3nvMBNdN7g1JvP64UOYJIXJieVJ
      RYsUpq13jNyUDYz2djI7s8T4YojSZCOdXf3sLd2GrkQo2lhDqseBf7Jtuc13DyAt9NM+WkZt
      UQrB6QH6F+Lsvm81gcGRSU0e/PHzr3HIGq+/9mDdAIDF6RFaW6137wDySjfitd/71UpKTXv4
      AdMTXLnUSM0rP8Ew3fDAj012D5vLUjj++VdsrK6mrDgfs0HCk1XCvpoZmmLZ1G0tWNN3JQiC
      mAReV5JkJj0ri+zsHAoL8gjNj7MUXH5UOzQ3zYb9b3Fs/07Sk+x0dY+zpaYck0HGk55PujXM
      1GIEsyMJZWGEi+fP0dA5it+/AKi0dAyze9cWrCYDBqPlbibN9NxiFscGSKgaQ9NRjuwpY2R4
      ilh4logpDa9NxuxMIj4/zIXz52joGifgXwBJZtvuWhqvNwA63a1tlG2qWlVHwDfeQduMgSR1
      HmdeJWnWBF9/cRz/N4ZxbK4ksrKy7v5nM/2wX6uJtosksmvIcj/8MXZJNrJpdx1v1u1BDk3z
      +Ucf0D4y/+hfjCAIDyXuANaRJBtJTksjBUhLT8cWneNG5whv7fLiyiqmJMuDxHIyqgfWbknL
      r7XUf8xc8lYO7j+IUY4w84d6ABQdjA9JXmX2ZODULjG/MErCmk1RYTGNXzczZZRIK6lABppO
      fcxCWg0HvtGmPa2cAu0C7ePT9M6qvHEoddU4/rVz1zj43v9BjinCZ3/4A18MO8jcdAiXZfXE
      s9XuJi0t7VvnAB5KCXL6YjspZRpn6kcIzw4x5Ldy3Wtl16aSe4dFknG4k6ncsoPSolx+/9Vl
      SnLf+Y6GBUH4ocQdwBOiKTH6R6bJSLm3Gka678/y8mxaW3pRVA3/7ChTQTOZyTbmZ0MUFOdg
      RGVyaIClmAYYKMtJorFjAFXTCC7NshRaKaoumdiQ6+LC6Uukb6hEsqbglZa41j5O+UrhmPn5
      EAVF2RhRmBjqxxdbiT6SxJ6Duzj1wR+wZG7A/Y0Te1KSg9m5JXTJzKbyPHpGFklPdrAujE7+
      9j//3/zolWPU1dWxr3YjhRVbV538E9EA3V29hKIJdHTmZqaxeZIxSmC02QjOz6FqGoqirE+f
      BOElY/jHf/zHf3zanXhRBBbHGBgcY3hwkOHRCbyF1WwuzUaWNAIBhcLC7OUNJQlvRi7q4git
      Hd1MLcbYtX8fHpuJzNx0OhsaGB6fxuROwWWxkJ+XTXJmLpHpftq6+wjEZRx2KwX5eRhkCafd
      Ss/gAnv2bsUqSziMMSbibrZX5CMBGTlpdDY0MDI+g9mTitNqJj9vuS9mRzL9LdfYeug1Up2r
      h2Iy8/IYaW+kd3AEyZPP64e3MdLXhzc9mzu1XHQlzshgH6NjYwwODjI4OIhuSyHZda/we8u1
      etq7B1kKqYSW5hgbm8CZnI7Dei9FspqIkTC4yE69N9EsSRLBxSm6OrvpHxgiKrnYtWMrNpMB
      s9OLtjhMW3cfqtlDqmedAtM6UxSFWNunmKMzT7srgvAAkQ76JZeIzPLRZ9d47xdvY3r+n4x/
      5oiCMMKzTMwBvMSmBjtoaOtnV91RcfIXhJeQuAMQhCcoEokQHW/FZX7+/5lFo1GsVuv3b/iM
      0zSdRCKBxbK2IirPkjvzX0bj2q7lxR2AIDxhcloFxhegIhjBIMYXpCKYEothfAEqgmkrFcGM
      oiKYIAiC8ChEABAEQXhJiSEgQXjC1JFrJAyxp92NxxeLkbBYnnYvHpuma+gJhcQah02eJaqi
      gAQJg5gDEIRnUvzWvxB9QZaBRp92B9bRi/RZ1voopBgCEgRBeEmJALDO1ESEwZ5OWlpaGRqb
      QX0GVtlqUR99o9Pf+vOFgRaudY1/fztqgv6uduYCke/d9gf1KxGmu+M2bR3dBKKJh26jxsP0
      d3fQerudWd+37VdncWqY3qFJRJE0QfjhRABYRzHfJJ9+foKY0Ul2ViaR+SHa+ye//41PmB4L
      MDT57Vk0Y8FF5v3ff1KPLAzx9fETnL/Rgfa4ndKiHP/jZ0jOFJKsKp99doKYsrpVJebn+Gdf
      EjU6yUjz0HrhS1qHHvwcuqZw5cwJjp+sJ/CNTKWCIHw7EQDWjc6Fk6eoOfom5cV5pKWnU7F5
      B5tWErLFIiHiioYSj7LoCyy/Q1Pw+xZZXPKhqPrddlQlztLiAku+ANrKHYQSjxCNK0SCfhYW
      FgjHlhOkRSMhEisnTlWJ4/MFVq6CdWKRMHFFQ3ZlsLv6XqlFNRFjcWGBRV8A9b5L5kgowMLC
      ApHYw6/G+9pus/PNnxCZHCASX95nPBommrh30lXiESJx5d5+FhfwBUIPXpkngkyFjRTnZpFb
      VI4tvkhQWX3yDk73EnEWs7E4n4zMXGprK+m83flAItWYfxyfpZiDxVa6xheXj6KqEAxFuHsD
      pqsEg+Hlv+oqQf8SC4tLxBURMISXlwgA60VdZCTopDDJfC/rpyTdza9/+/ynNPeO8NFv/5X/
      9dFpNCXG9bMnaWzrpqe9kZPnbxBXdfR4iNNffUl7zwBtjZc5f6sHHRi9fZ7fffgVzR09DPZ3
      8cnnp4irOr03znCzfxrQmey6yn/7p98wF0qArnL55OdM+GKogSE+On4dgER4jq+/OE5X/yA9
      HS2MzoUAnZHuVlo6ehjs6+bLL08SiD9wxqZnJEB5aRFF7jgDs0EA5vobOHW9e+VEq9Ny/jjd
      U0HiwVlOnThJd98gzdfOc71tcPWJ25LCjgIjl9pGGO9tRk4rwWNevSbBmpSNHBhjLhhBU+IM
      9Q+TlZ/7QNrp0c42cis3UVpZTm9HFwC6EuDTP35JRF0OVJG5fj4704CuKbRdP8fVxg4Getr5
      +tR5QnERBISXkwgA6yUeBot9+eQU83P5wjm++uwPnLjWDYCuJrh14xZbj7zLf/3lTwhM9TAW
      T+bg3t3s3HsIb3yMvukA422X0bJr2bdrO/sPHyPQfZW5lRWEOWWb2bNzO7U79uAlSEjVyCsp
      YnJgCE3XGRmdZ9+2IoanFlFiIRZiFjK9qwuwN52rJ29XHXt21LJrz34K0hyARHZpFbu211K7
      YztOzY8/vHpdQWymh6i3DLdRYmNVGW1tPQBkllazMNiBoutoMR99CzIbstz0ttzEXVzLrh21
      HDh8kKmOmyxF7xvi0TXMVjONJz/kbFeAV4/sIjAzzIz/3nJJiyudjfkOzpw8yalTJ+hbMFNT
      kfeNA69yu3eW6tJ0XFklqJN9hDSQLUlUpKl0TSwHqq7bHVRsriLqn6RjLMHhg3vYvnMvGzwx
      mvtFpk7h5SSWga4Xiwsp4kfTQba42XfwMIsjtzjTvTK2LhnZtvcoGwqSkQD/9CQzMz7OngkB
      sDjjQ/EFCYyPM68aqF/qBcAXCTLvi2MBjMY7+fol5JXiMJ70PJSl04SiEaajFl7bXsLJ5iHK
      zCaMacVYZLj/+nZ8PsrhtHupk+/coRgNBqRVl9b6qr+3NzcTC7mor69HV4MMts4RfXU7VksS
      VakJ2ifDZAa78ORXYDPqTE9OMjtnIDLZCWjMBwKEI3G8K7lkprpv0B5I5f/8h7/h809OMb8w
      xeWzjbz185/c3etsXwNdPjc//clRjDLMDbVy6ux1fvzaXgwrfU0sDtI3G8Z98QwSoEQmaBnw
      sbfUQ/X2Gn5/oYmtGVsZmIfX9icRnRpgZmaGC2fPABBanEHWfEDWWr51QXiuiQCwXmQP5ekJ
      WkYX2ZrvfWCYQpIlbDbb3dddaRnkF2Zy9OBmJInlAvLAWCCDmHsbByuSAdCPHELDyMjow3cr
      md3kuVV6u5qwZVViT81BCrTT3a1QWvXGA/3ISbYyPh/Fm7kcBH5ILkBdDdMzb+Nv/+xtzPJy
      i8m8T9uIn+0Fbrbs2sHvz11n0bTIxv1bkSSZtMwsvDk7qCla/hyapnL/Def89Cx5JXuxuVN5
      41gN//1//Auv/er/wmm8t03It4QzpRSjQUYCnK4kQkujKDp3A0Dv7XaOvvdXbC9MAkDZXsS/
      n7jFntI6LCmlJEeu0d5jw5lThsMsE3GlkVtQyOGjBzBIErquoT32jLYgPJ/EENA62ln3JjMt
      57l45QbNzc20dk2QlvbwJGDurA14YiNcvHaD5qYmLl24xJQvQt7mfQS7z3P1ZgPNjY1cuHgJ
      /3c+RCpRWprL119cZUNlPkgWCjwa57qDFGc+mOyq5nAdI9fruX6riZvXLzM8G/rez+Ub78OU
      VoDpvluE8k1VdDa3oQOm5GIci60MxN1kJVkBibLqGibarnC9oZGmhltcunqLcOLembaoejPj
      rddoamqitXuC/ccOMNbexFLk3v1KbuV2tMk2rly7RVNjA+evtbB11y7Md35rtQjto1HKs113
      32NwF+CODjMX0QCZmupcPj1+gw3lxUiAzZNNvivCuUvXaG5q4uqlCwxM+b73GAjCi0ikg15n
      mprA7/ejqDpmqx2nw4YsScTCQTDbsdx3hbu8bQBF1bE5XNitZiRJR03E8fkDaMg4XW6sZiOJ
      WBgFMzbL8k1bOBTCYrdjkCQ0Jc6SP4wnOQkDoMTCBGIaXvdy5kZdSxCMKLgcy/MBSjyKPxAE
      2YTb4wYlSlw3YreYAJ1wKITZ6sC4cpmtxCPENSP2+yp46bpCMBjD6XIgAZGgH9VgwWm7lypA
      iUfwB0LokgGny323kP1KC8QiIQKhKBabA6fdSiwcRLI4Vh0jVYkT8AdQNLA5V47R3SZUAqEo
      Tof9XjF7XScSDmK0OjEZlo+NLxDBneS5e9egayoBv5+4ot7dtyQ9mYIIoiCM8CwTAUAQniAR
      AIRnmZgDEIQnTE4tw+B4/gupqKqKwWD4/g2fcTo6mqZhkJ//z6Lpy8OqsrS20XxxByAIT1Ak
      EiEej+N5AQrCBINBnC9IQZhYLIb9BSgIE18pCGNeY2bTb70D0HWd27dvr61XgiAAy/+OdF2/
      u2z3eabr+hObK/lTe1E+y53r97V+FnEHIAhPkLgDePaIO4B7nv/LEkEQBGFNRAAQhCesv7//
      aXdBEB5KBABBeMLu3KYLwrNmTctAb5z6lAXZyfJjQ+DNKGJrVfHdB20eJrQ0j27z4LTc2aXK
      zMwi6empa+nCt9I1lZHeNgbG51B1ifzyzZTlpj6QEkEQBOFlt6YAMDUyx55f/Zg0QE1EuXLi
      j3R606nO+fYJouHW6ygl+9mc4155JcaZM5f58z//8Vq68K1m+xtpHpN4/eBhZCXEyePHsTp+
      Qr73ya/DnhvtprlzGGSZWDTOpj2HyE9xPLBd99XjnOoI8ctf/hznYy5FVqJ+rl25SkSTicc0
      tu7dT4539T5nu69yvHmG3NSV70c2UrVtF5me+4+JzvRgJyfOXuLoz/6B3JWvSY2HuXHlIoG4
      jKrL7Nh7gFSXGU2J8dlH7+NKzQVAMpjZsmMPKY57v1L+mSFuNPeALKMoKlnFVWzakEsiNM98
      0Eh2xvM/MSoIz7PHfhDMYLLgcZgJhKKAEyUW4nZTI4sRjYIN1RRnJzM91E5TVz/anM6sx0ZR
      2QZmRjoZGxuivr4eoyOFPds3YyTBQFcbwzM+UnNKqCrLxyhLjHQ1ortzmR7sIqRZqdlWxexg
      F6Mzfko21VKQ5r7bn6H+foqq315OO2BysW1jLg3tg+Tvr3zcj/o9AgyNJ9h/5CgWowElOsdv
      PjjB3/ztT1l1jtejNHYvsSXXRPfIIrVF3sfa60TnTYKuEl7bXsLSRDunLjfzi7f2rdomEQ2S
      VlJD3fb8b2lF4eqXH3J7wYwx5uduenxdp+vGWWJJVRzbUkBodoDjp87z03dfQVIWiBly+Uld
      3UNb1BNBTp29wYE3f0ya04yqJAiGljOjhhZHaB+0iQAgCE/ZmuYAdD3B5OgoI8NDNF6/xFDE
      y5biVHQlyOd//Jzkkq0c2reDydZztI4skVlUTU1FCVt2HaCu7ijF+bns3r+P3NxC6urqOLR7
      KyYD3Dr7JXNyOkcOH8IWGqD+2nL1p9HOBlr6Z6navpfNaTF++/EZHFkbOLinmhNfnlzVt6zs
      LIb6eokrGpqqkJAMBBYW1uNYfQ8X23dXYzUZkSQJTYkRTzyYZjI02YeUUUx1ZRl9HV1ogKbE
      uHH5MpGVqmBaIsLNGzeJKjqx4AI3rlygvr6epq7hB6phOb0p+KenUHUI+/3YXO4H9vn9JMp3
      vcqv/vpd0pz35/tR6Rueo3pjAbIk4UrNw6XNMRdIkJifRvamfXuTqkI0rmA0Lh8Po8lMUpKH
      2MIYl6+30tvVuPyZukfW0F9BENbDGieBdaLhMJFIFNlkxWLQCUfj+Md70dLLKUhzYTDb2bO/
      lraGH/Ywma4G6Z7U2V6ZhywbKK3eRXisg6ACyDJllVU4LEZSUlNJzswnO8WF0ebEoK5OlZlT
      tZcyT4QL585w/vJ1xmcW0P6kMwA68+PdfPDBSfa/dmz11T86vZ29lFWU4U4vgqUh/DEN2WBE
      8U/QP+kHIDDTz9iihtmoUv/lcZJLtnLk8AEig9dpHfGvatGbvxFvpIfjJ+u5ORDl0K6H3eno
      TA5109zcTHNzMy232witmpc0kJyajOEbD5PomkZIkXCaV16XjThtRoLhKDFFRvONUH/6NCdP
      nKC5e2xVnWDJ4mZnVR6nvvic5s4+Iiu3FbbkXPbt2kxZxTbq6uqoKf+2uxJBEJ60NQ0BSZKZ
      ovJy7lz/zXZc4FLLAPvT45jM96XmtVjQEz9sBYROHE0yYVw510iyjFEC9REfU5MNJipr9nDn
      NDjcVI/flvFojayRrqu0XTlF40iUV9/9BVne1XMiuhKibzbBsX1JGCwS+Ukyg1NL1BQkU75x
      Axc6utmYs4Oe9i42VL+GHJxgigzeyHAjAdtrN/JRQy9b8mvvtMhgyzWCriISox2Uv/7XWGLT
      fHqmn7deP4BBvndC96RkkJubDYAkyZh/4NyDxOrSMJqmI0sSSQWb+bOCzaDrJOIRzn35IV2u
      n7Ixe+UzSzJlNfvJLQ8wNtzPiU8/JHfzAWrLs9d0bAVBWH+PPQegaQqzc0u4PEUk56YSuHWJ
      YKwMu0mir7GZnIpqAMxWmQVfGD3btfJovBGUCFFFwyyDLHvJsgcZmA1SlGpnYaKPmCMT9yP2
      UNMSRKMaNpuZWGiRhu4ZDrx96HE/5g+g03npC1qWUvnLP3sNo/zgXYd/eoRgTKHh8jkAEorE
      cGcPW/J3k5xTin79K5ZCZfTOSPzsFScE51maGuRMff3dNipLNtzbYyJKU8codb/4S9zaVn73
      2w/ptrnYcexHyKv2L2F3JZGa+mgrriRZxmOVWAqp2BwGdDVOIKLidtruPUovSZgsdsryMumd
      nr8XAAAkCZvDTdnGrZSUFvDvv6+nqvi9laMlCMLTtqYAkJLp5mZ9PcuZ33VMjjz2VeciGyTe
      PLyJa+fPoktg8eRyYNPyKpGC6l2MXb5O/aSFkuoaijKS2Le9jLP1p3F4M9i9bTMHXznGjVvX
      GdB0MNp45chuZAk8KZnY7wxNm+yke+889iyTmbX66l5TIty+2UBA0dA1qK37EWmOP0HSU8XH
      5XYff/X372B6yMkfXWewp5+th15na2HyynuC/Oa3XxBWduA0OajMsXP2q+OkVB7ELEngymFD
      ppPSLTvJT3ESWpplIXbfpbtswGk1sOAL4U6yU5bj4fqIgvO+vP2PQ5INbKwsoLHhNq/u28zs
      QBuKp4hku4Hh7lZ0Vxb5Wakkwou0Ds6y5ZV7gVaNhegdHCM7vxCXzcTi9BQWlxejLGEy2wn6
      ZkioG0DXMBlFUlpBeBpELqD1EprhoxNXSPLcGwIzWZPZta8GC6BrCi03b1Jcswu3+d7US/et
      S7g27CLbbSLhm+TTkzeo+8k7eE3LQSTin6OltY1QTMXm8rKhopJU951C7zrhxSkaWjpJ6Aay
      C8vIdKr0ToSo3VzBnTi0NNLG2ZZR3PaVwPmNZaBKLETDjWsE4+BbmMXqScNicbJ773bsssZA
      922GJxcxu1Kp2bI8FxMNLtHT3cXcUghkI8WVWyjITLo726JrChPD/QyOThBL6Ng9yVRWVpLk
      sKCrCXrbmxiZCZBeWMHm0pwn+MU8XZFIhJaWFnbv3v20u/LYRC6gZ8/j5gISAUAQniARAJ49
      IgDcI1JBCIIgvKREABCEJ6ygoOBpd0EQHkoEAEF4wl6EoQbhxSQCgCAIwktKBABBEISX1JoW
      YC9O9HKjdQCD0YCSUMirqKGqKIPw0jR+zUlm8oMZML+PFl5gxC9TmJm0li4JwjPL5/O9ECUh
      hRfPowcAxcfnJxt4769+jt0ooyoJAuEoAP6JHrqUorUFAN8Yt3pMIgAIL5yJiQny80XOI+HZ
      8+gBQI0TUcAoy3ezPHo9ZvzTg1xt6mJGm0Gd7SajaCPVxan0tLQwPu9H1XWyijdSVZRFIjDD
      rd55Nhd5OXfmIuml5QQGWxieNlCvTJCcU8bWinxRxEUQBOEJevQAYEnhYHUqn3z2BZUbqykv
      LsBiknFnFLGnpoIupYjDm3NXNo7jTiuguDoFlDAf/+4jsvL+DkcsQG93J6MdAbIrtlFaUoYr
      HRZ6TNQdetJ5+58cXVMYG+xjPhAjOSuf/IzlXP/B+Un6RqbQkbA6kyguysdifPj0S2hphv7h
      CWSzk5KSImwrWdui/jl6BkZRdZCNFvIKi/C6bEiAlogyNNCPP6LgzcghLzMFeVVmT51oYIG+
      gTFM7lTKCrNX/TwRDTA+HSCvIJvHrE8jCMJzZA2TwDIVu+p4+9gBLPF5Pv/o97QNzz98U92E
      y6py48p5zl+6TsC3RGAlOejs9Az73/45+7dvwut88tW6njhd4exnHzMVM5Gbk8Vc5yVONQwC
      MNF9g6m4i/y8XMyqj08+/Ii5sPqN9+tMdF7j6ysdpGXlkmRJ8MUnnzIfWd5uaayTnlmV/Px8
      MpPtXPjyYwbmImjxIF9/8TkRk4fc7AyWxjrpGJpb1bQSmOKjz8/gSsuExR6+vHAbXQd0ld7m
      y/y//+2/88nXl0j8KY6TIAjPjDWtApKk5eyS5Zu28957r3K5/sxDtwtNdfDhqWaqt++nrq6O
      jUX3ErdlFZWT6Vm9Pvq5TkoRmaIv4GTHxhJS09KpOXSIoYbrd7NeOtxJpKSmUlKxhXdfr+Xz
      T0+typ+vxZa42DLBa8cOkpWeSm5xJa/uzOfUhea729icblJSUsjIKeT1A1VcudGGf3aYoDmH
      jcW5pKZnsmXHAaqLVhdqab50ho0H36QgO4PybYcxjN9iMqJBYJLWiTh/8Td/TfILEIMFQXg0
      jx4AIku0dPYSiibQdY25sVFcqcsndqvdwcLMNKquoSgKEf8ijvRsnBYDizPjjEx+y50CgM1J
      bGGKhLr83ucuFlhTSDcuMTTrR9MUxjrbSC4qe+g8hslTRIo6wdx9tWwCi1MY3Jk47ksU5ymo
      IDzex4N1xcBgMKDrOjZXCrG5AQYnFr71mI1MRinMvjMxL5Gd6WZyOgDuXN578wgui1gNLAgv
      o0efAzA78Jomabh2iYSm40xK4+1X9wLgyaumfKGBc2fOkl26iYqS7ZQs3eTs2fMkpWWyYdMW
      nAaQLS6K87NWNWvwFLCrZJbz586SkV9BddlzliFStrGzdgPn6k/Qk+xkfj7M0bffeeimEmCz
      6kSisJJTm0Q8hMlkXx0wJDtmPfzA0Ewi6uf8tXa2bX8Di9vNj390hMamG9y+lSCvtIrNFUWr
      6hHEdLj/HG+1WJiLRQGxNFEQXmaPHgAMJvJLK8kvfXCyVjKYqdq2h6r7XqvZdeDBNizp7K5J
      X/1eyUDZll2UPXKHng2xhQFONs7yFz/7KWaDTCI8x/sffcKf/c3PH9hWR8MfknHfNwJmtXqI
      xybQdO6mcdZVHzGDhzt5/oY7G6gPjyKbrFTse4OcVDcg4U7N4dCxbJR4lNtXTnMmqPDKzg13
      g4nTKBNSdeyG5VdCoQjOPJGeQBBeduLef53EQz5M7mTMRgOSJGGyupEii0TUb26pszDUhJJW
      RdJ9dVscyVmYwjPMBmN3txtrbSSjvPruibygspa6ujqOHNxHbpoHSZJQ1QSKoi3v02KjvKKU
      hZmZVcNBZcVJdHTNLLeqxhiajpKf6UIQhJebKMW0TlzZG8nvOsXZC1dIclrwzY5TuOsVPEaY
      AUb7OmiKOomHgyxE4K1j+1cN90gmJ4f3beHC+TNkZWWgRYPMBg0cOVL6nfuN+me4er0dV0oy
      JhlmpqfZUbtvVdtlO+sYOlnP1VAecd802TWHSDZDaHGK3qFJ4qFF5udnaG1qwpWUQWWRqNsr
      CC8DURBmHemaSjAQIK5qmC12nA4rEpCIhQkEI+hIGExmXE7HqoLt91PiEQLBCMhGXG4nRnn5
      Jk1NRIlrBmyWb5Z71EnEY4RCYTRdwuZwYrWYvjH5rKMm4vgDIWSTFbfThiRJJGIRAsHwqrsF
      g9lGkksMD60XURDm2SMKwtwj7gDWkSQbcHkeTGVhsthJtvywXzaj2YY32fbA6waTlQdfBZAw
      ma0kmb9rHaeEwWTBm2z5Rr9sJFse3qogCC8+MQcgCE+Yw/HoubGksiiVAAAgAElEQVQE4U9h
      bdlAx3u5cfth2UCn8Gkusn5AMrihoUHy8gvvDoUER5r4olvlz1/ZvpYuCcIzSySCE55Va8sG
      eqqBn/3Vz7GtZAMN3s0G2ku3UvSDAkBjw02ycgvuBgBH7iZ+mvU9bxIEQRDWzZqzgRruywaa
      9F3ZQJubGV8IoGor2UALU2lvusXw8AjnzpzBaLVTu30Hrvgk14dVDmwpQlfj9La3MjrrQzbb
      2bRlK6luG9MDzYwE7Zhi88wvBfDklLGtshBdidDW2MhsMIrJ4qRy8xbS3WJsWxAE4busPRvo
      p19QubGK8pLC78wG6skopHjTfdlA8/+Oqto9dA+Ncvjo0btZMRXfIgPjCQ5sKaK/4RzDUiFH
      jmwjujjGl1+f4d2f/4jA3BgDc6m8emArm23w0cefUV6ch6/nFqNKCm8c2Ug85CP2rZ0XBEEQ
      7lh7NtBXDmBNLK5kA517+Ka6CYdFeWg20G+n0tQzw+6tJRhlGWdKPvm2BUZ8yz/NzCvE67Ih
      G23Yrcv5cJxJycwNdtA9OIbR5sbzImQXFV4YfX19T7sLgvBQj5UNdMOm2pVsoGcful1wqoOP
      TrU8NBso35HuTUJflRn0+x5VSMqv5q9/8SPMsXlOfPYBV9pGH+XjCMITlUiIRNvCs2lt2UA7
      7mUDnR0buS8bqJP5+7KBRv1LONIeng3UKalM+aOoqoKmrXoUiZryTK4195HQNPyzgwyHk8n/
      jrxli9NjzAUUiiu3sHv7RmYnJx/5YwmPSmdpso+bt/sfIY13gomJ2XXrQSISYHYhsG7tCcLL
      Zk3ZQJPNkzRcv0RCXc4G+s7dbKBVVK7KBlpL6Z1soOlZlG/einOl5NSBo0e40XiVAbOT2tpa
      HLZkSnOXE+cU1x5G77jNxbNnkS0OXv3RMcwSuFPzUM33Jnfz8gsxGWRMNiuDnbdpD0YwWT0c
      2l/z+EfmkcVounSVuYiCJIGiaGzedYBsr43g3ChXGzuQJJmEZmL3wX14bctP9M6P93CzdQCj
      yYhucXNgVy0Wo0Zn0w3G5sPoWgJvbiU7qotWPd0bWRjnWnMXmhpnYGic/MIijAYTVdu2s9Be
      T/u8hWTH8sGWJAvbD+zHGhzlX379e4r3vccrtUV32/JPdfOvv/4jO3/y9+wqS6X3+ikaJmOk
      uWyoSgJHWgG7tlasyjCqqVHOX7jJ7jd/hiTBH//tf+DIKcOAjpKI484qZ9eWEmTgk1//E/t/
      8R9JtQT46qtL/OpX7/7ww6pGabxxk8VwnLmJYSR3JilOCym5ZeSZ57g0IPFu3aN+3yH++Os/
      4sjMxCCBkojjzC5n35aSR2xHEJ5zurBO4rrPF9IVVdM1TdPj/mH9//v157oW9+t/+O3v9YVQ
      TNc0TV8cva3/9vOLuqbremRxVH//wy/1YCyha5qmJxLLf453Xta/OH9bV1RNV5WYfv6LP+gd
      475v2e2i/tvffqAH4/deuvXVv+mNY7EHNo3O9Oq//vAT/V//7UM9oa28qGl6Y/0f9d+//6/6
      udZJXdd1vfX0p/r1gWld1zRdVeL6xc/f15uHF1a1NdF6Rv/kYqd+p5l//+d/1iPLDeqqEtNP
      fPQbfWh+uQ+xWFRXNV3X9Xn9n//547UdXl3XG059rDcOzt39/7mBBv3j041raMmv/9u//EGP
      JdSVz5jQj//mf+qjoTV37VuFw2H96tWr69/wUxAIBJ52F9aFoih6KPQEvuynIBaL6bHYg//W
      fyjxJPC6MeF22zHIEpIkEY+EMVvtKMFFYuYkXDYzkiSRlFuJNNVDUIfBthZyq2pwmI3LS2qN
      RiQJpiamyMrLxiBLyAYzlRuL6O7oX5ciOZLRQ2mKwsDc8rMbmhZjYCrKhvzkh2wsIRtM5Bek
      MT21dN8PdJpvD7F924aHFLyRVu6AVO7M87RcvUb0mxvqKm03LjKxFENXEwx0NHGmvp7zl26w
      FP7hY+bR4CIdLQ2cqT/FpYYOEqoOusbMWB/nz56h/uw5Rma/Y5hIkpAkHUVVQYdEYIYrDZ0E
      Fyf54sM/0D46T3B+gksXzlF/up5zl27gjyo/uH+C8CwTuYDWkaaE6WjpZGZuCr9i5q03DmGy
      JHAk5hmaXKAky0twcZZEJMBiVGN6dp5grJcLU11EYzFMrkz27txMfkEB9e23Kc/Zh1VWWVwM
      4Q+oaPCDi7YPdjajTy9/vZLJxaZN9yotlFeVcaWjjw2HqolM90B6BU7DGL6HNaRrzM74SSm6
      L320HmAyYuc1+73rByWySEtjIwY1ztzsHN6yXeR6l3MPjfT1UXboEPeyIemMd91iKOxgo8fM
      aNslOhZcvHb4CL6xDs6ev8pbrx3E9AMuT6KhECl5O6jYZOP0Rx8wVlJIhjrDuWs9vP7WK1gS
      S3z59Ulcb/8Er/Xe0VPDSzQ3NyFrCebnZkmqOkyOA+JzAfp6OhjrDJJdWUtOshPisKl2N267
      memOi5y61s17h6u+o1eC8HwQAWAdSbKZ3MJCPMkuuttu09Y3wcEthfzonTe43XKbM10KSWlZ
      GAwmTEbQJSN5xeVU5acho9F++SuudqRwqHorBw293Lx8Hox2vHYJk+GbGT6/W3p2AYWZK5lD
      ZSMycKc0gSezDPVmPSGlis6Wbqp3/hj6x+57d4K2m1cJDDhREzEMzgL2F9x3hxALoltdq1YQ
      yGYH+YWFmDUVr9NKW98AgYpikmzf+BXTdQLT/VzrDfDGG0eRJZXu/gmq97+FQYLk3GKkG12E
      YipJtu8Pd0kZuWQkLwcnu1EmrmlMDfSQWlaN02wAczIFyUZGZ/1487z3+muxU1BQiFHW8Lps
      tHb1ENhUigWYnZ7lL/7D35HtWZ5v0q0SfR23aZhZQo8tEIj90DAsCM82EQDWkSQbSUpJISkl
      hdzCEt7/p/9NcMuvcNmTqN2zXBlNSyzReiuVdJPMUoqbuYiKwSAjIZObm0Xv8DySnEdWYQVZ
      hRWg6ww0nCY9t/SRlmw5PF6Skx+eIla2OMhPMTI8MUF/wMrPU8wM9N+/hYnqHbvZWZT+0Pdj
      MKIrq4dBZIMZb3IyViAlNZXY7Bjto3Ps25C5arvowjgXrqrYkkvvXuHr8RCN1y8zsBIs3NmF
      WB7nHKsr9Lc3wPzK+nspmUrX6mMhGcx4vV7MRpmUlDQSs320DC6xMxmyCsvJ9NxZbKBx8qP3
      ydzxKoertyFHRnn/1BiC8CIQcwDrJBGcp3tglGhcQdc1lqYH0dyZWIGl+VkicRU1EaXlymWK
      a3ZiAIo21TDZfpM5fwQ1EaWzd5TS4nzURJS5+UU0Xcc/N0bzYICtFXmAzsLUOAvB6GP2Vqa4
      rIim+q/wFlc9+i+BKQm76iPyLZMSiUiAoWkfaZ4Hc8dbU3J58513KbL7OHWhCUU3ULahFIc3
      i/2HDnNw326KslO/tV7CD5FRVIHX7mT7ngMcPnSAitI8rKZviyg6iYifvnEfWSkPy2GlsRhR
      yc9IQYuH6evuI7ay7jW4OMPU/PL8QjS4yPjUwrrM0wjCn4q4A1gnBosDQ2ycG1d6Sahgcyfz
      1juvYALUmJ9bt9uIa5CeW82+0uXskNakbN44WktL03Viqk5W2U7K87ygRpke7qa1OYTB4uTA
      q2+QYjcCOjPDfeg5NpLvPO0smSkuLsR43/kyNbeEttsXWOhafvHOMlCb1U1JfhYS4MksJDN9
      hKqKHGD1Eltvdj5O53flUjKzIctI11iQmrzlk3xetoeL9fXIgGQwUbbzGCXpyz8r3LBhpa6x
      hQ0bCpBkI5W1BzC13qJvbIEN1bvRetq5dP4sksFCbmHJQwNASnYBkvNeTQOLK4WC+4qXZRQU
      4bIYsdsLOVir0nTtIooukZqVT3nW/YV0TBRkOLhw7gyStHz3UrrnTUpSzKgBN8UF92clNPL6
      q4douHIeo9VJQW4OFSszMb6ZEcaUDDJTXIR90/SNamRnPmQyXRCeUaIimLAm0fl+Pjg7wF+8
      dwyjtPar9RedqAj27BEVwe4RQ0DCmliSi6hOi9HUO/UITwILgvAsEUNAwppIkszmPXUsfH92
      v5deQUHB0+6CIDyUCADCmhnMNtJSRN2F7/MiDDUILyYxBCQIgvCSEgFAEAThJSUCgCA8YUtL
      S9+/kSA8BSIACMITNinqUwjPKBEABEEQXlJiFdA6Gu1rY8a3XJLeYLZRXFqG22b6nnet3bVT
      X1B68C1SLd+/rSAIwjeJO4B1dPPcZZKLiykuLibTa+XkJx8zG1K//41rtDg7TVx7Ys0LgvCC
      EwFgHUmSEbfXi9frJTOniA1ZFgYmFgAVvz+IrmsElhYIRuKg68QiQWZnZ1kKhO8mEdM1hcX5
      WWZm5whGYui6jq5rhPxLzMzMsOgLoD3k0VtdU/EtzDE7N09MWQ46mpogEAqj6xq+hXnCMVHI
      RBCEe8QQ0BOgaypLcxP0TkXZv90LLPHBH85zaJuXry62sPnIe2xNj3PhZjc5eTksTgySvvEA
      mwqTuXXuOEFLNikOAwtRnf07tjI/1MrVrjkKc9OIhkPklW8hJ/m+zJW6wq3zpwiZU3CbFEbn
      47z26iHU+TG+utZHqTvKxeYRDv3kF2wtTHtqx0UQhGeLCADrSFX8XK6vx64p+P1+0kprSHMs
      H+LQTB/d8wf45T/8Z5xWE+c//Q0V+35GWZqVRFk2H35+mYrCN+nun+adX76N2yRxJ0/f9OgQ
      KUU72LIxB0nXH0g5HJ0boNtn569+shMJHUP9h7SNBqi0w1R/K95dR/lP/+XN70iJLAjCy0gE
      gHVkMLrZV1dHsq6jayptF7/kareHfRUmLJ58XqvbjVFePrFPTUwRbLnMiLQ87BMOhwgrRn70
      5mEufP0ZssFKZuEGtlQWUrHjEFevXuWLgWbc3gy2ba/BdV/FFN/cDP6FCc7U1wMQngtiTloA
      OyTnVnB491ZMj5FfXxCEF5MIAE+AJElIsoEkt4PxYBjwYLRaMK6chCUgKyePop0HyXebAB1V
      UZGMGnpmCW+9XYauJjj90e8Zyckh3+nm4LE3QdcZ67jIpRs9vHGg8u7+PClppOWYOVq3c7ls
      pK6hqDqxhRHMFiuyOPkLgvAQIgCsI00N0dbQgBPQ1Bjj42H2vpILBFZvKMGWndu4eP40U5lp
      oCVI6A527N5Ay8VrKDY7JkklaE4hxSYz1tPC0FwUp83MwqyPvMqNq5qzphVTYD7NmQtX8DhM
      RAIBcip3kCHO+4IgfAdREGYdhYM+YonldZmSJGN3OjEbDYBGKBTD4bgvc6auE49HCIdjSAYj
      DqcToyyhKQmCoRCqDnaHE7PJCJpGJBwkllAxWWw4bFYkCaLhECabA4MEuq4SCgRJqDoWmw2b
      xYyuqUTjCjab9ZEKygvrRxSEefaIgjD3iDuAdWR3enj4r5S8+uQPIEmYLXbMltXvkI0m3J6k
      b7xdxu50P9C21X5vJZAkGXC6Pat3YTBit4mvWBCEhxPPAQjCE+ZwPKzYvCA8fSIACMITlp+f
      /7S7IAgPJQKAIAjCS0oEAEEQhJeUCACCIAgvKREABOEJ6+vre9pdEISHEgFAEJ6wRCLxtLsg
      CA8lAsCzTI0yPjn3J9tdxD/HfCD2J9vfo9A1lemJSURCa0FYPyIArKP6jz7mTvlvXY/yxQcf
      MBtWmOq6wucX2h69wdgsX59t+NYfa/EIn/zh18yH19bfb5rtuUHjwPz6NAZMdl/jN+9/wunT
      p/n6+HEuNXaiaGt78FxXE1w4dYbouvXu8Y0ODxJXREUe4fklHhNdR/6lRVQAXaP17Jc4K/aS
      ajeib9jFG6Xrvz/JZOWtd/8cwzP6LSZiIdKLt1K3owBdU+lvOMOJa/Dm3soXIjXF7dYG3Gm5
      mI3iOkp4Pj2jp47n29xQK92RTH62KQcJCE330+VzsL0iB12N09veyuisD9lkY+PmraQn2YkH
      52lsvE04rmJxJbF5yxbc97Wpa3EarlyhcNsBUu3LqaAlLUHjzZtU7dyHTVri7Onb5Oa4mJyZ
      RzHY2bNnFw7zvZOTb2aE210DxBIKRmsSNbVbcFtX1yxenBrlWqAXfzhOwcYaynNTQVcZ6++k
      Z3gaXTZRUrmJgowkJnqbmSGdrWU5xPxT3GyfYPfumgdST0uShGQwUrbjMA3/63cEd1fikhSG
      ezroH5tFMlqprqklzW1lsruJwaAE4SXCcY2iiq0U5ySvak/XdebGemnvHUPVIbukiorCDMY6
      brBkL2FTYQoAs/3NjOnZFNrmaRuNYpfCLPjDpOcWY9eCjE3NYnJnsmtbFUYZ5icGaO8ZRlGh
      eFMtRRkeQjMDNAz4SLYozCz4MDjT2bd9I/23G+gfGEEznsVms7O1dicprrXlYxGEp0Vcuqy3
      RJCzV9o4eGDH3YMbC8wxOusHNDpuXWAq4eHwkSPsqMrj2rnz+OMqXbcuEksq4mjdEbaUF2G4
      7xyqJSJ0NN0g6sglxX5fURddZXR4iLgGuh6hq3MAZ3o+Bw4fJc+0QNPA6vkDg9nB5u17OHr0
      KAWuCFeaeh/ovi6b2bprP4f2baf78mnGA3EmuptpGQuz79AR9u/cRPfNC0wsRknPK2S2p5Eb
      DY1cu9FEekHxd9cdkMxkJSlM+2Cso4HWiRj7Dx+htiKbC+cuEFU0/DPjzIQlavcc4MDOzbRd
      OcOkb/W8RHiuj/ONY9TuPcDhA7tY7LlG2+gSqenptFy7RFgFXYly41Y7KWkeIr4ZhqcClG3e
      weHdW2i5fhVLRiGHjhwiPHabscUo0aVh6q/2ULP7AAf31dJ28SRTwQTx4AI9QxOkF1Zw+MgR
      tLHbjIZ0yrfuoqQ4nwOHjlB3eL84+QvPJREA1pvRzsbCFNp6hnkwz2qM7oEFNlcWYZBlnCl5
      5FrDTAUUSrfsJDHWypdffs3t/imMxuUTvW9ygE8++oAFcz77tpZ+59CJPSmNnPRkDLKEx+NC
      Sdw3Zarr+GdGOH+mnvr6s3QOTLLkDzzQRnJ6BlaTAYvDS0WOlYGJAL09/VRUb8RilLE4vGzM
      d9I/6cdk81J3bA/XvvgQ+4Z9lOckPdDeKrpOIAwuB/R0thEJznHx3Flutg0wM9DPfFwBZFLT
      07AYDVhcqZRnupj0BVc1M9LWRO7mnbisJgxmB1s3l9DfM4IttZDt2QqXbo8xP9JGyF1Crtu8
      8rmycNvMmMxW3O4U0lI9yLIBs8mAqqhMdbeyEI1x88oFLly5RTg4T//YIgDe9BzSvS5k2YDb
      YWWl5LIgPPfEENB6k2Sq9hxl7IP3aU1PY0v+/SdFC16HxEIoSpLdia4lmFyKscMmY7NkcuzN
      t0HX6bt5kkvNNuoqjXiyijl2uJiTV9qYL8wg1WVZW78SQS439vLquz/HY5EITPZQ37H47dvr
      KpOzQXI2eojPOJlZCFKc8v+3d5/NcVzpYsf/3T05YgY5JyaAJBjBLCZIpOLuasPd3bu+e21v
      lcsv/CH2S7jKZfu6rl3e2qRr7SpQTGDOCYkgCIDIOU7O091+MSCCSIqUBBIUcX5VfDHT3dOn
      B8PzdJ8+/TwOJDTGx31kbbShayluX7zE9g9+zoNzX7D21/+Ax/Ksn5ROaOIhPnsVeSYYzykg
      p3o3m0u9SMCRw4dBlll8TaJrKUZmQ1TXLs2kmldUSNfIGHrlWiRgemQMe/YGANbvPsLV//sl
      apaBzfs+QJZe7G6DNy+PYjWbo/szn6nrR9B1CPQPPnMbWddRRTZ14QdMBICXQTbT8NGH/PnP
      n5L98a9Y6L5k6vfs4NyNq4Qri4nOjmKr3EquVaG37S5TCQWX1cT4TILCTVlA5szXVbCW4wcU
      vjp5kkPHj5Pvsnz7NhnMFLpNtLQ047XA+GAfCVPx0nUkI76xXtoNPoKzo8RzNlPlNaBu38XZ
      c9dpilWix31MKsW8U2hn6MF1JgxlfLBjG2vcKmfOXuUn7x3EtGj8amqkjwcPIiRjYUangrx/
      /DASsH7rVk5fvIbqq8RIiml/gl37dgIqQ73dtKs+ApOjkLeOEq8N0gvzf7xr63F2n+Tm3ShW
      KU7/GDQcL8ksNHnYWqzTOGDicK7zhb8eV/kWbO0nuXEngsuq4J/1UbmpHus3bFNdnMPN2/co
      y8+itLwal834DWsLwutHFIRZRkGfD7vHgwKg60RCfjA5sEgpImkFlz1z9p6MhZnxhzCYrXiz
      3CiyhKamCfhniSdULE43WU4bkpbCF0rgcWeKcMRCflSDHYd1rqPRNYLBEHaXG5kUgUCcrKxM
      p5eOR0hgwr7oJq+aSjA760OTTXjcdhIpDeeiOgWpeJRoPE40lsBgtpHtcc2fQaupONMzPlBM
      eL0ejLJEOBTAaHViNiromkogEMDh9syXvkzFI8zMBtAAg9GCx5uFUVkYdUwnokz7AiApuD1e
      LCYDXZe/pN9aSV2xB6PFjjfLiSxJ6LpGKBDCkeVGBrR0ktnZWVK6jDc7B/P8TBydoebztMZL
      eX9P5mw+lYgQV404bSbQVILhGA6XAxmdSCiI0erEZJAXPlMFh9uDw2ZGS8aIpCRc9kzQjYWD
      yFYnZkVC11R8MzMkNIns7OynzgYSBWFeP6IgzAIRAITXSuflE0zlbeXA+qJvv7GmEgr7OffV
      WfZ/9PP52VIrSQSA148IAAvEEJDwWilcvxWvxfPdNk7H6OkZYM/xj16Lzv8xq/WbBpIEYeWI
      KwBBeIlisRjJZBK32/38lV9z4grg9fN9rwDENFBBEIRVSgQAQRCEVUoEAEEQhFVKBABBeMl6
      e3tXugmC8FQiAAjCS5ZIvJ41FgRBBABBEIRVSjwHsIwaP/kXZpwb+dnxPZmngVNRGi9cZ8+R
      BgbvnCKeX8+2ykxq41R0lrMX73HonQZsCkwMdtLaOYisKCgmG9vqd8HkfT6/3kthjgtd10ir
      Mtv2HCDfbUZLhLh+4zbxtI6mqlg8xeyr38j87Pd0gpOf/xu6Ix+jpKFLZup27CQ/a3mnvsVD
      MwTSFvI99hdaX0sl+Oyvf8CWX55pq2xk847d5LnMgM7DGye53JvmN7/4AJsxc36SmOzmz40t
      FOd50DUVjE72HtiD3fAmVBUQhJUjAsAyCvrSGEwDdI9vZEOBEzSVmZkZVB0qN9Typ8/Os6Hs
      p1hk6L53DVP+JqwGidBYJxebR3j/3SPYTQYS8SiyQSIUC+EorqHhwAZ0XSM228snp6/w2180
      cLfxK8y1Dewr96KpaXwzfpY80KFrROJw9IMGsowaoZkRTp86yZGPPiTbtnypi4Nj3bSH88n3
      VL7Q+rquEU2bea+hga+ntdPSSR72zZJvkumfiVBbkElroSYjGDwVNDTsRNdUprtv8sW5Zn55
      bNuyHYcgrEZiCGg5yQZ27t1Jy/UbJL9W+tDiLmZzkcTdjhG0+DS3e2Ls21KBBNy7fpPtbx3E
      YTYiSRIWq/2JvDKSJKMYDaRTmQc/Av4wDqcFSZJQDEZy8nOfGc0lScaVU8ruGg+32wbQgWTE
      z72bV2k8d477jzKFVSDJ5QuX6W5v4lxjIzeaHpDILEBNRmm7e53GxkZu3msnltIITw1w7V47
      Xa23aWxspOXRyPf6+uIzPcQcVeypq6Cjvecp6bRBkhVy1lQRHhn9XvsSBEEEgGVnz6mg3Bam
      Y3B26QJJZvPufQy03uDy2UY2HX4H69x4zZgvRaH36ZkkZ8YGaG+/z91b1zh94T4N7xwAoP7Q
      XppOfcH1pnb8kTgv8jh3Tn4xvskxNDXJxTOnsBTVcOTgAQLdt7g/OAOkaW9tw5ZXxeEjh/Ek
      Bzh7swtQuXb6S1RvFUeOHKbEGuL0lRYcueXs276RdXX1NDQ0sGVN8fOa8I262tpZu7mW3Ir1
      +Po7ST/lqNRknLard6jYuul77UsQBBEAlp+ksH1PPU3Xr/P1cuEmZz7byy20+Z1sXVQnQIJn
      duAWmxOvN5u8/ALyskwMDE8C4C6u4Wc//YBCh8Tt81/x1ZXW5wYBXdeRJIlkbJqppJsNJV5k
      g4mNW9bS39UPgNHuoTg3Uyxlzfb9+AYeoMdn6A1b2VyRhywrFG/YSXy4g2+a2xILjHP10iUu
      XbrERDC1ZFnUN8KFxkYaGxs5f+kqwQSgJ3gwGKem1I1k8rDGFaZ7Kjm/zXhfOyf+/hf+6//8
      A1reZg5vLX/O0QqC8DziHsBLYHIXs6voFlcfTn1tiURhcTGFcW1JycfCbAMD4zE2FjyZNMzu
      9lJYWAhASWkpf/7XPxDeVo0DMFkcVKytpXzNBs788X/QF6yjyvXER2ToOqPDA+QWrUPSVQJj
      fZw71zhX/ESjpGT9U7bRkGUFdB2kxecKEhL6QsB5SuSxOHOp35O54W0wLP2Z2TzFHP7aPYDI
      SCdBycSNC40AaBYbzXfbqX1vOwAFlRt571gdN05/zthMkLpnHKYgCC9OXAG8FBI1+95m4FYj
      oeTz6wdu3/8W7VfPMR2KoesagdkpYsml1w+6rhOcGiRh8mAGBnseMh2IoOs6yWiAsGbF8Yx7
      u7qmMTncTdtwmp21JZgsuZSX5bB2yy6OHj3K3vptFGZnIoeupkimNbR0gvZbVylavxXJmk2p
      OUTXqA9N0xjvaULOX4sFMFts+H3TqJpOelGtRElWMJlMmEwm5G+qE5zZK+2tnRx870MaGhpo
      aGjgnY9+ij7SSnjR1yfJJvYc+wjnbDunrreTFmkMBeF7UX7/+9//fqUb8aYI+wMUVFZiItNZ
      ZZniTMXN1KyvYm5GI2oqTkK3UJK/kPLYZMuiyGum434bj3r68cdU8vLzkdUYj7ofMTYyRG9f
      P1P+JPsO7cdpNqImwnR2dNDd3cPopI+a+v0UZy2+gtCZHhtgYHCEgYEBImkTu/bswm01IikK
      RQXZdLe30d3Ty1QgTnZeHg6rxK3L10il4zzqHcCUs4ZdmyuRJZnS8jIGH7bS2f2IQMrGW3u3
      YTLImB0eVP8Q9zu6ics28jzPqcKl6wRDEUrLyxamrOopBoxZykoAACAASURBVMfD1KyrxDh/
      aWTAoAbAUYRTSRHRLJQVeJAkhdI1a5nobEZz5eOxf8cSma9IOp1mYmKCkpKSlW7K95ZMJr9z
      1snXia7rqKqK0fjDr+CmqpkzJEX5bunPRTpoYZEo//Ivf+d3v/v1SjfkjSEKwrx+RDroBWII
      SFhEwu1+1k0EQRDeNOIKQBBeolgshs/no6joO5S4fM2IK4DXj7gCEITXnN3+YmkyBOFVEwFA
      EARhlRIBQBAEYZUSAUAQXrJgMLjSTRCEpxIBQBBespGR75ckTxBeFhEABEEQVimRC2gZjQ10
      k7bkUPr4KV8tzdjEFLn5hfgnBjF5inFZMk/s6VqasbEJcgqKMCkSmppibGgAfyRJVk4hhXke
      0lEfj/pH0PRMSmenN5/SwmwePysb9k0wNDaNZLBQUlaGw7LoyUZNZWigh0AkiSQrZOcXk5/t
      4lWWUJkZ7WdsNgyAbDBRWFxGltOyqA06A10d2AsqyXEtPMU8PT6KPTsfq/FFn27UmR0fYnQ6
      CEg4PDmUFuahyJnvdXRkgoLSEh7Xj0lGA0yHNQpzXIwM9OCPJAEJe1YOZUWZ7QRhNRBXAMvo
      6om/89nJUwQe5/FJxbh88TJRFeLTvZy60jafN80/0sGF211IEqipKOdOfM5oSMXrzWJ2rBd/
      JEVouJ2mgRA5OTl4PS4mu27QeCdTYHzq0R1O3ejG5fFikZPcuHp7aXZONcn1y1cxuXPwuO30
      NF/l7NXWZc+fM9Pfwo324acua75+mYTRTk5ODk6LxMWTnzHqX2ilFh7k089O0nileUk+uaar
      F5gMf5s6ujr371wlrNvIyfYQHO3ks6/OE0lqSED7zXN0jc2Nw+sqTZfPMOSLg5bi+uUrGN05
      5GR7CI0+5MT5m6S+nsZVEN5QIgAsI8XkYe+WAm7e636imElRzR4MY/cYnI2h6yrXrtxl38G9
      GGWJntvnMVXtZeem9RQWFrFpy3Y89szFmd3loaCggMKiErbv38vA/WYA7l2/T/3h3RQXFlKx
      poaGo3v5+qMgitFMbn4BRcVl7Dt6DGeoi7b+GSCTDyUeDRMIBkmkHmdc04lGYyQTMQKBALFE
      ctGn6SRiUQKBANF4MpNPJZUg4Jtl1ucnEAgQiSeXNkA2kJ2bR0FBAaUVa9lW5eZB7+T84s47
      t6n/4JfI/j788e/Z60oK3pw8CgqL2LzzLXaWGjh/qwNkA3v27+Tu1WskVZ3IzCA9QRtb1xQg
      zX1HefkFme3q96DP9DETEkXchdVBBIBlVlq7g8hAC9PRpTnwZYOF/Xs3c+tmE1M9t4nmbKXc
      awGgo3uc2nWFSHMjD5IkIUmLhiF0nVQiSue9exRUZ9I2F5W4ab7dTmwu26gkSd84vCNJChtq
      19Hb3Yuua/Tfv8G5K7d5+OA+p746gy+WBmL87//237jb1EpXZwenP/8b3ROZIZyJRy2cuniN
      zs6HXD5zkocjfpJhH33D40yODtLV1cXoVOCp+9Z1jYh/ivu9s1SVZWfe1BK09MfZsr6Q8mwT
      vWOzT932u5AkiZJ1NfiGekhr4C5cR7nFT/vgDPeu36Bu337MypPflq6m0XQZo+G7JdYShB8a
      cQ9gmckmJ3vqSrh2t4Mf715aJze3sg5H81/4y5k0//gf/3m+w46kwf6MxISDD+/RGB8mHgsT
      TRk5+u46ADa99R5Kyz3OnjqB1ZnNlu3byXVZvrFtVquNeGyWVCLErfsjfPiLn2I3SAy3X+FW
      Sx/H9xRjdOWze/duZAni6/L465kbrP3pXs7f6OSjX/4Cu1FGTczyx3+7xLp//DGb11cihfOp
      3/6UmsDpCLevXuKRxUAo6MdWWEO5NzPWH53qR8suxy5JrFlfzdmOR2yryGG5ht8liwUpkUDT
      dZAM7D6wlz/89a9Y8jayr8g9v14yGqDl7m3sioZ/dprCjbvw2MR/C2F1EL/0l6Bg/Q60u39i
      sm5p1SpJMVO/ZR3+HgmveeHiy2HQCSZ0rOYne7+yDdszReE1lYh/lL/97QS//McfYzRYqN2x
      lw1b0/inRvji3z7hx//073B/w180Eg5ic7hIJ2eYHJvmxsXzACQi0/hlBShGkqT5TtjkKMJI
      E3rUT9ychXWuTrFi9mAn+o0VwQAw2Knff5Byjw1NTdFz9xwXmrN4e3s5vR2thPwK586dQ0+F
      6emcJtZQj930DWffWoLWu3eYCsZxFlSya2PVs1eNRNCt1vlaBGZPGdUe8OzZt6QYj8Fsp2pt
      NR2n/x+sO0z9xoplC0KC8LoTAeAlkGQzx45u59Mz1/n6ib3BaMJoXDrevbG2lOaWHt6pX4Ms
      Zcbnn/xMBbs7HznqIwmQTGIwGpEVI96CcspdZ5kMgdvzxKYAaGqC1rZHbNh5HKNRo6iilLeO
      HMWU2SGqpsHXuvSYrx/M+Ug2N6ZEgISqYTXIqAk/Ic2MGYhIEqqqosMzh6AyhetN5OV4ae7z
      o6dz6Zkx8Ktf/Aj33KyobOUTHowGqa94xgEAyGbq6vc/e/kcXdfobm+lqLoGw3xvLmEymTAo
      S3/ysmLA6fJy7Fe/5cxf/8hVs8L+TRXIkogCwptPBICXxFa4kWKuc3Pq+Vn6KrcdYvz8OS7f
      mCXbaSUUCrG+bhcA06P93L+fBl3HNzlI/uY92IAHLVeZTtrwumykokFCzg1UZC393FQ8ROeD
      +9gVjdnJMWyVO1hX6EZBpabExoVL1ynMcRIPB7DkVrO52k0qNE1r231Ix+jrH+Vgw7ugmDm0
      o4LGC1coz3MzOTTA1gNvoQBZ+WUE227Raonh8hZSWZyz0AA1QU/XQ8IOM5qapP/REPUH3yU0
      NUTamofTvHC2v37TBj65/YD6iv2gJejt6iBkN4NsoqK6Cof5OT9VNUXfo4ckp81EgjOE9Gze
      2lP5wtNeJdnE0Z98zKlPP+WqDgc2Vyy9DyMIbyCRDnoZhfx+bFlZc5WudJKxMIFoZmrn42EH
      NRUnmgSnfel4va6pBPw+4ikVq82Jy2FDS0WZng3OTZGUMFvtZLkcSFJm/VDQTyyeQjFZ8GS5
      l85f1zX8vhniSRUkCZvDjdO+MAdf1zVCAR/ReAqz1YHbZUeWYvyP//5Xfvrxe6Q1CZfHg9X0
      uOPViQb9hGJJLDYnLod1voOMR4IEQjGsTjeuRccVCc4SimZmBkmygsPlxmY2oaaixNMKDtui
      al5aGn8oRpbbuWQ7JAVPthfzN96Y1YmG/AQjmSsY09z39PWz+FjYj2zJYj6W6BqhUBib0zX/
      90klooRiKh63Y1kCgCgI8/oR6aAXiAAgLCIqgi03EQBePyIALBDTQIVFTBw5sm+lG/HGsVqt
      z19JEFaACADCIgaqqsqfv5rwrVRUVKx0EwThqUQAEARBWKVEABAEQVilRAAQBEFYpUQAEISX
      rLe3d6WbIAhPJQKAILxkiYTILiq8nkQAeONpTExMveJ96gR900ST6vNXBYK+aWLJ9EtukyAI
      XydSQSyjmeEumjoGQJJQVZ2qTTtYW+wl6hvj5t37aEioqkZO+Xq2bygnMPqQE5fuk5frQddU
      JLOHvXu3Y5urhOUbeUTTwwHUZIyhcR+lZUUoRgvbdu7+FhkrE3zxxWl+97vfPHWprqlcOXOC
      moMfkmOVQEty7tM/olUcoGFHNRIw2XuPnmguezaVvmBqBZ22G+fx1r1LTbHzuWu3XTuPd/sx
      agrdz11XEITlIwLAckn7OdHYzMe//il2o0IqGSMUTYGe5MxX56l//2MK3RbUdBJfMJLZJBHF
      mldNw9Ft6JpKX/N5zt3u5sN9GwDwFK/haPEaUoFRPjnTwqGGhieKvnxfkiRjJs7QhJ+cCg+p
      eBhfSkEfHSC9rQqjDEM9A9hrql5pOUlBEF4+EQCWSzpGVJUxGxQkScJktpFtBvQIoZiKzWRE
      kiQMRjO52eYnNpdkhcrKas6f6wM2PHd3qViQtpZWfJEk2cXVbF5XhiJLxEPTtLV1EIylyS2u
      YuOGPHQtxXB/N/0Dw8Q1Ezv37CLLOpenVJKoqCzhxuAo2yo8RKYGsJdvR5/sIppUcZtSDPvT
      vOV1oOsas2MDPOjqI6XLVKyvo7LQiySFuHKll/qtJVy9eAlvzYElbQ1NDfBwLMWOzVWM9z7g
      Yf8EKEbK1tRSXZwDaASmx7gz0Io/kqKyZitVRV7Q0gw+ekDv8BSS0cbGLVvJdVkJjXTQOq5h
      Ss4SiKaoWL+F6pJsEaAE4VsS9wCWiyWfXVUW/v7laR72DpNU51I+SzYO1Ffy1YkvaH7QQzTx
      7LFu3+wUWR7v8/elp7jw1QmsJTUcOXSAxOA9WvpnUBNhGs+cx1u5maNH3qIk24EO6IkIUd3G
      rv2HqMtPc+7O0lkp7vxy4tNDpHQYHhimtKKCUo+JodkYyXCAlNGF02ogNjtI441O6nYf4K29
      2+m5c57+mSgQ50FrK2dOnERzFVPkXcixoiVDNJ6/SWllKXJ0nJPXe9l36AgH9+3EYZr7+Wkp
      fME4G7bu5uCOddy8cp2kBqMdt2gbS7Pv4BF21pZx5ewZgkmNmG+ErmE/tdv3cmjfDtoufsFw
      YGkFNkEQnk8EgGUjs/XQ+xw/sJ20f5i///UvPBoPAhIVdfv5ybuHseshzn75KTceDM5vNdbb
      zoULFzh/7ixXu4Ic3lX73D2poQnGNQ9ri73IBhNb6tbT1d1HeKaPhK2CqsIsJNmANzcbAyBb
      s1hXWYzJIONwOEjEYks+z+TIwqQGCcVUBiZilOfbKC8vYGBglNDMCLacUowSDHe1U1SzDbfV
      hNHiYkttMV1dmYLwoelJag9+SMOBXeRlzeW+0ZOcP/EVGw+9T4HTDCYbpuQMbQ+6ietGCvK8
      mTKYspmKqkocFhMmsxX0JKoGHR3d1G3bitkg4/AWUeGBwclMcfecgmLsZgNGq5udtUV0D77q
      G92C8MMnhoCWkSTJOD25bPLkUFNbyb/8sZE1/+FjQMLqyGLtxq2s2bCef/1ff2Fb7T8DkF9R
      w4EDWwCQFeXFUhBrOsGpQc43nstUr9J1qkuq0Ql9pxTGkmKlJMvM6FQfMWMudhkoriRy5xYj
      qRTFFZkhHV3Xl36+lCkmA5BVtIbKAvfCMEw6TtONy8SjMjvcc0Nexix+/dvfMDbYx+0LXzFD
      Lj879uwsmZn9Ld6dxNNy16qahkERdXwF4dsSVwDLJTrL/e4BYsk0uq4zOzaCIycP0lG6Oh8R
      jCbQdZ3Q7ASKw8Pj7kqWZQwGAwaDAfk5hd0fU1x5VOS6WbdlJ0ePHmXvrm0UZrtwZldgig0x
      NB3K1Bfw+XmxiZgSpWV5tF28hKt8HRIgGTw4tWkejIQozsvMzilZW8PowxbC8RTpRJjW+4NU
      ry1+/BFL226wsG1vA//w/g7Ofn6CiWCcVDTAyGSAgoq1HDh0mNjMMN+Ui3zDhmraWu6TVDWi
      /gl6plKU5bkASCYz9X6jgSnudfmorcx9oSMVBGGBuAJYLmY75tQQN6/2oOpgd2Xzo2N7QNFx
      GNO03L5OIq1isbt57/13MAAmu4eS/Od3+ZLRSnlp4UK0ls00HD9Kc3MTj5IqZpuLNetrUMwO
      jhzeR0vbXbpTOt78cuo8JVRXV8x/lmLzUl74ZNzPKV6DydTPxjX58+9t3FDB3QkjXkumjbac
      Sg5uV7lz/RKqJlG67RDVuQ5Ao7q6ZHGLyS0qw24z4PBUcuywTEt7B/Xb1hOe6uJSRyu6pLDn
      4BEkILe4DMfjm9KKmYqyUhQZimv3kHjYxpUL50Exs+/t47jNMpPA9FA3F88Noytmdr3zPjlW
      cS4jCN+WKAgj/OBM3j/LzcgaPtpdsdJNeS5REOb1IwrCLBBXAMIPjsFsx6EZV7oZgvCDJwKA
      8IPjXbuXIyvdiG+hrKxspZsgCE8lBk4F4SWz2+0r3QRBeCoRAARBEFYpEQAEQRBWKREABOEl
      CwaDK90EQXgqEQAE4SUbGRlZ6SYIwlOJACAIgrBKiWmgyyQRnsWXNFHgzTwooydCPOybonp9
      FSYJ0DUmx0Zx5RVjMbx4vh5ffyudsWz21BR/bYnKwKNBitZU8jrMiA/OjDE0No1stFFaUY7D
      vLI/rWQ0QE/vIOlFjznml60hz21duUYJwmtGXAEsl8gYpy43z7+c6r7F30+cZNiXSVOspRNc
      PH+J9LfM1ZYM+5gKxJ6yRGWop5/vmgR5ZqiFGy1D33HrpSY6b3DmTj/enFxshhQ3r95mpavg
      hiYe0dw7Q15e3vw/u/l1CJWC8PoQVwDLxJxXiT7VTEo/gFGCju5p3j26lYGhMaq8ZSTDI6Tt
      JdgVCV1LEw5HSKs6RosVu8WUyXT5+H0NLFYbFtPjDksnHg0TT6ax2BxYTAbAxPYDu7ACaGki
      iTQmRScSTaAYzThslkzmTl0nHosQT6QwmEwYjWYMUhrf7Cwzs+DzOTBabDis5sz+Q2FUZOwO
      B0ZFRtdUYvEkJqNMJBJDMphw2K3Ii9J03rnWzt5/9+8pNCpAAWVVC6fdupomFA6jIWE0mrBa
      LaClSaZ1LObM4+vJeAwMJkyKTDqVIBKLo+tgtTsxGxVAIxJJYLOZiUXCYLRiMxlIJeNEYgkM
      Jgt2m+WJRHpWh5v8/HwEQXg6EQCWi2SjzJ1kOKhS6Uwwnrayq7KMszf60baUMdXfR25lDRIw
      2vuAnokoVrPC+EAv1Xvfo6bQzr1Lp5mVssiyGUiqMtt37gQ0hrrbaJZ8KLJKX9807//0IxwG
      +Nuf/sTHv/sd1sAg//1PF9lZtwGr2cDgo252HP855VkGeu/fon04SGFuNtHZQQLW9by9OZvB
      kQmmgzF6e9Nk5ZdhL3Bw9fw5VHsOFj3BdFjn8NEDmBOz/On//huVm+pwWkxMDPZRuettaks8
      84deUpbF3RvteHZvxGpaSGmdjge52HgRU3Y+VkWntekhH/3TrzEH+7nyIMT7R3YA8ODSKdQN
      B9henEV7001ikg2DnqRvaJZjP/oAt8nHn/54kaO7cvm88Rabjvyc+mKdi9fbyS3Mwz8xQumW
      Q9SWep7yhxEE4VlEAFhG1VVF9AxMUFQYwZxTisXuQYk1EUnp9A9MUn30KACF1ZspWpPpJONF
      Zv7+oI+a/GoeDfl4+2fHyLYZeJyjL4hEUVUtu3dvQNI1fAP/G18UHK6l+7ZnF3Ng314kCXKZ
      Yng6QpEhye3OKT76yQfYDDJTj1SuDaexZuWzaUMl0lQuO3ZUATDReY2AtZL399YgSdBz6zR3
      OyfYV2HE4spjz769WGWJcXeSjrHAkgBQd+gDDC33OHvySyzObLbt3EmO08yje9cwV25jf00J
      kgRj3Z1Pzec/T1ao23VwPoAYYp8yMBGmrhSi073cH8vjn//Tf8FlM3H58z+wds/PWJ9nJRUu
      55Mvr7D2lx8tuR8y+qiNRn127pXC5l17yXM+WY5TEFYrEQCWUX5lFdcu9zKSSlJSVoek2Mh2
      SkwHAoxEDOxxKoDOcOcdmrqnsFnNSNFJUqb1oNg5/NY2bpw9gWQyU1q9kY1rigEJRTEsGt7Q
      n9qJKophvniKJMlIQDQ4g+LIxWp4/q2emYlpsovWzXe+BUWFtPX6oCIPWTEgydKSz15MMljY
      uGMvNVtVAtPDfPbJJ3z8T79hdMJP5QYPL1yjRktx+3Ij03EFk1FhcmiS2opMaU2jo5Djb+/H
      pEjous7o8DjB1msMS2SGroJ+omlwL/pFF63ZTMPRbS+4c0FYfUQAWEYmZwnm+D0ejlvZuc4F
      kkRpoZfujiZwl2OUAKKcvdrDb3/3KxQgNdHOJ81J0CGnbAMfVNSipROc/fxvOLwf8n0S1ppt
      TrTEKGlNxyhL6IvKr0iShKqp6GQKuXjzsumfnEavzkaSYHx0lCzPphfaTzKZxGg0IisGPPnl
      lDrOMhWGLKeVQCiO7rWzeO8SoGmZ15Kuo2mZJYmpTrrD2fzmw10AtF6OMFdZGaPVhkmR5rcv
      KCqhevdBSp1GQEdTNSRRFEwQvhURAJaRbDCRbQzRNmXnqC0zGJFTWMxfP/tXtnz0n+fWslCV
      r3D1ZhMuk0povA9VqoZ0jDu37yCbXRilNAmjG7fV9J1n+QBY3IWs9bbTeOE6xTl2xnq7Sbnr
      AHBllxFuvklTc5Ss3CIqq7dhHzjHtTtRLHqc0WkTR94uhOTsc/YCXU1XmEnbyHLYSEUDxD0b
      KXNDevt2vjx7kdRsNUbSjEyHM+1yeEn7W7nXbEJKxekcnGRdLRhcBVjCF7jbbEFPhOkZmGJ9
      6VN2KEFd/VauXDjHVGkBqEliSRP1e7ewOCv67NgAra0LUaGgfK2YBioIi4iCMMtKJx4JEVcN
      uF22zFCJpuLz+bC5vZjnhmK0dJJZnx9JMeN2WoilwGkzo6YSBAJB0rqE0+XGajaSTsRI6Ap2
      iwl0nWgkhNHqwqhAKBjA7nIjqykCsRRuR+Z6IRWPkJYtWE1KpjSk30dKk0lOd9I87eaDA7WA
      TiIaJhiOYXG4cdrM6GoKn8+PioIry43ZkNk+HIlhdzqQgXQqTlJVsFkWRtt1TSUUDBBPpjEY
      LbjdTpS5IaNkLEwgFMVodXDp80/Y85NfkWczEn+8b5sTk6SCyYrFIJOIZd43WR1YjTq6YsFs
      hGAghsu9qBiJrpOIRQiGo0gGI263G6OyMNSlpuL4fMH5KwgAu9uL/RU/nyAKwrx+REGYBeIK
      YFlJWOwuLIvfkhU82TlL1pINJnJy8+ZfOx9XQzSa8eYsrW1rMFsX/kiShG3R3V+ny/14Q9yO
      hQ7ZaLFnboamorR1PCKnoAgTcdq7xli/e/N8W802J7k250LrFeMT+5dkBadz4T+9wWjB8LXp
      9JKs4Mry8rX70gCYrA5yrY65Pc5vgcXmxLJo3499vU2PLen8ASQJs81Bru3pHZJitJCTZ3nq
      MkEQMkQAeJMZrVSV5tM7OERaV9jy1jHyPCt3BrfjwCFcK/yE8Ep4E840hTeTGAIShJcoFouR
      TCZxu90r3ZTvTQwBvX5e2hCQruu0tbV9t1YJggAw/zyH9MJzYV9fuq6/EccBb9axfB/iCkAQ
      XiJd19F1HVn+4afdSiaT3/lM83WiaRqqqmI0/vBzQ6mqCoCifLc50D/8X6UgvMYeB4A3wePO
      5k3wphyLpmlomvb8FZ9BBABBEIRVSgQAQRCEVWr1zckTBOE7eRPuYzz2phzL972RLW4CC4Ig
      rFJvRhgUBEEQvjURAARBEFYpEQAEQRBWKREABEEQVinl97///e9XuhGCsBpoaoq+h63ca+3A
      F1XJzfagyBLhiUd0TWvkZWVy04QnemgdjlCU84rzB+k60fAst67fwVNcjll53O4kvR0tNLd1
      4E/o5HizUGSJ0HgPj2bm2q3r+Md7eDgWIz/b9UTVuFd7GBq+iUGamprp6ukjgRlvlgNZkkjF
      Q7TcvkXHo340kxOP04okSXQ33UXy5mI1KKBrdLXcJGHNw2lZ2SpDseAMD+630t7RycjELDZX
      FjazEQmd4MwIt27dpX9kEkdWDlazAT2doKWpDW9RIQqgpSLcvddGVm4BRuXJv4q4AhCEV6S3
      6QIPphUOHj6EO9HPmZsP0YH4zDA9o34A1ESAE6euUVyc/2obp6VpuXaa//OHT7lx+w7Rxw/K
      6jrddy7Q7Tdx8PAhrKEezt/uRAei08P0jmXarSVDnD5znbyCnBXt/AECo10090yzccc+jhzc
      y8yDKzT3zYKeovGzv2Eu2cjB/Tt5dOMk3VMxAAY7OwikMgc9O9TO7Udhcl0rnypienKC7NIN
      HDl6lG0bCjj56RdEVJV4YJQTZ29Rs3MfOzcUcv70KYJxFV1N0fWgkxSZp9A7bl3EpzmwmJ7e
      1YsAIAivhErT/WEO7N2MUVGo2nKAcM89woszEugqdy+do2L32xQ6X3HOHT2FwVXCP/7zbylZ
      VFhZUxO090yxe2ctBkVhbd0uAgP3CacWzx7XuHX+FFX7jlPkMr/adj+FM38NR/bvwG0zIRss
      VBR5GZ2cJTnTy4SpnI2lXgwmO4cP1HHz1tKEl+m4n4s3HtLwzgGMr0GyuNI1tZTkZSFLEo6s
      AhzEiWk6Q533Kdi4kxyHGXt2KetzoHNkafW+yGQXrRMmDu5c98yOXgQAQXglggRVF+5MYWhk
      xYjbmiYQzuRxSaeSDHXcZkwuYce6glffPMXKxs0bcVqWnvWqqShR3YrLnOkqFLMFq5wmGksD
      mXYP3r/GmHkNO6rznvjYlaAYDEjMDQWNdPHVnUF21pbjm5wgO3/huzXnFZGcHJt7pZOMx7h9
      sZHS7YfId70+xYRSyTj+6TEunvkK14YdZBtlJmZCFGRnza0hkZ3vYWbCB2Qq9MXDM3x55i7H
      3juC+SlDP4+JJ4EF4ZXQAGXJ8Igiy6hzibzGBzppmoziWb8fecUHURZT0SRl4UxRkpGlTBIy
      GY2xvofcGwmTV3eU1+CEeZ6aitF68yKtgzE+/vU/keMwMqppyPKiMX3JAHp67kWShy1NhMaj
      HKx3vlbHMtjVxtCkn0hKJtduQUdH1XWURU8zK4oBVc0cSzw6Q/Od24QVN07zN5/jiysAQXgl
      XFjkEIm5kRNd14jENey2zDlYyZrNfPCjHxF8eIPeqdAKtnMpWbFjIU5sLuGknk6SUCXMZiMg
      U7qujo8+/piplgv0z0ZXtK2P6VqKy19+woiWz6/+4cfkzJVLdbs9hIKB+fW08CyS3TP3ykzd
      7n386Pherp87Ryjx+mQLrd5Uz+Gj7/D+u28z236RvlkVr8OKPxKbXyfsD+KcKzpkdeSx5/Bx
      jq63cPJSK+o35HoQAUAQXgkj1XkKDwYzN03js4OEzCV4Fw2ZK2Ynb7+zn4tffkEo9XpkaJGN
      Zorc8Gg4M7wQmhwiZSvAbVl09ml28u57hzj/2WeEEt89NfFyCQy00KeV8u6BrZgNC+20FVaS
      HH4w/912N7dQVbdpybau/Cp2rbFx8lLTyqfx1lRidVPglAAAAeFJREFU8SSPWyEpRixGBQ0o
      qSqn7+FD0pqOnk7QNeinuix70cYSFVsP4g62c6d7/Jm7EENAgvCK7Hz7Iy6fO8/pLivxRJr3
      3zuGTKaTtc7VSrZ4SvjorWpOnL7Bz9/fyzcM3y6rRGSWO7eaiKs6M5Ekty42YnN6OLR7K7uP
      HOfyxcuc7rSQSOm83XAURQJlUbvN7hKO76ng7IU7fHRsF4YVHEIZGx5BSklcPH9u/r3C6k3U
      VuTz4/f2cv6rL7CYFTRbOcdqMvctLDY7BkkCSaZiyyHGv/wzd/oqqK/KWanDAFQ6m64xHkxi
      MCjoqRS2qr2s8RqRvBvZPnOdU6dOI2tJCja/RbHbjJ7SsNltSIAkG9h/7H0++38nGS/8mALn
      kzfoRTI4QRCEVUoMAQmCIKxSIgAIgiCsUiIACIIgrFIiAAiCIKxSIgAIgiCsUiIACIIgrFIi
      AAiCIKxSIgAIgiCsUiIACIIgrFIiAAiCIKxSIgAIgiCsUiIACIIgrFIiAAiCIKxSIgAIgiCs
      UiIACIIgrFIiAAiCIKxSIgAIgiCsUiIACIIgrFIiAAiCIKxSIgAIgiCsUiIACIIgrFIiAAiC
      IKxSIgAIgiCsUiIACIIgrFIiAAiCIKxSIgAIgiCsUv8fgcoTclp+PyUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
